@using EIDSS.Domain.Enumerations
@using static EIDSS.ClientLibrary.Enumerations.EIDSSConstants
@using EIDSS.Web.Components.CrossCutting
@using EIDSS.Web.Services

@inherits EIDSS.Web.Components.Human.Person.PersonInformationSectionBase

@if (StateContainer.IsHeaderVisible)
{
    <PersonHeader @ref="PersonHeaderComponent"/>
}

<div class="card">
    <div class="card-header row">
        <div class="col-11">
            <h4 class="title">@Localizer.GetString(HeadingResourceKeyConstants.PersonInformationHeading)</h4>
        </div>
        <RadzenStack class="col-1 text-right" Visible="@IsNotHdrForm">
            <a id="editPersonInfoSectionButton" href="#personDetailsWizard-h-0" class="edit-section">
                <span class="fas fa-edit fa-lg"></span>
            </a>
        </RadzenStack>
    </div>
</div>

<RadzenTemplateForm @ref="Form" TItem="PersonStateContainer" Data="@StateContainer">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-body">

            <!--Person ID-->
            <div style="padding-bottom:20px;" hidden="@(StateContainer.EIDSSPersonID is null)">
                <label>@Localizer.GetString(FieldLabelResourceKeyConstants.PersonInformationPersonIDFieldLabel)</label>
                <div>@StateContainer.EIDSSPersonID</div>
            </div>
            <div class="form-row">
                <!--Personal ID Type Drop Down-->
                <InterfaceEditorResource InterfaceEditorKey="@FieldLabelResourceKeyConstants.SearchPersonPersonalIDTypeLabel" IsRow="false" CssClass="col-3" For="personalIDType">
                    <RadzenDropDown AllowClear="true" AllowFiltering="true" @bind-Value="@StateContainer.PersonalIDType" Change="OnPersonalIDTypeChange" class="form-control" Data="@PersonalIdTypes" Disabled="StateContainer.IsReadOnly" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" id="personalIDType" LoadData="@GetPersonalIdTypes" Name="personalIDType" TextProperty="Name" TValue="long?" ValueProperty="IdfsBaseReference" />
                </InterfaceEditorResource>

                <!--Personal ID -->
                <div class="col-3">
                    @if (!IsPersonalIDTypeUndefined && StateContainer.IsPersonValidationActive)
                    {
                        <i class="fas fa-asterisk text-danger">&nbsp;</i>
                    }
                    <label>@Localizer.GetString(FieldLabelResourceKeyConstants.PersonalIDFieldLabel)</label>

                    @if (IsPersonalIDTypeExists)
                    {
                        <RadzenTextBox @bind-Value="@StateContainer.PersonalID" class="form-control" id="personalID" MaxLength="@PersonalIDLength" Name="personalID" Disabled="@(IsPersonalIDTypeUndefined || StateContainer.IsReadOnly)" />
                    }
                    else
                    {
                        <RadzenTextBox @bind-Value="@StateContainer.PersonalID" class="form-control" id="personalID" MaxLength="100" Name="personalID" Disabled="@(IsPersonalIDTypeUndefined || StateContainer.IsReadOnly)" />
                    }

                    @if (!IsPersonalIDTypeUndefined && StateContainer.IsPersonValidationActive)
                    {
                        <RadzenRequiredValidator Component="personalID" Popup="false" Text="@Localizer.GetString(MessageResourceKeyConstants.FieldIsRequiredMessage)" />
                    }

                    @if (IsPersonalIDTypeExists && StateContainer.IsPersonValidationActive)
                    {
                        <RadzenLengthValidator Component="personalID" Max="@PersonalIDLength" Min="@PersonalIDLength" Popup="false" Text="@Localizer.GetString(MessageResourceKeyConstants.InvalidFieldMessage)" />
                    }

                    @if (IsPersonalIDTypeExists && IsPersonalIDTypeNumeric && StateContainer.IsPersonValidationActive)
                    {
                        <RadzenRegexValidator Component="personalID"
                                              Text="@Localizer.GetString(MessageResourceKeyConstants.NumberIsOutOfRangeMessage)"
                                              Pattern="^[0-9]*$"
                                              Popup="false" />
                    }

                    @if (StateContainer.IsPersonalIDDuplicated && StateContainer.IsPersonValidationActive)
                    {
                        <div class="rz-message rz-messages-error">
                            @Localizer.GetString(MessageResourceKeyConstants.PersonalIDAlreadyExistsMessage, StateContainer.PersonalID)
                        </div>
                    }
                </div>
                <!--Find in PIN System-->
                <div class="col-3" style="padding-top: 20px;">
                    @if (StateContainer.IsFindPINVisible)
                    {
                        if (StateContainer.IsFindPINDisabled)
                        {
                            <button id="btnFindPIN" disabled class="btn btn-outline-primary btn-sm disabled">@Localizer.GetString(ButtonResourceKeyConstants.FindInPINSystemButton)</button>
                        }
                        else
                        {
                            <button id="btnFindPIN" class="btn btn-outline-primary btn-sm" @onclick="OnFindPINClick">@Localizer.GetString(ButtonResourceKeyConstants.FindInPINSystemButton)</button>
                        }
                    }
                </div>
            </div>
            <div class="form-row">
                <!--Person LastName -->
                <InterfaceEditorResource InterfaceEditorKey="@FieldLabelResourceKeyConstants.PersonInformationLastNameFieldLabel" IsRow="false" CssClass="col-3" For="@nameof(StateContainer.PersonLastName)">
                    <RadzenTextBox @bind-Value="@StateContainer.PersonLastName" class="form-control" id="personLastOrSurName" MaxLength="36" Name="@nameof(StateContainer.PersonLastName)" Disabled="@StateContainer.IsReadOnly" />
                </InterfaceEditorResource>

                <!--Person MiddleName -->
                <InterfaceEditorResource InterfaceEditorKey="@FieldLabelResourceKeyConstants.PersonInformationMiddleNameFieldLabel" IsRow="false" CssClass="col-3" For="personMiddleName">
                    <RadzenTextBox @bind-Value="@StateContainer.PersonMiddleName" class="form-control" id="personMiddleName" MaxLength="36" Name="personMiddleName" Disabled="@StateContainer.IsReadOnly" />
                </InterfaceEditorResource>

                <!--Person FirstName -->
                <InterfaceEditorResource InterfaceEditorKey="@FieldLabelResourceKeyConstants.PersonInformationFirstNameFieldLabel" IsRow="false" CssClass="col-3" For="personFirstName">
                    <RadzenTextBox @bind-Value="@StateContainer.PersonFirstName" class="form-control" id="personFirstName" MaxLength="36" Name="personFirstName" Disabled="@StateContainer.IsReadOnly" />
                </InterfaceEditorResource>
            </div>
            <div class="form-row">
                <!--Date of Birth -->
                <InterfaceEditorResource InterfaceEditorKey="@FieldLabelResourceKeyConstants.PersonInformationDateOfBirthFieldLabel" IsRow="false" CssClass="col-3" For="@($"dateOfBirth_{ParentScopeModel}")" IsRequiredByDefaultBusinessRule="@StateContainer.IsDateOfBirthRequired">
                    <HdrCustomDatePicker
                        FieldType="HdrCustomDatePickerFieldTypes.DateOfBirth"
                        @bind-Value="@StateContainer.DateOfBirth"
                        NoValidate="@IsNotHdrForm"
                        Disabled="@((IsNotHdrForm && StateContainer.IsReadOnly) || (!IsNotHdrForm && HdrDateOfBirthDisabled))"
                        Change="DateOfBirthHasChanged"
                        Name="@($"dateOfBirth_{ParentScopeModel}")"
                        Max="@(StateContainer.DateOfDeath)"/>
                    <input type="hidden" id="dateOfBirthValue" value="@(StateContainer.DateOfBirth?.ToString("d") ?? "")"/>
                </InterfaceEditorResource>

                <!--Age-->
                <InterfaceEditorResource InterfaceEditorKey="@FieldLabelResourceKeyConstants.PersonInformationAgeFieldLabel" IsRow="false" CssClass="col-3" For="age">
                    <RadzenNumeric @bind-Value="@StateContainer.ReportedAge" Change="@(() => SetHumanAgeTypeRequired())" class="form-control" Disabled="@(!StateContainer.IsHumanAgeFieldsCouldBeSelectedByUserWhenDateOfBirthIsNotSet || StateContainer.DateOfBirth != null || StateContainer.IsReadOnly)" id="age" Min="0" Name="age" ReadOnly="false" TValue="int?" />
                    <input type="hidden" id="reportedAgeValue" value="@StateContainer.ReportedAge"/>
                </InterfaceEditorResource>
                <!--Age Type-->
                <InterfaceEditorResource InterfaceEditorKey="@FieldLabelResourceKeyConstants.PersonInformationAgeTypeFieldLabel" IsRow="false" CssClass="col-3" For="humanAgeType">
                    <RadzenDropDown AllowClear="true" AllowFiltering="true" @bind-Value="@StateContainer.ReportedAgeUOMID" class="form-control" Data="@HumanAgeTypes" Disabled="@(!StateContainer.IsHumanAgeFieldsCouldBeSelectedByUserWhenDateOfBirthIsNotSet || StateContainer.DateOfBirth != null || StateContainer.IsReadOnly)" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" id="humanAgeType" LoadData="@GetHumanAgeTypes" Name="humanAgeType" TextProperty="Name" TValue="long?" ValueProperty="IdfsBaseReference" />
                    <input type="hidden" id="humanAgeTypeValue" value="@StateContainer.ReportedAgeUOMID"/>
                    <RadzenRequiredValidator Component="humanAgeType" Text="@Localizer.GetString(MessageResourceKeyConstants.FieldIsRequiredMessage)" Visible="@StateContainer.IsHumanAgeTypeRequired" />
                </InterfaceEditorResource>
            </div>
            <div class="form-row @(StateContainer.IsDOBErrorMessageVisible ? "d-show" : "d-none")" style="margin-top:-15px">
                <div class="col-3 offset-3">
                    <div class="rz-message rz-messages-error">
                        @Localizer.GetString(MessageResourceKeyConstants.PersonInformationDOBErrorMessage)
                    </div>
                </div>
            </div>
            <div class="form-row">
                <!--Gender Drop Down-->
                <InterfaceEditorResource InterfaceEditorKey="@FieldLabelResourceKeyConstants.SearchPersonGenderLabel" IsRow="false" CssClass="col-3" For="genderType">
                    <RadzenDropDown AllowClear="true" AllowFiltering="true" @bind-Value="@StateContainer.GenderType" class="form-control" Data="@GenderTypes" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" id="@($"genderType-{ParentScopeModel}")" LoadData="@GetGenderTypes" Name="@($"genderType-{ParentScopeModel}")" TextProperty="Name" TValue="long?" ValueProperty="IdfsBaseReference" Disabled="StateContainer.IsReadOnly" />
                </InterfaceEditorResource>
            </div>
            <div class="form-row">
                <!--Citizenship Drop Down-->
                <InterfaceEditorResource InterfaceEditorKey="@FieldLabelResourceKeyConstants.PersonInformationCitizenshipFieldLabel" IsRow="false" CssClass="col-3" For="citizenshipType">
                    <RadzenDropDown AllowClear="true" AllowFiltering="true" @bind-Value="@StateContainer.CitizenshipType" class="form-control" Data="@CitizenshipTypes" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" id="@($"citizenshipType-{ParentScopeModel}")" LoadData="@GetCitizenshipTypes" Name="@($"citizenshipType-{ParentScopeModel}")" TextProperty="Name" TValue="long?" ValueProperty="IdfsBaseReference" Disabled="StateContainer.IsReadOnly" />
                </InterfaceEditorResource>

                <!--Passport Number-->
                <InterfaceEditorResource InterfaceEditorKey="@FieldLabelResourceKeyConstants.PersonInformationPassportNumberFieldLabel" IsRow="false" CssClass="col-3" For="passportNumber">
                    <RadzenTextBox @bind-Value="@StateContainer.PassportNumber" class="form-control" id="passportNumber" MaxLength="20" Name="passportNumber" Disabled="@StateContainer.IsReadOnly" />
                </InterfaceEditorResource>
            </div>
            <div class="form-row">
                <!--Date of Death -->
                <InterfaceEditorResource InterfaceEditorKey="@FieldLabelResourceKeyConstants.HumanDiseaseReportFinalOutcomeDateOfDeathFieldLabel" IsRow="false" CssClass="col-3" For="dateOfDeath" IsRequiredByDefaultBusinessRule="@StateContainer.IsDateOfDeathRequired" Visible="@StateContainer.IsDateOfDeathVisible">
                    <RadzenDatePicker AllowClear="true" AllowInput="true" @bind-Value="StateContainer.DateOfDeath" Change="UpdateAge" class="form-control-range" InputClass="form-control" DateFormat="d" id="dateOfDeath" Name="dateOfDeath" TValue="DateTime?" YearRange="@(String.Format("1900:{0}", DateTime.Now.Year))" Max="@DateTime.Today" Min="@StateContainer.DateOfBirth" Disabled="StateContainer.IsReadOnly"/>
                </InterfaceEditorResource>
            </div>
        </div>
    </div>
</RadzenTemplateForm>
