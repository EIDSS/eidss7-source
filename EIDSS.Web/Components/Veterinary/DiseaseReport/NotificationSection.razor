@using EIDSS.Domain.ViewModels.Veterinary
@using EIDSS.Web.Components.CrossCutting
@using EIDSS.Domain.Enumerations

@inherits NotificationSectionBase

<div class="container-fluid">
    <div class="row">
        <div class="col-11">
            <h4 class="header">@SectionHeadingResourceKey</h4>
        </div>
        <div class="col-1 text-right">
            @if (Model.CreatePermissionIndicator && Model.DiseaseReportID <= 0 || (Model.WritePermissionIndicator && Model.DiseaseReportID > 0 && Model.ReportStatusTypeID == (long)DiseaseReportStatusTypeEnum.InProcess && Model.ReportCurrentlyClosedIndicator == false))
            {
                <a class="edit-section" href="#caseDiseaseReportWizard-h-1" id="editNotificationSectionButton">
                    <span class="fas fa-edit fa-lg"></span>
                </a>
            }
        </div>
    </div>
    <RadzenTemplateForm @ref="Form" TItem="DiseaseReportGetDetailViewModel" Data="Model">
        <div class="card">
            <div class="card-body">
                <div class="form-row">
                    <InterfaceEditorResource CssClass="col-5" For="@nameof(Model.ReportedByOrganizationID)" InterfaceEditorKey="@ReportedByOrganizationFieldLabelResourceKey" IsRow="false">
                        <RadzenDropDownDataGrid AllowClear="true" AllowColumnResize="true" AllowFiltering="true" @bind-Value="Model.ReportedByOrganizationID" Change="@(OnReportedByOrganizationChanged)" class="form-control" Data="@Organizations" Disabled="@(Model.ReportDisabledIndicator || (Model.WritePermissionIndicator == false && Model.DiseaseReportID > 0) || (Model.CreatePermissionIndicator == false && Model.DiseaseReportID <= 0))" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" id="@nameof(Model.ReportedByOrganizationID)" Name="@nameof(Model.ReportedByOrganizationID)" PageSize="10" @ref="ReportedByOrganization" TabIndex="1" TextProperty="name" TValue="long?" ValueProperty="idfOffice">
                            <Columns>
                                <RadzenDropDownDataGridColumn Property="name" Title="@Localizer.GetString(ColumnHeadingResourceKeyConstants.AbbreviationColumnHeading)" Width="200px"/>
                            </Columns>
                        </RadzenDropDownDataGrid>
                    </InterfaceEditorResource>
                    <InterfaceEditorResource CssClass="col-4" For="@nameof(Model.ReportedByPersonID)" InterfaceEditorKey="@ReportedByPersonFieldLabelResourceKey" IsRow="false">
                        <div class="input-group mb-3">
                            <RadzenDropDown AllowClear="true" AllowFiltering="true" @bind-Value="Model.ReportedByPersonID" class="form-control" Data="ReportedByPersons" Disabled="@(Model.ReportDisabledIndicator || (Model.WritePermissionIndicator == false && Model.DiseaseReportID > 0) || (Model.CreatePermissionIndicator == false && Model.DiseaseReportID <= 0))" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" id="@nameof(Model.ReportedByPersonID)" LoadData="GetReportedByPersons" Name="@nameof(Model.ReportedByPersonID)" @ref="ReportedByPerson" TabIndex="2" TextProperty="FullName" TValue="long?" ValueProperty="idfPerson"/>
                            @if (Model.CreateEmployeePermissionIndicator && Model.OutbreakID is null && (Model.CreatePermissionIndicator && Model.DiseaseReportID <= 0 || Model.DiseaseReportID > 0 && Model.ReportStatusTypeID == (long)DiseaseReportStatusTypeEnum.InProcess && Model.ReportCurrentlyClosedIndicator == false))
                            {
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary btn-sm" id="addReportedByPerson" @onclick="@(AddReportedByPersonClick)" type="button">
                                        <span class="fas fa-plus" aria-hidden="true"></span>
                                    </button>
                                </div>
                            }
                            else
                            {
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary btn-sm disabled" disabled id="addReportedByPerson" type="button">
                                        <span class="fas fa-plus" aria-hidden="true"></span>
                                    </button>
                                </div>
                            }
                        </div>
                    </InterfaceEditorResource>
                    <InterfaceEditorResource CssClass="col-3" For="@nameof(Model.ReportDate)" InterfaceEditorKey="@InitialReportDateFieldLabelResourceKey" IsRow="false">
                        <br/>
                        <RadzenDatePicker AllowClear="@(Model.OutbreakID is null && (Model.CreatePermissionIndicator && Model.DiseaseReportID <= 0 || Model.DiseaseReportID > 0 && Model.ReportStatusTypeID == (long)DiseaseReportStatusTypeEnum.InProcess && Model.ReportCurrentlyClosedIndicator == false))" @bind-Value="Model.ReportDate" DateFormat="d" Disabled="@(Model.ReportDisabledIndicator || (Model.WritePermissionIndicator == false && Model.DiseaseReportID > 0) || (Model.CreatePermissionIndicator == false && Model.DiseaseReportID <= 0))" id="@nameof(Model.ReportDate)" Name="@nameof(Model.ReportDate)" @ref="InitialReportDate" TabIndex="3" TValue="DateTime?"/>
                        <RadzenCompareValidator Component="@nameof(Model.ReportDate)" Operator="CompareOperator.LessThanEqual" Popup="false" Text="@Localizer.GetString(MessageResourceKeyConstants.FutureDatesAreNotAllowedMessage)" Value="DateTime.Now"/>
                    </InterfaceEditorResource>
                </div>
                <fieldset>
                    <legend>@InvestigatedHeadingResourceKey</legend>

                    <div class="form-row">
                        <InterfaceEditorResource CssClass="col-5" For="@nameof(Model.InvestigatedByOrganizationID)" InterfaceEditorKey="@InvestigatedByOrganizationFieldLabelResourceKey" IsRow="false">
                            <RadzenDropDownDataGrid AllowClear="true" AllowColumnResize="true" AllowFiltering="true" @bind-Value="Model.InvestigatedByOrganizationID" Change="@(args => OnInvestigatedByOrganizationChanged(args))" class="form-control" Data="@Organizations" Disabled="@(Model.ReportDisabledIndicator || (Model.WritePermissionIndicator == false && Model.DiseaseReportID > 0) || (Model.CreatePermissionIndicator == false && Model.DiseaseReportID <= 0))" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" id="@nameof(Model.InvestigatedByOrganizationID)" Name="@nameof(Model.InvestigatedByOrganizationID)" PageSize="10" @ref="InvestigatedByOrganization" TabIndex="4" TextProperty="name" TValue="long?" ValueProperty="idfOffice">
                                <Columns>
                                    <RadzenDropDownDataGridColumn Property="name" Title="@Localizer.GetString(ColumnHeadingResourceKeyConstants.AbbreviationColumnHeading)" Width="200px"/>
                                </Columns>
                            </RadzenDropDownDataGrid>
                        </InterfaceEditorResource>
                        <InterfaceEditorResource CssClass="col-4" For="@nameof(Model.InvestigatedByPersonID)" InterfaceEditorKey="@InvestigatedByPersonFieldLabelResourceKey" IsRow="false">
                            <div class="input-group mb-3">
                                <RadzenDropDown AllowClear="true" AllowFiltering="true" @bind-Value="Model.InvestigatedByPersonID" class="form-control" Data="InvestigatedByPersons" Disabled="@(Model.ReportDisabledIndicator || (Model.WritePermissionIndicator == false && Model.DiseaseReportID > 0) || (Model.CreatePermissionIndicator == false && Model.DiseaseReportID <= 0))" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LoadData="GetInvestigatedByPersons" id="@nameof(Model.InvestigatedByPersonID)" Name="@nameof(Model.InvestigatedByPersonID)" @ref="InvestigatedByPerson" TabIndex="5" TextProperty="FullName" TValue="long?" ValueProperty="idfPerson"/>
                                @if (Model.CreateEmployeePermissionIndicator && Model.OutbreakID is null && (Model.CreatePermissionIndicator && Model.DiseaseReportID <= 0 || Model.DiseaseReportID > 0 && Model.ReportStatusTypeID == (long)DiseaseReportStatusTypeEnum.InProcess && Model.ReportCurrentlyClosedIndicator == false))
                                {
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-secondary btn-sm" id="addInvestigatedByPerson" @onclick="@(AddInvestigatedByPersonClick)" type="button">
                                            <span class="fas fa-plus" aria-hidden="true"></span>
                                        </button>
                                    </div>
                                }
                                else
                                {
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-secondary btn-sm disabled" disabled id="addReportedByPerson" type="button">
                                            <span class="fas fa-plus" aria-hidden="true"></span>
                                        </button>
                                    </div>
                                }
                            </div>
                        </InterfaceEditorResource>
                    </div>
                    <div class="form-row">
                        <InterfaceEditorResource CssClass="col-3" For="@nameof(Model.AssignedDate)" InterfaceEditorKey="@AssignedDateFieldLabelResourceKey" IsRow="false">
                            <br/>
                            <RadzenDatePicker AllowClear="@(Model.OutbreakID is null && (Model.CreatePermissionIndicator && Model.DiseaseReportID <= 0 || Model.DiseaseReportID > 0 && Model.ReportStatusTypeID == (long)DiseaseReportStatusTypeEnum.InProcess && Model.ReportCurrentlyClosedIndicator == false))" @bind-Value="Model.AssignedDate" DateFormat="d" Disabled="@(Model.ReportDisabledIndicator || (Model.WritePermissionIndicator == false && Model.DiseaseReportID > 0) || (Model.CreatePermissionIndicator == false && Model.DiseaseReportID <= 0))" id="@nameof(Model.AssignedDate)" Name="@nameof(Model.AssignedDate)" @ref="AssignedDate" TabIndex="6" TValue="DateTime?" />
                            <RadzenCompareValidator Component="@nameof(Model.AssignedDate)" Operator="CompareOperator.GreaterThanEqual" Popup="false" Text="@Localizer.GetString(ReportDateAssignedDateCompareValidatorResourceKey)" Value="Model.ReportDate"/>
                            <RadzenCompareValidator Component="@nameof(Model.AssignedDate)" Operator="CompareOperator.LessThanEqual" Popup="false" Text="@Localizer.GetString(MessageResourceKeyConstants.FutureDatesAreNotAllowedMessage)" Value="DateTime.Now"/>
                        </InterfaceEditorResource>
                        <InterfaceEditorResource CssClass="col-3" For="@nameof(Model.InvestigationDate)" InterfaceEditorKey="@InvestigationDateFieldLabelResourceKey" IsRow="false">
                            <br/>
                            <RadzenDatePicker AllowClear="@(Model.OutbreakID is null && (Model.CreatePermissionIndicator && Model.DiseaseReportID <= 0 || Model.DiseaseReportID > 0 && Model.ReportStatusTypeID == (long)DiseaseReportStatusTypeEnum.InProcess && Model.ReportCurrentlyClosedIndicator == false))" @bind-Value="Model.InvestigationDate" DateFormat="d" Disabled="@(Model.ReportDisabledIndicator || (Model.WritePermissionIndicator == false && Model.DiseaseReportID > 0) || (Model.CreatePermissionIndicator == false && Model.DiseaseReportID <= 0))" id="@nameof(Model.InvestigationDate)" Name="@nameof(Model.InvestigationDate)" @ref="InvestigationDate" TabIndex="7" TValue="DateTime?" />
                            <RadzenCompareValidator Component="@nameof(Model.InvestigationDate)" Operator="CompareOperator.LessThanEqual" Popup="false" Text="@Localizer.GetString(MessageResourceKeyConstants.FutureDatesAreNotAllowedMessage)" Value="DateTime.Now"/>
                            <RadzenCompareValidator Component="@nameof(Model.InvestigationDate)" Operator="CompareOperator.GreaterThanEqual" Popup="false" Text="@Localizer.GetString(ReportDateInvestigationDateCompareValidatorResourceKey)" Value="Model.ReportDate"/>
                            <RadzenCompareValidator Component="@nameof(Model.InvestigationDate)" Operator="CompareOperator.GreaterThanEqual" Popup="false" Text="@Localizer.GetString(AssignedDateInvestigationDateCompareValidatorResourceKey)" Value="Model.AssignedDate"/>
                        </InterfaceEditorResource>
                    </div>
                </fieldset>
                <fieldset>
                    <legend>@DataEntryHeadingResourceKey</legend>

                    <div class="form-row">
                        <InterfaceEditorResource CssClass="col-5" For="@nameof(Model.SiteName)" InterfaceEditorKey="@DataEntrySiteFieldLabelResourceKey" IsRow="false">
                            <RadzenTextBox @bind-Value="Model.SiteName" class="form-control" Disabled="true" Name="@nameof(Model.SiteName)"/>
                        </InterfaceEditorResource>
                        <InterfaceEditorResource CssClass="col-4" For="@nameof(Model.EnteredByPersonName)" InterfaceEditorKey="@DataEntryOfficerFieldLabelResourceKey" IsRow="false">
                            <RadzenTextBox @bind-Value="Model.EnteredByPersonName" class="form-control" Disabled="true" Name="@nameof(Model.EnteredByPersonName)"/>
                        </InterfaceEditorResource>
                        <InterfaceEditorResource CssClass="col-3" For="@nameof(Model.EnteredDate)" InterfaceEditorKey="@DataEntryDateFieldLabelResourceKey" IsRow="false">
                            <br/>
                            <RadzenDatePicker AllowClear="false" @bind-Value="Model.EnteredDate" DateFormat="d" Disabled="true" Name="@nameof(Model.EnteredDate)" TValue="DateTime?"/>
                        </InterfaceEditorResource>
                    </div>
                </fieldset>
            </div>
        </div>
    </RadzenTemplateForm>
</div>