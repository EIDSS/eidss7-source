@using EIDSS.Web.Components.Human.ActiveSurveillanceSession
@{
    ViewData["Title"] = Localizer.GetString(HeadingResourceKeyConstants.HumanActiveSurveillanceSessionPageHeading);
}

<partial name="_ErrorModalNoTitlePartial" />

<component type="typeof(Details)" render-mode="Server"/>

<script src="~/js/Human/person.js"></script>

<script type="text/javascript">
    var gPreviousCurrentIndex;
    var gPreviousNewIndex;

    function initializeSideBar(enableDelete, enableSave) {
        $("#HumanActiveSurveillanceSessionWizard").steps({
            headerTag: "h4",
            titleTemplate: '<span id="erroredStep" class="fa-stack text-danger" title="#title#"><i class="fas fa-circle fa-stack-2x"></i><i class="fas fa-times fa-stack-1x fa-inverse"></i></span><span id="step" class="fa-stack text-muted" title="#title#"><i class="fas fa-circle fa-stack-2x"></i><i class="fas fa-check fa-stack-1x fa-inverse"></i></span><span id="completedStep" class="fa-stack text-success" title="#title#"><i class="fas fa-circle fa-stack-2x"></i><i class="fas fa-check fa-stack-1x fa-inverse"></i></span><span id="reviewStep" class="fa-stack text-muted" title="#title#"><i class="fas fa-circle fa-stack-2x"></i><i class="fas fa-clipboard-list fa-stack-1x fa-inverse"></i></span> <span class="stepTitleText">#title#</span>',
            bodyTag: "section",
            transitionEffect: "none",
            stepsOrientation: "vertical",
            startIndex: 0,
            enableAllSteps: true,
            enableCancelButton: true,
            enableDeleteButton: enableDelete,
            enableKeyNavigation: true,
            enableFinishButton: enableSave,
            enableContentCache: true,
            isBlazor: true,
            labels: {
                cancel: "@Localizer.GetString(ButtonResourceKeyConstants.CancelButton)",
                finish: "@Localizer.GetString(ButtonResourceKeyConstants.SaveButton)",
                next: "@Localizer.GetString(ButtonResourceKeyConstants.NextButton)",
                previous: "@Localizer.GetString(ButtonResourceKeyConstants.PreviousButton)",
                loading: "@Localizer.GetString(MessageResourceKeyConstants.PleaseWaitWhileWeProcessYourRequestMessage)",
                delete: "@Localizer.GetString(ButtonResourceKeyConstants.DeleteButton)",
            },
            onInit: function (event) {
                $("#printButton").hide();
            },
            onCanceled: function (event) {
                HumanActiveSurveillanceSession.DotNetReference.invokeMethodAsync("Cancel");
            },
            onStepChanging: function (event, currentIndex, newIndex) {
                gPreviousCurrentIndex = currentIndex;
                gPreviousNewIndex = newIndex;
                
                switch (currentIndex) {
                    case 0:
                        validateHAS("HumanActiveSurveillanceSessionWizard", currentIndex, newIndex);
                        break;
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        return true;
                        break;
                    case 5:
                        return true;
                        break;
                }

                switch (newIndex) {
                    case 5:
                        $("[name='dSummaryHeader']").hide();
                        break;
                    default:
                        $("[name='dSummaryHeader']").show();
                        break;
                }
            },
            onDeleting: function (event) {
                HumanActiveSurveillanceSession.DotNetReference.invokeMethodAsync("OnDelete");
            },
            onPrinting: function (event) {
                HumanActiveSurveillanceSession.DotNetReference.invokeMethodAsync("OnPrint");
            },
            onFinished: function (event) {
                var bValidated = true;
                
                for (var iSection = 0; iSection < 6; iSection++) {
                    validateHAS("HumanActiveSurveillanceSessionWizard", iSection, undefined);
                }

                for (var iSection = 0; iSection < 6; iSection++){
                    if ($("#HumanActiveSurveillanceSessionWizard-t-" + iSection + " #erroredStep").is(":visible")){
                        bValidated = false;
                        break;
                    }
                }

                if (bValidated) {
                    $(".fa-stack.text-muted").hide();
                    HumanActiveSurveillanceSession.DotNetReference.invokeMethodAsync("Submit");
                }
                else{
                    $("#HumanActiveSurveillanceSessionWizard").steps("setStep", 0);

                    $('html').stop().animate( { 'scrollTop': $($(".rz-messages-error")[0]).parent().offset().top }, 100, 'swing', function() { });
                }
            }
        });
    };

    var HumanActiveSurveillanceSession = {};
        HumanActiveSurveillanceSession.DotNetReference = null;
        HumanActiveSurveillanceSession.SetDotNetReference = function (pDotNetReference) {
            HumanActiveSurveillanceSession.DotNetReference = pDotNetReference;
        };

    function validateHAS(wizard, stepNumber, nextStepNumber) {
        var result = new Promise(function (validateSection, reject) {
            validateSection( HumanActiveSurveillanceSession.DotNetReference.invokeMethodAsync("ValidateSection"))
        });
        result.then(function (value) {
            if (value) {
                $("#" + wizard + "-t-" + stepNumber).find("#erroredStep").hide();
                $("#" + wizard + "-t-" + stepNumber).find("#completedStep").show();
            }
        });
    };

    function navigateToReviewStep() {
        $("#HumanActiveSurveillanceSessionWizard").steps("setStep", 5);
    };
    
    function insufficientPermissions() {
        showErrorModalNoTitle('@Localizer.GetString(MessageResourceKeyConstants.WarningMessagesYourPermissionsAreInsufficientToPerformThisFunctionMessage)').then(response => {
            if (response) {
                $("#errorModal").modal("hide");
                $(".modal-backdrop").remove();
                window.location.replace('@Url.Action("Index", "Dashboard", new {Area = "Administration"})');
            }
        });
    };
</script>