
@model EIDSS.Web.ViewModels.Human.DiseaseReportSummaryPageViewModel;
@using EIDSS.Web.TagHelpers.Models.EIDSSModal;
@using Microsoft.AspNetCore.Mvc.Razor.TagHelpers;
@using EIDSS.Web.TagHelpers.Models.EIDSSGrid;

@{
    var defaultReference = new Select2DataItem();

    if (Model.ReportStatusID != 0 && Model.ReportStatus != null && Model.ReportStatus != "")
        defaultReference = new Select2DataItem() { id = Model.ReportStatusID.ToString(), text = Model.ReportStatus };
    else
        defaultReference = new Select2DataItem() { id = EIDSSConstants.CaseStatus.InProgress.ToString(), text = Model.DefaultReportStatus };

    Model.ReportStatusDD = new Select2Configruation();
    Model.ReportStatusDD.DropDownId = "ReportStatusDD";
    Model.ReportStatusDD.ControlTargetType = DropDownTargetTypes.DropDown;
    Model.ReportStatusDD.Label = Localizer.GetString(FieldLabelResourceKeyConstants.HumanDiseaseReportSummaryReportStatusFieldLabel);
    Model.ReportStatusDD.Endpoint = @Url.Action("BaseReferenceByReferenceTypeIDListForSelect2DropDown", "CrossCutting", new { Area = "CrossCutting", referenceTypeID = 19000111 });
    Model.ReportStatusDD.isVisible = true;
    Model.ReportStatusDD.CustomJsOnChangeFunction = "GetSiteAlertForReopenClosedHDR";
    Model.ReportStatusDD.defaultSelect2Selection = defaultReference;

    defaultReference = new Select2DataItem();

    if (Model.ReportTypeID != 0 && Model.ReportType != null && Model.ReportType != ""){
        defaultReference = new Select2DataItem() { id = Model.ReportTypeID.ToString(), text = Model.ReportType };
    }
    else {
        defaultReference = new Select2DataItem() { id = EIDSSConstants.CaseReportType.Passive.ToString(), text = Model.DefaultReportType };
    }

    Model.ReportTypeDD = new Select2Configruation();
    Model.ReportTypeDD.DropDownId = "ReportTypeDD";
    Model.ReportTypeDD.ControlTargetType = DropDownTargetTypes.DropDown;
    Model.ReportTypeDD.Label = Localizer.GetString(FieldLabelResourceKeyConstants.HumanDiseaseReportSummaryReportTypeFieldLabel);
    Model.ReportTypeDD.Endpoint = @Url.Action("BaseReferenceByReferenceTypeIDListForSelect2DropDown", "CrossCutting", new { Area = "CrossCutting", referenceTypeID = 19000144 });
    Model.ReportTypeDD.isVisible = true;
    Model.ReportTypeDD.CustomJsOnChangeFunction = "EnableDisableSessionID";

    Model.ReportTypeDD.defaultSelect2Selection = defaultReference;


}

<form id="SummaryForm">
<div class="card">
       
<div class="card-body">

    <div class="row">
        <div class="form-group col-md-6">
            <label asp-for="@Model.Disease" field-label-for="@FieldLabelResourceKeyConstants.HumanDiseaseReportSummaryDiseaseFieldLabel" class="control-label"></label>
            <input asp-for="@Model.Disease" class="form-control" disabled>
        </div>               
        <div class="form-group col-md-6">
            @if (!string.IsNullOrEmpty(Model.ReportID))
            {
                <label asp-for="@Model.ReportID" field-label-for="@FieldLabelResourceKeyConstants.HumanAggregateDiseaseReportReportIDFieldLabel" class="control-label"></label>
                <input asp-for="@Model.ReportID" class="form-control" disabled>
            }
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-6">
            <i class="fas fa-asterisk text-danger"></i>
            <eidss-select2DropDown id="@Model.ReportStatusDD.DropDownId"
                                   name="@Model.ReportStatusDD.DropDownId"
                                   control-target-id="@Model.ReportStatusDD.ControltargetId"
                                   target-type="@Model.ReportStatusDD.ControlTargetType"
                                   target-ajax-url="@Model.ReportStatusDD.ControlTargetUrl"
                                   selectct2-default-data="@Model.ReportStatusDD.defaultSelect2Selection"
                                   end-point="@Model.ReportStatusDD.Endpoint"
                                   label-name="@Model.ReportStatusDD.Label"
                                   is-visible="@Model.ReportStatusDD.isVisible"
                                   custom-js-on-change-function="@Model.ReportStatusDD.CustomJsOnChangeFunction"
                                   class-name="form-control"
                                   asp-for="@Model.ReportStatusDD">
            </eidss-select2DropDown>

        </div>
        <div class="form-group col-md-6">
            <label asp-for="@Model.PersonID" field-label-for="@FieldLabelResourceKeyConstants.PersonInformationPersonIDFieldLabel" class="control-label"></label>
            <input asp-for="@Model.PersonID" class="form-control" disabled>
        </div>
    </div>
    @if (!string.IsNullOrEmpty(Model.LegacyID))
    {
        <div class="row">
            <div class="form-group col-md-6">
                <label asp-for="@Model.LegacyID" field-label-for="@FieldLabelResourceKeyConstants.HumanDiseaseReportSummaryLegacyIDFieldLabel" class="control-label"></label>
                <input asp-for="@Model.LegacyID" class="form-control" disabled>
            </div>
        </div>
    }
</div>
            
<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-lg-11">
                <h4>@Localizer.GetString(HeadingResourceKeyConstants.HumanDiseaseReportDiseaseReportSummaryHeading)</h4>
            </div>
            <div class="col-lg-1">
                <span id="sReportSummaryToggle" class="fas fa-caret-up align-bottom fa-2x e-dark-blue" data-toggle="collapse" data-target="#dReportSummary" aria-expanded="false" onclick="toggleReportSummary();">&nbsp;</span>
            </div>
        </div>
    </div>
    <div id="dReportSummary" class="card-body show">
        <div class="row">
            <div class="form-group col-md-6">

                @if (Model.ReportStatusID != 0 && Model.ReportStatusID == (long) VeterinaryDiseaseReportStatusTypes.Closed)
                {
                    <i class="fas fa-asterisk text-danger"></i>
                    <eidss-select2DropDown id="@Model.ReportTypeDD.DropDownId"
                                           name="@Model.ReportTypeDD.DropDownId"
                                           control-target-id="@Model.ReportTypeDD.ControltargetId"
                                           target-type="@Model.ReportTypeDD.ControlTargetType"
                                           target-ajax-url="@Model.ReportTypeDD.ControlTargetUrl"
                                           selectct2-default-data="@Model.ReportTypeDD.defaultSelect2Selection"
                                           end-point="@Model.ReportTypeDD.Endpoint"
                                           label-name="@Model.ReportTypeDD.Label"
                                           is-visible="@Model.ReportTypeDD.isVisible"
                                           is-disabled=true
                                           custom-js-on-change-function="@Model.ReportTypeDD.CustomJsOnChangeFunction"
                                           asp-for="@Model.ReportTypeDD"
                                           class-name="form-control">
                    </eidss-select2DropDown>
                }
                else
                {
                    <i class="fas fa-asterisk text-danger"></i>
                    <eidss-select2DropDown id="@Model.ReportTypeDD.DropDownId"
                                           name="@Model.ReportTypeDD.DropDownId"
                                           control-target-id="@Model.ReportTypeDD.ControltargetId"
                                           target-type="@Model.ReportTypeDD.ControlTargetType"
                                           target-ajax-url="@Model.ReportTypeDD.ControlTargetUrl"
                                           selectct2-default-data="@Model.ReportTypeDD.defaultSelect2Selection"
                                           end-point="@Model.ReportTypeDD.Endpoint"
                                           label-name="@Model.ReportTypeDD.Label"
                                           is-visible="@Model.ReportTypeDD.isVisible"
                                           custom-js-on-change-function="@Model.ReportTypeDD.CustomJsOnChangeFunction"
                                           is-disabled="@Model.IsReportTypeDisabled"
                                           asp-for="@Model.ReportTypeDD"
                                           class-name="form-control">
                    </eidss-select2DropDown>
                }
            </div>
            <div class="form-group col-md-6">
                @if (Model.ReportTypeID == 4578940000001)
                {
                    <label asp-for="@Model.SessionID" field-label-for="@FieldLabelResourceKeyConstants.HumanDiseaseReportSummarySessionIDFieldLabel" class="control-label"></label>
                    <input asp-for="@Model.SessionID" class="form-control" disabled>
                }
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label asp-for="@Model.PersonName" field-label-for="@FieldLabelResourceKeyConstants.HumanDiseaseReportSummaryPersonNameFieldLabel" class="control-label"></label>
                <input asp-for="@Model.PersonName" class="form-control" disabled>
            </div>
            <div class="form-group col-md-6">
                        
                          
                @if (!string.IsNullOrEmpty(Model.ReportID))
                {
                    if (!string.IsNullOrEmpty(Model.relatedChildHumanDiseaseReportIdList))
                    {
                        var reports = Model.relatedChildHumanDiseaseReportIdList.Split(",");
                               
                        if (reports != null && reports.Length > 0)
                        {
                            int ct = 1;
                            <label asp-for="@Model.PersonName" field-label-for="@FieldLabelResourceKeyConstants.HumanDiseaseReportSummaryRelatedToFieldLabel" class="control-label"></label>
                            foreach (var item in reports)
                            {
                                var itemArr = item.Split("-");
                                if (itemArr.Length > 1)
                                {
                                    var caseID = itemArr[0];
                                    var strCaseId = "";
                                    if (reports.Length > ct)
                                    {
                                        strCaseId = itemArr[1] + ",";
                                    }
                                    else
                                    {
                                        strCaseId = itemArr[1];
                                    }

                                    <a href="@Url.Action("LoadDiseaseReport", "HumanDiseaseReport",  new { caseId =caseID, isEdit=true})">@strCaseId</a>
                                    ct++;
                                }
                            }
                        }
                    }
                    else if(!string.IsNullOrEmpty(Model.relatedParentHumanDiseaseReportIdList))
                    {
                        var reports = Model.relatedParentHumanDiseaseReportIdList.Split(",");
                        if (reports != null && reports.Length > 0)
                        {   int ct = 1;
                            <label asp-for="@Model.PersonName" field-label-for="@FieldLabelResourceKeyConstants.HumanDiseaseReportSummaryRelatedToFieldLabel" class="control-label"></label>
                            foreach (var item in reports)
                            {
                                var itemArr = item.Split("-");
                                if (itemArr.Length > 1)
                                {
                                    var caseID = itemArr[0];
                                    var strCaseId = "";
                                    if (reports.Length > ct)
                                    {
                                        strCaseId = itemArr[1] + ",";
                                    }
                                    else
                                    {
                                        strCaseId = itemArr[1];
                                    }
                                    <a href="@Url.Action("LoadDiseaseReport", "HumanDiseaseReport",  new { caseId =caseID, isEdit=true})">@strCaseId</a>
                                    ct++;
                                }
                            }
                        }   
                    }
                }
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label asp-for="@Model.DateEntered" field-label-for="@FieldLabelResourceKeyConstants.HumanDiseaseReportSummaryDateEnteredFieldLabel" class="control-label"></label>
                <input asp-for="@Model.DateEntered" class="form-control" disabled>
            </div>
            <div class="form-group col-md-6">
                <label asp-for="@Model.EnteredBy" field-label-for="@FieldLabelResourceKeyConstants.HumanDiseaseReportSummaryEnteredByFieldLabel" class="control-label"></label>
                <input asp-for="@Model.EnteredBy" class="form-control" disabled>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label asp-for="@Model.EnteredByOrganization" field-label-for="@FieldLabelResourceKeyConstants.HumanDiseaseReportSummaryEnteredByOrganizationFieldLabel" class="control-label"></label>
                <input asp-for="@Model.EnteredByOrganization" class="form-control" disabled>
            </div>
            <div class="form-group col-md-6">
                @if (@Model.DateLastUpdated != null)
                {
                    <label asp-for="@Model.DateLastUpdated" field-label-for="@FieldLabelResourceKeyConstants.HumanDiseaseReportSummaryDateLastUpdatedFieldLabel" class="control-label"></label>
                    <input asp-for="@Model.DateLastUpdated" class="form-control" disabled>
                }
            </div>
        </div>
        <div class="form-row">                
            <div class="form-group col-md-6" id="divSessionID" style="display:none">
                <label asp-for="@Model.SessionID" field-label-for="@FieldLabelResourceKeyConstants.HumanDiseaseReportSummarySessionIDFieldLabel" class="control-label"></label>
                <input asp-for="@Model.SessionID" class="form-control" disabled>
            </div>                    
            <div class="form-group col-md-6">                  
                @if (!string.IsNullOrEmpty(Model.CaseClassification) && Model.blnInitialSSD != null && !Model.blnInitialSSD.Value && Model.blnFinalSSD != null && !Model.blnFinalSSD.Value)
                { 
                    <label asp-for="@Model.CaseClassification" field-label-for="@FieldLabelResourceKeyConstants.HumanDiseaseReportSummaryCaseClassificationFieldLabel" class="control-label"></label>
                    <input asp-for="@Model.CaseClassification" class="form-control" disabled>
                }

            </div>
        </div>
    </div>
</div>
</div>
</form>


<partial name="_ValidationScriptsPartial" />

<script>
 $(document).ready(function () {
     EnableDisableSessionID();
     var canReopenClosedReport='@Model.blnCanReopenClosedCase';
     var isReportClosed='@Model.IsReportClosed';
     if(canReopenClosedReport!='True' && isReportClosed=='True'  )
     {
         $("#ReportStatusDD").prop('disabled',true);
     }
     else
     {
         $("#ReportStatusDD").prop('disabled',false);
     }

     $("#ReportStatusDD").select2({ allowClear: false});

    });

    // Toggle Search button
    function toggleReportSummary() {
        if ($("#dReportSummary").hasClass("show")) {
            // $("#dResults").show();
            $("#sReportSummaryToggle").removeClass("fa-caret-up").addClass("fa-caret-down");
        }
        else {
            $("#sReportSummaryToggle").removeClass("fa-caret-down").addClass("fa-caret-up");
        }
    }

    function EnableDisableSessionID(data) {
        var reportType = $("#ReportTypeDD").val();
        if (reportType == 4578940000001) {
            $("#divSessionID").prop("style", "display: block;");
        }
        else {
            $("#divSessionID").prop("style", "display: none;");
        }
    }

     function GetSiteAlertForReopenClosedHDR(data)
    {
        var model={};
        var isReportClosed='@Model.IsReportClosed';
        var reportStatus= $("#ReportStatusDD").val();
        model.idfHumanCase='@Model.idfHumanCase';
        model.idfsSite='@Model.idfsSite';
        model.DiseaseID = '@Model.DiseaseID';
        if(isReportClosed=='True' && reportStatus==10109001)
        {
          $.ajax({
                url: '@Url.Action("GetSiteAlertForReopenClosedHDR", "DiseaseReport", new { Area = "Human"})?data=' + JSON.stringify(model),
                type: 'GET',
                async:false,
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    
                },
                complete: function (data) {
                },
                error: function (request, error) {
                    alert("failure" + error);
                }
            });
          }
     }
    //function GetSiteAlertForReopenClosedHDR(data)
    //{
        
       


    //    var model={};
    //    var isReportClosed='@Model.IsReportClosed';
    //    var reportStatus= $("#ReportStatusDD").val();
    //    model.idfHumanCase='@Model.idfHumanCase';
    //    model.idfsSite='@Model.idfsSite';
    //    if(isReportClosed=='True' && reportStatus==10109001)
    //    {
    //        //var loadURL="@Url.Action("LoadDiseaseReport", "HumanDiseaseReport", new { caseId =@Model.idfHumanCase, isEdit=true,IsReopenClosedReport=true })";
    //        alert('@Url.Action("LoadDiseaseReport", "HumanDiseaseReport", new { area = "Human"})?caseId=' + model.idfHumanCase +'&isEdit=true' +'&StartIndex=1&IsReopenClosedReport='+true);
    //          $.ajax({
    //            url: '@Url.Action("LoadDiseaseReport", "HumanDiseaseReport", new { area = "Human"})?caseId=' + model.idfHumanCase +'&isEdit=true' +'&StartIndex=1&IsReopenClosedReport='+true,
    //            type: 'GET',
    //            async:false,
    //            contentType: "application/json; charset=utf-8",
    //            success: function (data) {
    //                    $.ajax({
    //                    url: '@Url.Action("GetSiteAlertForReopenClosedHDR", "DiseaseReport", new { Area = "Human"})?data=' + JSON.stringify(model),
    //                    type: 'GET',
    //                    async:false,
    //                    contentType: "application/json; charset=utf-8",
    //                    success: function (data) {                    
    //                    },
    //                    complete: function (data) {
    //                    },
    //                    error: function (request, error) {
    //                        alert("failure" + error);
    //                    }
    //                });
    //            }, 
    //            complete: function (data) {
    //            },
    //            error: function (request, error) {
    //                alert("failure" + error);
    //            }
    //            });
    //    }    
            //EnableDisableAllControls
  
             //$("#diseaseDD").prop('disabled',true);
             //$("#statusOfPatientAtNotificationDD").prop('disabled',true);
             //$("#notificationSentByFacilityDD").prop('disabled',true);
             //$("#notificationSentByNameDD").prop('disabled',true);
             //$("#notificationReceivedByFacilityDD").prop('disabled',true);
             //$("#notificationReceivedByNameDD").prop('disabled',true);
             //$("#currentLocationOfPatientDD").prop('disabled',true);
             //$("#hospitalNameDD").prop('disabled',true);
             //$("#NotificationSection_dateOfCompletion").prop('disabled',true);
             //$("#NotificationSection_dateOfDiagnosis").prop('disabled',true);
             //$("#NotificationSection_dateOfNotification").prop('disabled',true);
             //$("#NotificationSection_localIdentifier").prop('disabled',true);
             //$("#NotificationSection_strOtherLocation").prop('disabled',true);
       
             

      
          
            
    //}
</script>


