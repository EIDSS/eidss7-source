
@model EIDSS.Web.ViewModels.Human.DiseaseReportPersonalInformationPageViewModel;
@using EIDSS.Web.TagHelpers.Models.EIDSSModal;
@using Microsoft.AspNetCore.Mvc.Razor.TagHelpers;
@using EIDSS.Web.TagHelpers.Models.EIDSSGrid;

@{

    //Radio Buttons
    Model.PersonInfo.IsAnotherAddressList = new Dictionary<string, string>();
    Model.PersonInfo.IsAnotherAddressList.Add("10100001", "Yes");
    Model.PersonInfo.IsAnotherAddressList.Add("10100002", "No");

    Model.PersonInfo.IsAnotherPhoneList = new Dictionary<string, string>();
    Model.PersonInfo.IsAnotherPhoneList.Add("10100001", "Yes");
    Model.PersonInfo.IsAnotherPhoneList.Add("10100002", "No");


    Model.PersonInfo.IsThisPersonCurrentlyAttendSchool = new Dictionary<string, string>();
    Model.PersonInfo.IsThisPersonCurrentlyAttendSchool.Add("10100001", "Yes");
    Model.PersonInfo.IsThisPersonCurrentlyAttendSchool.Add("10100002", "No");
    Model.PersonInfo.IsThisPersonCurrentlyAttendSchool.Add("10100003", "UnKnown");

    Model.PersonInfo.IsThisPersonCurrentlyEmployed = new Dictionary<string, string>();
    Model.PersonInfo.IsThisPersonCurrentlyEmployed.Add("10100001", "Yes");
    Model.PersonInfo.IsThisPersonCurrentlyEmployed.Add("10100002", "No");
    Model.PersonInfo.IsThisPersonCurrentlyEmployed.Add("10100003", "UnKnown");


    //Select 2
    var defaultReference = new Select2DataItem();

    if (Model.PersonInfo.PersonalIDType != null && Model.PersonInfo.PersonalIDTypeName != null && Model.PersonInfo.PersonalIDTypeName != "")
        defaultReference = new Select2DataItem() { id = Model.PersonInfo.PersonalIDType.ToString(), text = Model.PersonInfo.PersonalIDTypeName };
    Model.PersonalIdTypeDD = new Select2Configruation();
    Model.PersonalIdTypeDD.DropDownId = "PersonalIdTypeDD";
    Model.PersonalIdTypeDD.ControlTargetType = DropDownTargetTypes.DropDown;
    Model.PersonalIdTypeDD.Label = Localizer.GetString(FieldLabelResourceKeyConstants.PersonalIDTypeFieldLabel);
    Model.PersonalIdTypeDD.Endpoint = @Url.Action("BaseReferenceByReferenceTypeIDListForSelect2DropDown", "CrossCutting", new { Area = "CrossCutting", referenceTypeID = 19000148 });
    Model.PersonalIdTypeDD.isVisible = true;
    Model.PersonalIdTypeDD.defaultSelect2Selection = defaultReference;
    // Model.PersonalIdTypeDD.CustomJsOnChangeFunction = "CheckPersonalIDRequired";
    // Model.PersonalIdTypeDD.CustomJsOnClearFunction = "disablePersonalID";
    // Model.PersonalIdTypeDD.CustomJsOnUnselectFunction = "disablePersonalID";


    defaultReference = new Select2DataItem();

    if (Model.PersonInfo.SchoolidfsCountry != null && Model.PersonInfo.SchoolCountry != null && Model.PersonInfo.SchoolCountry != "")
        defaultReference = new Select2DataItem() { id = Model.PersonInfo.SchoolidfsCountry.ToString(), text = Model.PersonInfo.SchoolCountry };

    Model.SchoolAddressCountryDD = new Select2Configruation();
    Model.SchoolAddressCountryDD.DropDownId = "SchoolAddressCountryDD";
    Model.SchoolAddressCountryDD.ControlTargetType = DropDownTargetTypes.DropDown;
    Model.SchoolAddressCountryDD.Label = Localizer.GetString(FieldLabelResourceKeyConstants.PersonEmployerSchoolInformationSchoolAddressCountryFieldLabel);
    Model.SchoolAddressCountryDD.Endpoint = @Url.Action("GetCountryList", "CrossCutting", new { Area = "CrossCutting"});
    Model.SchoolAddressCountryDD.isVisible = true;
    Model.SchoolAddressCountryDD.defaultSelect2Selection = defaultReference;

    defaultReference = new Select2DataItem();

    if (Model.PersonInfo.OccupationTypeID != null && Model.PersonInfo.OccupationTypeName != null && Model.PersonInfo.OccupationTypeName != "")
        defaultReference = new Select2DataItem() { id = Model.PersonInfo.OccupationTypeID.ToString(), text = Model.PersonInfo.OccupationTypeName };

    Model.OccupationDD = new Select2Configruation();
    Model.OccupationDD.DropDownId = "OccupationDD";
    Model.OccupationDD.ControlTargetType = DropDownTargetTypes.DropDown;
    Model.OccupationDD.Label = Localizer.GetString(FieldLabelResourceKeyConstants.PersonEmployerSchoolInformationSchoolAddressCountryFieldLabel);
    Model.OccupationDD.Endpoint = @Url.Action("GetCountryList", "CrossCutting", new { Area = "CrossCutting" });
    Model.OccupationDD.isVisible = true;
    Model.OccupationDD.defaultSelect2Selection = defaultReference;

    
}

<form id="PersonalInfoForm">
    <div class="card">
        <div class="card-header"><h3 heading-for="@HeadingResourceKeyConstants.HumanDiseaseReportPersonInformationHeading"></h3></div>
        <div class="card-body">
            <div class="row">
                <div class="form-group col-md-6">
                    <label asp-for="@Model.PersonInfo.EIDSSPersonID" field-label-for="@FieldLabelResourceKeyConstants.HumanDiseaseReportSummaryPersonIDFieldLabel" class="control-label"></label>
                    <input asp-for="@Model.PersonInfo.EIDSSPersonID" class="form-control" disabled value="@Model.PersonInfo.EIDSSPersonID">
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <eidss-select2DropDown id="@Model.PersonalIdTypeDD.DropDownId"
                                           name="@Model.PersonalIdTypeDD.DropDownId"
                                           control-target-id="@Model.PersonalIdTypeDD.ControltargetId"
                                           target-type="@Model.PersonalIdTypeDD.ControlTargetType"
                                           target-ajax-url="@Model.PersonalIdTypeDD.ControlTargetUrl"
                                           selectct2-default-data="@Model.PersonalIdTypeDD.defaultSelect2Selection"
                                           end-point="@Model.PersonalIdTypeDD.Endpoint"
                                           label-name="@Model.PersonalIdTypeDD.Label"
                                           is-visible="@Model.PersonalIdTypeDD.isVisible"
                                           is-disabled="@Model.PersonalIdTypeDD.isVisible"
                                           class-name="form-control">
                    </eidss-select2DropDown>
                </div>
                <div>
                    <label asp-for="@Model.PersonInfo.PersonalID" field-label-for="@FieldLabelResourceKeyConstants.PersonalIDFieldLabel" class="control-label"></label>
                    <input asp-for="@Model.PersonInfo.PersonalID" class="form-control" disabled value="@Model.PersonInfo.PersonalID">
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    <label asp-for="@Model.PersonInfo.LastOrSurname" field-label-for="@FieldLabelResourceKeyConstants.SearchHumanDiseaseReportsLastNameFieldLabel" class="control-label"></label>
                    <input asp-for="@Model.PersonInfo.LastOrSurname" class="form-control" disabled value="@Model.PersonInfo.LastOrSurname" />
                </div>
                <div class="form-group col-md-4">
                    <label asp-for="@Model.PersonInfo.SecondName" field-label-for="@FieldLabelResourceKeyConstants.SearchHumanDiseaseReportsMiddleNameFieldLabel" class="control-label"></label>
                    <input asp-for="@Model.PersonInfo.SecondName " class="form-control" disabled value="@Model.PersonInfo.SecondName" />
                </div>
                <div class="form-group col-md-4">
                    <label asp-for="@Model.PersonInfo.FirstOrGivenName" field-label-for="@FieldLabelResourceKeyConstants.SearchHumanDiseaseReportsFirstNameFieldLabel" class="control-label"></label>
                    <input asp-for="@Model.PersonInfo.FirstOrGivenName" class="form-control" disabled value="@Model.PersonInfo.FirstOrGivenName" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label asp-for="PersonInfo.DateOfBirth" field-label-for="@FieldLabelResourceKeyConstants.PersonInformationDateOfBirthFieldLabel"></label>
                    <input type="hidden" id="hdnDateOfBirth" value="@Model.PersonInfo.DateOfBirth" />
                    @if (Model.PermissionsAccessToPersonalData.AccessToPersonalData)
                    {
                        <input asp-for="@Model.PersonInfo.DateOfBirth" class="form-control" disabled value="@Model.PersonInfo.DateOfBirth" />
                    }
                    else
                    {
                        <input asp-for="@Model.PersonInfo.DateOfBirth" class="form-control" disabled value="********" />
                    }

                </div>
                <div class="form-group col-md-6">
                    <label asp-for="@Model.PersonInfo.Age" field-label-for="@FieldLabelResourceKeyConstants.PersonInformationAgeFieldLabel" class="control-label"></label>
                    <input asp-for="@Model.PersonInfo.Age" class="form-control" disabled value="@Model.PersonInfo.Age" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label asp-for="@Model.PersonInfo.GenderTypeName" field-label-for="@FieldLabelResourceKeyConstants.PersonInformationGenderFieldLabel" class="control-label"></label>
                    <input asp-for="@Model.PersonInfo.GenderTypeName" class="form-control" disabled value="@Model.PersonInfo.GenderTypeName" />
                    <input type="hidden" value="@Model.PersonInfo.GenderTypeID" />
                </div>

            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label asp-for="@Model.PersonInfo.CitizenshipTypeName" field-label-for="@FieldLabelResourceKeyConstants.PersonInformationCitizenshipFieldLabel" class="control-label"></label>
                    <input asp-for="@Model.PersonInfo.CitizenshipTypeName " class="form-control" disabled value="@Model.PersonInfo.CitizenshipTypeName" />
                    <input type="hidden" value="@Model.PersonInfo.CitizenshipTypeID" />
                </div>
                <div class="form-group col-md-6">
                    <label asp-for="@Model.PersonInfo.PassportNumber" field-label-for="@FieldLabelResourceKeyConstants.PersonInformationPassportNumberFieldLabel" class="control-label"></label>
                    <input asp-for="@Model.PersonInfo.PassportNumber" class="form-control" disabled value="@Model.PersonInfo.PassportNumber" />
                </div>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header"><h3 heading-for="@HeadingResourceKeyConstants.PersonAddressCurrentAddressHeading"></h3></div>
        <div id="divCurrentAddress">
            @await Component.InvokeAsync("LocationView", Model.CurrentAddress)
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label asp-for="@Model.PersonInfo.ContactPhoneCountryCode" field-label-for="@FieldLabelResourceKeyConstants.PersonAddressCurrentAddressCountryCodeAndNumberFieldLabel" class="control-label"></label>
                <input asp-for="@Model.PersonInfo.ContactPhoneCountryCode" class="form-control" disabled value="@($"{Model.PersonInfo.ContactPhoneCountryCode}{Model.PersonInfo.ContactPhone}")" />
            </div>
            <div class="form-group col-md-6">
                <label asp-for="@Model.PersonInfo.ContactPhoneTypeName" field-label-for="@FieldLabelResourceKeyConstants.PersonAddressCurrentAddressPhoneTypeFieldLabel" class="control-label"></label>
                <input asp-for="@Model.PersonInfo.ContactPhoneTypeName" class="form-control" disabled value="@Model.PersonInfo.ContactPhoneTypeName" />
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header"><h3 heading-for="@HeadingResourceKeyConstants.PersonEmploymentSchoolInformationHeading"></h3></div>
        <div class="card-body">
            <div class="form-row">
                <div class="form-group col-md-12">
                    <label asp-for="@Model.PersonInfo.IsEmployedTypeID" field-label-for="@FieldLabelResourceKeyConstants.PersonEmploymentSchoolInformationIsThisPersonCurrentlyEmployedFieldLabel" class="control-label"></label>
                    @if (Model.PersonInfo.IsThisPersonCurrentlyEmployed != null)
                    {
                        if (Model.PersonInfo.IsThisPersonCurrentlyEmployed.Count() > 0)
                        {

                            foreach (var item in Model.PersonInfo.IsThisPersonCurrentlyEmployed)
                            {
                                @if (Model.PersonInfo.IsEmployedTypeID != null && item.Key == EIDSSConstants.YesNoValueList.Yes && item.Key == Model.PersonInfo.IsEmployedTypeID.ToString())
                                {
                                    <input asp-for="@Model.PersonInfo.IsThisPersonCurrentlyEmployed" type="radio" value="@item.Key" checked disabled /> @item.Value
                                }
                                else if (Model.PersonInfo.IsEmployedTypeID != null && item.Key == EIDSSConstants.YesNoValueList.No && item.Key == Model.PersonInfo.IsEmployedTypeID.ToString())
                                {
                                    <input asp-for="@Model.PersonInfo.IsThisPersonCurrentlyEmployed" type="radio" value="@item.Key" checked disabled /> @item.Value
                                }
                                else if ((Model.PersonInfo.IsEmployedTypeID == null || Model.PersonInfo.IsEmployedTypeID.ToString() == "") || (Model.PersonInfo.IsEmployedTypeID != null && item.Key == EIDSSConstants.YesNoValueList.Unknown && item.Key == Model.PersonInfo.IsEmployedTypeID.ToString()))
                                {
                                    <input asp-for="@Model.PersonInfo.IsThisPersonCurrentlyEmployed" type="radio" value="@item.Key" checked disabled /> @item.Value
                                }
                                else
                                {
                                    <input asp-for="@Model.PersonInfo.IsThisPersonCurrentlyEmployed" type="radio" value="@item.Key" disabled /> @item.Value
                                }
                            }
                        }
                    }
                </div>
            </div>
            <div id="DivPersonEmployed" style="display:none">
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <eidss-select2DropDown id="@Model.OccupationDD.DropDownId"
                                               name="@Model.OccupationDD.DropDownId"
                                               control-target-id="@Model.OccupationDD.ControltargetId"
                                               target-type="@Model.OccupationDD.ControlTargetType"
                                               target-ajax-url="@Model.OccupationDD.ControlTargetUrl"
                                               selectct2-default-data="@Model.OccupationDD.defaultSelect2Selection"
                                               end-point="@Model.OccupationDD.Endpoint"
                                               label-name="@Model.OccupationDD.Label"
                                               is-visible="@Model.OccupationDD.isVisible"
                                               is-disabled="@Model.OccupationDD.isVisible"
                                               class-name="form-control">
                        </eidss-select2DropDown>
                    </div>

                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label asp-for="@Model.PersonInfo.EmployerName" field-label-for="@FieldLabelResourceKeyConstants.PersonEmploymentSchoolInformationEmployerNameFieldLabel" class="control-label"></label>
                        <input asp-for="@Model.PersonInfo.EmployerName " class="form-control" disabled value="@Model.PersonInfo.EmployerName" />
                    </div>
                    <div class="form-group col-md-6">
                        <label asp-for="PersonInfo.EmployedDateLastPresent" field-label-for="@FieldLabelResourceKeyConstants.PersonEmploymentSchoolInformationDateofLastPresenceatWorkFieldLabel"></label>
                        <eidss-calendar id="PersonInfo.EmployedDateLastPresent" name="PersonInfo.EmployedDateLastPresent" asp-for="PersonInfo.EmployedDateLastPresent" SearchFilter="true" disabled="true" value="@Model.PersonInfo.EmployedDateLastPresent"></eidss-calendar>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        @if (Model.PersonInfo.YNWorkSameAddress != null && Model.PersonInfo.YNWorkSameAddress == "Yes")
                        {
                            <input type="checkbox" class="form-check-inline" id="YNWorkSameAddress" value="@Model.PersonInfo.YNWorkSameAddress" checked disabled />
                        }
                        else
                        {
                            <input type="checkbox" class="form-check-inline" id="YNWorkSameAddress" value="@Model.PersonInfo.YNWorkSameAddress" disabled />
                        }
                        <label asp-for="@Model.PersonInfo.YNWorkSameAddress" field-label-for="@FieldLabelResourceKeyConstants.PersonEmploymentSchoolInformationWorkAddresssameasCurrentAddressFieldLabel" class="control-label"></label>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label asp-for="@Model.PersonInfo.EmployerPhone" field-label-for="@FieldLabelResourceKeyConstants.PersonEmployerSchoolInformationWorkAddressCountryCodeAndNumberFieldLabel" class="control-label"></label>
                        <input asp-for="@Model.PersonInfo.EmployerPhone " class="form-control" disabled value="@Model.PersonInfo.EmployerPhone" />
                    </div>
                </div>
                <div id="divWorkAddress" style="display:none">
                    @await Component.InvokeAsync("LocationView", Model.WorkAddress)
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-12">
                    <label asp-for="@Model.PersonInfo.IsStudentTypeID" field-label-for="@FieldLabelResourceKeyConstants.PersonEmploymentSchoolInformationDoesthePersonCurrentlyAttendCchoolFieldLabel" class="control-label"></label>
                    @if (Model.PersonInfo.IsThisPersonCurrentlyAttendSchool != null)
                    {
                        if (Model.PersonInfo.IsThisPersonCurrentlyAttendSchool.Count() > 0)
                        {

                            foreach (var item in Model.PersonInfo.IsThisPersonCurrentlyAttendSchool)
                            {
                                @if (Model.PersonInfo.IsStudentTypeID != null && item.Key == EIDSSConstants.YesNoValueList.Yes && item.Key == Model.PersonInfo.IsStudentTypeID.ToString())
                                {
                                    <input asp-for="@Model.PersonInfo.IsThisPersonCurrentlyAttendSchool" type="radio" value="@item.Key" checked disabled /> @item.Value
                                }
                                else if (Model.PersonInfo.IsStudentTypeID != null && item.Key == EIDSSConstants.YesNoValueList.No && item.Key == Model.PersonInfo.IsStudentTypeID.ToString())
                                {
                                    <input asp-for="@Model.PersonInfo.IsThisPersonCurrentlyAttendSchool" type="radio" value="@item.Key" checked disabled /> @item.Value
                                }
                                else if ((Model.PersonInfo.IsStudentTypeID == null || Model.PersonInfo.IsEmployedTypeID.ToString() == "") || (Model.PersonInfo.IsStudentTypeID != null && item.Key == EIDSSConstants.YesNoValueList.Unknown && item.Key == Model.PersonInfo.IsStudentTypeID.ToString()))
                                {
                                    <input asp-for="@Model.PersonInfo.IsThisPersonCurrentlyAttendSchool" type="radio" value="@item.Key" checked disabled /> @item.Value
                                }
                                else
                                {
                                    <input asp-for="@Model.PersonInfo.IsThisPersonCurrentlyAttendSchool" type="radio" value="@item.Key" disabled /> @item.Value
                                }
                            }
                        }
                    }
                </div>
            </div>
            <div id="DivPersonAttendingSchool" style="display:none">
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label asp-for="@Model.PersonInfo.SchoolName" field-label-for="@FieldLabelResourceKeyConstants.PersonEmploymentSchoolInformationSchoolNameFieldLabel" class="control-label"></label>
                        <input asp-for="@Model.PersonInfo.SchoolName " class="form-control" disabled value="@Model.PersonInfo.SchoolName" />
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label asp-for="PersonInfo.SchoolDateLastAttended" field-label-for="@FieldLabelResourceKeyConstants.PersonEmploymentSchoolInformationDateofLastPresenceatSchoolFieldLabel"></label>
                        <eidss-calendar id="PersonInfo.SchoolDateLastAttended" name="PersonInfo.SchoolDateLastAttended" asp-for="PersonInfo.SchoolDateLastAttended" SearchFilter="true" disabled="true" value="@Model.PersonInfo.SchoolDateLastAttended"></eidss-calendar>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label asp-for="@Model.PersonInfo.SchoolPhone" field-label-for="@FieldLabelResourceKeyConstants.PersonEmployerSchoolInformationSchoolAddressCountryCodeAndNumberFieldLabel" class="control-label"></label>
                        <input asp-for="@Model.PersonInfo.SchoolPhone " class="form-control" disabled value="@Model.PersonInfo.SchoolPhone" />
                    </div>
                </div>
                <div id="divSchoolAddress">
                    @await Component.InvokeAsync("LocationView", Model.SchoolAddress)
                </div>
            </div>
        </div>
</form>
<partial name="_ValidationScriptsPartial" />
<script>
    $(document).ready(function () {
        showAge();
        IsEmployedTypeID = $("input[name='PersonInfo.IsThisPersonCurrentlyEmployed']:checked").val();
        if (IsEmployedTypeID != null && IsEmployedTypeID != "" && IsEmployedTypeID == '@EIDSSConstants.YesNoValueList.Yes') {
            $("#DivPersonEmployed").prop("style", "display: block;");    //Show
        }
        else {
            $("#DivPersonEmployed").prop("style", "display: none;");   //Hide
        }
        YNWorkSameAddress = $("#YNWorkSameAddress").prop('checked');
        if (YNWorkSameAddress) {
            $("#divWorkAddress").prop("style", "display: none;");
        }
        else {
            $("#divWorkAddress").prop("style", "display: block;");
        }
        IsThisPersonCurrentlyAttendSchool = $("input[name='PersonInfo.IsThisPersonCurrentlyAttendSchool']:checked").val();
        if (IsThisPersonCurrentlyAttendSchool != null && IsThisPersonCurrentlyAttendSchool != "" && IsThisPersonCurrentlyAttendSchool == '@EIDSSConstants.YesNoValueList.Yes') {
            $("#DivPersonAttendingSchool").prop("style", "display: block;");    //Show
        }
        else {
            $("#DivPersonAttendingSchool").prop("style", "display: none;");   //Hide
        }

        $('#divCurrentAddress *').attr('disabled', true);
        $('#divWorkAddress *').attr('disabled', true);
        $('#divSchoolAddress *').attr('disabled', true);
      
    });

    function showAge() {
        var txtDateOfBirth = $("#hdnDateOfBirth").val();
            if (txtDateOfBirth) {
                var D; //initial Date, which should be used to calculate Age
                var N; //difference between D and <Date of Birth>
                var age; //result
                var today = new Date();
                var dateOfBirth = new Date(txtDateOfBirth);
                var txtDateOfSymptomsOnset = $("#SymptomsSection_SymptomsOnsetDate").val();
                var txtDateOfNotification = $("#NotificationSection_dateOfNotification").val();
                var txtDateOfDiagnosis = $("#NotificationSection_dateOfDiagnosis").val();
                var txtDateEntered = $("#ReportSummary_DateEntered").val();

                if (txtDateOfSymptomsOnset) {
                    D = new Date(txtDateOfSymptomsOnset);
                }
                else { 
                    if (txtDateOfNotification) {
                        D = new Date(txtDateOfNotification);
                    }
                    else { 
                        if (txtDateOfDiagnosis) {
                            D = new Date(txtDateOfDiagnosis);
                        }
                        else { 
                            D = new Date(txtDateEntered);
                        }
                    }
                }
                N = Math.floor(Math.abs((D.getTime() - dateOfBirth.getTime()) / (1000 * 3600 * 24)));
                if (N >= 365) {
                    age = Math.floor(N / 365) + " years";
                }
                else if (29 <= N && N < 365) {
                    age = Math.floor(N / 29) + " months";
                } 
                else if (N < 29) { 
                    age = N + " days";
                }

                $("#PersonInfo_Age").val(age);
      
            }
    };

</script>

