using EIDSS.Repository.ReturnModels;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace EIDSS.Repository.Contexts
{
    public partial interface IEIDSSContextProcedures
    {
        Task<List<spObjectAccess_SelectDetailResult>> spObjectAccess_SelectDetailAsync(string LangID, long? idfEmployee, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<spUserGroupDetail_SelectDetailResult>> spUserGroupDetail_SelectDetailAsync(long? idfEmployeeGroup, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_ACCESS_RULE_ACTOR_GETListResult>> USP_ADMIN_ACCESS_RULE_ACTOR_GETListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? AccessRuleID, long? SiteID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_ACCESS_RULE_DELResult>> USP_ADMIN_ACCESS_RULE_DELAsync(long? AccessRuleID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_ACCESS_RULE_GETDetailResult>> USP_ADMIN_ACCESS_RULE_GETDetailAsync(string LanguageID, long? AccessRuleID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_ACCESS_RULE_GETListResult>> USP_ADMIN_ACCESS_RULE_GETListAsync(string LanguageID, int? Page, int? PageSize, string SortColumn, string SortOrder, long? AccessRuleID, string AccessRuleName, bool? BorderingAreaRuleIndicator, bool? DefaultRuleIndicator, bool? ReciprocalRuleIndicator, bool? AccessToPersonalDataPermissionIndicator, bool? AccessToGenderAndAgeDataPermissionIndicator, bool? CreatePermissionIndicator, bool? DeletePermissionIndicator, bool? ReadPermissionIndicator, bool? WritePermissionIndicator, string GrantingActorSiteCode, string GrantingActorSiteHASCCode, string GrantingActorSiteName, long? GrantingActorAdministrativeLevelID, string ReceivingActorSiteCode, string ReceivingActorSiteHASCCode, string ReceivingActorSiteName, long? ReceivingActorAdministrativeLevelID, long? GrantingActorSiteGroupID, long? GrantingActorSiteID, string ReceivingActorSiteGroups, string ReceivingActorSites, string ReceivingActorUserGroups, string ReceivingActorUsers, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_ACTOR_GETListResult>> USP_ADMIN_ACTOR_GETListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? ActorTypeID, string ActorName, string OrganizationName, string UserGroupDescription, long? DiseaseID, bool? DiseaseFiltrationSearchIndicator, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplySiteFiltrationIndicator, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_ADMINLEVEL_GETLISTResult>> USP_ADMIN_ADMINLEVEL_GETLISTAsync(string LangId, long? idfsAdminLevel, long? idfsCountry, long? idfsRegion, long? idfsRayon, long? idfsSettlement, string strDefaultName, string strNationalName, long? idfsSettlementType, double? LatFrom, double? LatTo, double? LongFrom, double? LongTo, double? ElevationFrom, double? ElevationTo, int? pageNo, int? pageSize, string sortColumn, string sortOrder, string strHASC, string strCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_BASEREF_GET_KeyValueByReferenceIdResult>> USP_ADMIN_BASEREF_GET_KeyValueByReferenceIdAsync(long? referenceId, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_BASEREF_GETListResult>> USP_ADMIN_BASEREF_GETListAsync(long? referenceType, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_CONF_DataArchiveSettings_GetResult>> USP_ADMIN_CONF_DataArchiveSettings_GetAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_DATAAUDITLOG_GETDetailResult>> USP_ADMIN_DATAAUDITLOG_GETDetailAsync(long? idfDataAuditEvent, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_DATAAUDITLOG_GETListResult>> USP_ADMIN_DATAAUDITLOG_GETListAsync(string languageId, DateTime? startDate, DateTime? endDate, long? idfUserId, long? idfSiteId, long? idfActionId, long? idfObjetType, string idfObjectId, string SortColumn, string SortOrder, int? Page, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_DEDUPLICATION_FARM_SETResult>> USP_ADMIN_DEDUPLICATION_FARM_SETAsync(long? FarmMasterID, long? SupersededFarmMasterID, long? AvianFarmTypeID, long? AvianProductionTypeID, long? FarmCategory, long? FarmOwnerID, string FarmNationalName, string FarmInterNationalName, string EIDSSFarmID, long? OwnershipStructureTypeID, string Fax, string Email, string Phone, long? FarmAddressID, bool? ForeignAddressIndicator, long? FarmAddressIdfsLocation, string FarmAddressStreet, string FarmAddressApartment, string FarmAddressBuilding, string FarmAddressHouse, string FarmAddressPostalCode, double? FarmAddressLatitude, double? FarmAddressLongitude, int? NumberOfBuildings, int? NumberOfBirdsPerBuilding, string HerdsOrFlocks, string Species, string AuditUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_DEDUPLICATION_HUMAN_DISEASE_Report_SETResult>> USP_ADMIN_DEDUPLICATION_HUMAN_DISEASE_Report_SETAsync(long? SupersededDiseaseReportID, string LanguageID, long? SurvivorDiseaseReportID, long? idfHuman, long? idfHumanActual, string strHumanCaseId, long? idfsFinalDiagnosis, DateTime? datDateOfDiagnosis, DateTime? datNotificationDate, long? idfsFinalState, string strLocalIdentifier, long? idfSentByOffice, string strSentByFirstName, string strSentByPatronymicName, string strSentByLastName, long? idfSentByPerson, long? idfReceivedByOffice, string strReceivedByFirstName, string strReceivedByPatronymicName, string strReceivedByLastName, long? idfReceivedByPerson, long? idfsHospitalizationStatus, long? idfHospital, string strCurrentLocation, DateTime? datOnSetDate, long? idfsInitialCaseStatus, long? idfsYNPreviouslySoughtCare, DateTime? datFirstSoughtCareDate, long? idfSoughtCareFacility, long? idfsNonNotIFiableDiagnosis, long? idfsYNHospitalization, DateTime? datHospitalizationDate, DateTime? datDischargeDate, string strHospitalName, long? idfsYNAntimicrobialTherapy, string strAntibioticName, string strDosage, DateTime? datFirstAdministeredDate, string strAntibioticComments, long? idfsYNSpecificVaccinationAdministered, long? idfInvestigatedByOffice, DateTime? StartDateofInvestigation, long? idfsYNRelatedToOutbreak, long? idfOutbreak, long? idfsYNExposureLocationKnown, long? idfPointGeoLocation, DateTime? datExposureDate, long? idfsGeoLocationType, string strLocationDescription, long? idfsLocationCountry, long? idfsLocationRegion, long? idfsLocationRayon, long? idfsLocationSettlement, double? intLocationLatitude, double? intLocationLongitude, long? intElevation, long? idfsLocationGroundType, double? intLocationDistance, double? intLocationDirection, string strForeignAddress, string strNote, long? idfsFinalCaseStatus, long? idfsOutcome, DateTime? datDateofDeath, long? idfsCaseProgressStatus, long? idfPersonEnteredBy, string strClinicalNotes, long? idfsYNSpecimenCollected, long? idfsYNTestsConducted, long? DiseaseReportTypeID, bool? blnClinicalDiagBasis, bool? blnLabDiagBasis, bool? blnEpiDiagBasis, DateTime? DateofClassification, string strSummaryNotes, long? idfEpiObservation, long? idfCSObservation, long? idfInvestigatedByPerson, string strEpidemiologistsName, long? idfsNotCollectedReason, string strNotCollectedReason, string SamplesParameters, string TestsParameters, string TestsInterpretationParameters, string AntiviralTherapiesParameters, string VaccinationsParameters, string ContactsParameters, string Events, long? idfsHumanAgeType, int? intPatientAge, DateTime? datCompletionPaperFormDate, int? RowStatus, long? idfsSite, string AuditUser, long? idfParentMonitoringSession, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_DEDUPLICATION_PERSON_SETResult>> USP_ADMIN_DEDUPLICATION_PERSON_SETAsync(long? HumanMasterID, long? SupersededHumanMasterID, bool? CopyToHumanIndicator, long? PersonalIDType, string EIDSSPersonID, string PersonalID, string FirstName, string SecondName, string LastName, DateTime? DateOfBirth, DateTime? DateOfDeath, int? ReportedAge, long? ReportAgeUOMID, long? HumanGenderTypeID, long? OccupationTypeID, long? CitizenshipTypeID, string PassportNumber, long? IsEmployedTypeID, string EmployerName, DateTime? EmployedDateLastPresent, bool? EmployerForeignAddressIndicator, string EmployerForeignAddressString, long? EmployerGeoLocationID, long? EmployeridfsLocation, string EmployerstrStreetName, string EmployerstrApartment, string EmployerstrBuilding, string EmployerstrHouse, string EmployeridfsPostalCode, string EmployerPhone, long? IsStudentTypeID, string SchoolName, DateTime? SchoolDateLastAttended, bool? SchoolForeignAddressIndicator, string SchoolForeignAddressString, long? SchoolGeoLocationID, long? SchoolidfsLocation, string SchoolstrStreetName, string SchoolstrApartment, string SchoolstrBuilding, string SchoolstrHouse, string SchoolidfsPostalCode, string SchoolPhone, long? HumanGeoLocationID, long? HumanidfsLocation, string HumanstrStreetName, string HumanstrApartment, string HumanstrBuilding, string HumanstrHouse, string HumanidfsPostalCode, double? HumanstrLatitude, double? HumanstrLongitude, double? HumanstrElevation, long? HumanPermGeoLocationID, long? HumanPermidfsLocation, string HumanPermstrStreetName, string HumanPermstrApartment, string HumanPermstrBuilding, string HumanPermstrHouse, string HumanPermidfsPostalCode, long? HumanAltGeoLocationID, bool? HumanAltForeignAddressIndicator, string HumanAltForeignAddressString, long? HumanAltidfsLocation, string HumanAltstrStreetName, string HumanAltstrApartment, string HumanAltstrBuilding, string HumanAltstrHouse, string HumanAltidfsPostalCode, string RegistrationPhone, string HomePhone, string WorkPhone, int? ContactPhoneCountryCode, string ContactPhone, long? ContactPhoneTypeID, int? ContactPhone2CountryCode, string ContactPhone2, long? ContactPhone2TypeID, string AuditUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_DEDUPLICATION_PERSONID_FARM_SETResult>> USP_ADMIN_DEDUPLICATION_PERSONID_FARM_SETAsync(long? SurvivorHumanMasterID, long? SupersededHumanMasterID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_DEDUPLICATION_PERSONID_HUMAN_DISEASE_SETResult>> USP_ADMIN_DEDUPLICATION_PERSONID_HUMAN_DISEASE_SETAsync(long? SurvivorHumanMasterID, long? SupersededHumanMasterID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_DEDUPLICATION_VET_DISEASE_Report_SETResult>> USP_ADMIN_DEDUPLICATION_VET_DISEASE_Report_SETAsync(long? SurvivorVeterinaryDiseaseReportID, long? SupersededVeterinaryDiseaseReportID, string EIDSSReportID, long? FarmID, long? FarmMasterID, long? FarmOwnerID, long? MonitoringSessionID, long? OutbreakID, long? RelatedToDiseaseReportID, string EIDSSFieldAccessionID, long? DiseaseID, long? EnteredByPersonID, long? ReportedByOrganizationID, long? ReportedByPersonID, long? InvestigatedByOrganizationID, long? InvestigatedByPersonID, long? ReceivedByOrganizationID, long? ReceivedByPersonID, long? SiteID, DateTime? DiagnosisDate, DateTime? EnteredDate, DateTime? ReportDate, DateTime? AssignedDate, DateTime? InvestigationDate, int? RowStatus, long? ReportTypeID, long? ClassificationTypeID, long? StatusTypeID, long? ReportCategoryTypeID, int? FarmTotalAnimalQuantity, int? FarmSickAnimalQuantity, int? FarmDeadAnimalQuantity, double? FarmLatitude, double? FarmLongitude, long? FarmEpidemiologicalObservationID, long? ControlMeasuresObservationID, long? TestsConductedIndicator, string AuditUserName, string FlocksOrHerds, string Species, string Animals, string Vaccinations, string Samples, string PensideTests, string LaboratoryTests, string LaboratoryTestInterpretations, string CaseLogs, string ClinicalInformation, string Contacts, string CaseMonitorings, string Notifications, long? UserID, bool? LinkLocalOrFieldSampleIDToReportID, bool? OutbreakCaseIndicator, long? OutbreakCaseReportUID, long? OutbreakCaseStatusTypeID, long? OutbreakCaseQuestionnaireObservationID, bool? PrimaryCaseIndicator, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_DEPARTMENT_SETResult>> USP_ADMIN_DEPARTMENT_SETAsync(string LanguageID, long? DepartmentID, string DefaultName, string NationalName, long? OrganizationID, long? DepartmentNameTypeID, int? Order, string UserName, int? RowStatus, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMP_DELResult>> USP_ADMIN_EMP_DELAsync(long? idfPerson, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMP_NEW_DEFAULT_ORGANIZATION_SETResult>> USP_ADMIN_EMP_NEW_DEFAULT_ORGANIZATION_SETAsync(long? idfUserID, long? idfNewUserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMP_ORGANIZATION_ACTIVATE_DEACTIVATE_SETResult>> USP_ADMIN_EMP_ORGANIZATION_ACTIVATE_DEACTIVATE_SETAsync(long? idfPerson, bool? active, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMP_ORGANIZATION_DELResult>> USP_ADMIN_EMP_ORGANIZATION_DELAsync(string aspNetUserId, long? idfUserId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMP_ORGANIZATION_SETResult>> USP_ADMIN_EMP_ORGANIZATION_SETAsync(string aspNetUserId, long? idfUserId, bool? IsDefault, int? intRowStatus, bool? active, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMP_ORGANIZATION_STATUS_SETResult>> USP_ADMIN_EMP_ORGANIZATION_STATUS_SETAsync(long? idfPerson, int? intRowStatus, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMP_ORGANIZATION_USER_GROUP_GETDetailResult>> USP_ADMIN_EMP_ORGANIZATION_USER_GROUP_GETDetailAsync(long? idfPerson, long? idfOffice, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMP_ORGANIZATION_USER_GROUP_GETListResult>> USP_ADMIN_EMP_ORGANIZATION_USER_GROUP_GETListAsync(long? idfPerson, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMP_SETResult>> USP_ADMIN_EMP_SETAsync(long? idfPerson, long? idfsStaffPosition, long? idfInstitution, long? idfDepartment, string strFamilyName, string strFirstName, string strSecondName, string strContactPhone, string strBarcode, long? idfsSite, string strPersonalID, string idfPersonalIDType, long? idfsEmployeeCategory, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMPLOYEE_DELResult>> USP_ADMIN_EMPLOYEE_DELAsync(long? idfPerson, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMPLOYEE_GETCOUNTResult>> USP_ADMIN_EMPLOYEE_GETCOUNTAsync(string LanguageID, long? EmployeeID, string FirstOrGivenName, string SecondName, string LastOrSurName, string ContactPhone, string OrganizationAbbreviatedName, string OrganizationFullName, string EIDSSOrganizationID, long? OrganizationID, string PositionTypeName, long? PositionTypeID, string PersonalID, long? PersonalIDType, long? idfsEmployeeCategory, long? AccountStateID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMPLOYEE_GETLISTResult>> USP_ADMIN_EMPLOYEE_GETLISTAsync(string LanguageID, long? EmployeeID, string FirstOrGivenName, string SecondName, string LastOrSurName, string ContactPhone, string EIDSSOrganizationID, long? OrganizationID, long? PositionTypeID, long? EmployeeCategoryID, long? AccountState, long? PersonalIdType, string PersonalIDValue, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMPLOYEEGROUP_BYUSER_GetDetailResult>> USP_ADMIN_EMPLOYEEGROUP_BYUSER_GetDetailAsync(long? idfUserId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMPLOYEEGROUP_DASHBOARD_GETLISTResult>> USP_ADMIN_EMPLOYEEGROUP_DASHBOARD_GETLISTAsync(long? roleId, string dashboardItemType, string langId, string user, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMPLOYEEGROUP_DASHBOARD_SETResult>> USP_ADMIN_EMPLOYEEGROUP_DASHBOARD_SETAsync(long? roleID, string strDashboardObject, long? idfDataAuditEvent, string user, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMPLOYEEGROUP_DELResult>> USP_ADMIN_EMPLOYEEGROUP_DELAsync(long? roleID, long? roleName, long? idfsSite, string user, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMPLOYEEGROUP_GETDETAILResult>> USP_ADMIN_EMPLOYEEGROUP_GETDETAILAsync(long? idfEmployeeGroup, string langId, string user, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMPLOYEEGROUP_GETLISTResult>> USP_ADMIN_EMPLOYEEGROUP_GETLISTAsync(string strName, string strDescription, string langId, long? idfsSite, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMPLOYEEGROUP_SETResult>> USP_ADMIN_EMPLOYEEGROUP_SETAsync(long? idfEmployeeGroup, long? idfsSite, string strDefault, string strName, string strDescription, string langId, string strEmployees, string rolesandfunctions, string strDashboardObject, string user, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMPLOYEEGROUP_SYSTEMFUNCTION_SETResult>> USP_ADMIN_EMPLOYEEGROUP_SYSTEMFUNCTION_SETAsync(string rolesandfunctions, long? idfDataAuditEvent, string user, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMPLOYEES_IN_USERGROUP_DELResult>> USP_ADMIN_EMPLOYEES_IN_USERGROUP_DELAsync(long? idfEmployeeGroup, string idfEmployeeList, string AuditUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EMPLOYEESFOREMPLOYEEGROUP_GETLISTResult>> USP_ADMIN_EMPLOYEESFOREMPLOYEEGROUP_GETLISTAsync(long? idfEmployeeGroup, string langId, long? Type, string Name, string Organization, string Description, int? pageNo, int? pageSize, string SortColumn, string SortOrder, string user, long? idfsSite, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EVENT_GETCountResult>> USP_ADMIN_EVENT_GETCountAsync(string LanguageId, long? UserId, int? DaysFromReadDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EVENT_GETListResult>> USP_ADMIN_EVENT_GETListAsync(string LanguageId, long? UserId, int? DaysFromReadDate, int? PageNo, int? PageSize, string SortColumn, string SortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EVENT_SETResult>> USP_ADMIN_EVENT_SETAsync(long? EventId, long? EventTypeId, long? UserId, long? ObjectId, long? DiseaseId, long? SiteId, string InformationString, long? LoginSiteId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EVENT_STATUS_SETResult>> USP_ADMIN_EVENT_STATUS_SETAsync(long? SiteId, long? UserId, long? EventId, int? StatusValue, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EVENT_SUBSCRIPTION_GETListResult>> USP_ADMIN_EVENT_SUBSCRIPTION_GETListAsync(string LanguageId, string SiteAlertName, long? UserId, int? PageNo, int? PageSize, string SortColumn, string SortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_EVENT_SUBSCRIPTION_SETResult>> USP_ADMIN_EVENT_SUBSCRIPTION_SETAsync(string Subscriptions, string UserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ActivityParameters_GETResult>> USP_ADMIN_FF_ActivityParameters_GETAsync(string observationList, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ActivityParameters_SETResult>> USP_ADMIN_FF_ActivityParameters_SETAsync(long? idfObservation, long? idfsFormTemplate, string answers, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Copy_TemplateResult>> USP_ADMIN_FF_Copy_TemplateAsync(string LangId, long? idfsFormTemplate, string User, long? idfsSite, long? idfsNewFormType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Determinant_SETResult>> USP_ADMIN_FF_Determinant_SETAsync(long? idfsDiagnosisGroup, long? idfsFormTemplate, string User, int? intRowStatus, int? FunctionCall, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_DIAGNOSISREFERENCE_GETListResult>> USP_ADMIN_FF_DIAGNOSISREFERENCE_GETListAsync(string LangID, long? idfsFormTemplate, long? idfsFormType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_FlexForm_GetResult>> USP_ADMIN_FF_FlexForm_GetAsync(string LangID, long? idfsDiagnosis, long? idfsFormType, long? idfsFormTemplate, long? idfObservation, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_FormTemplate_GETResult>> USP_ADMIN_FF_FormTemplate_GETAsync(long? idfsDiagnosis, long? idfsFormType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_FormTypes_GETResult>> USP_ADMIN_FF_FormTypes_GETAsync(string LangID, long? idfsFormType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Parameter_CopyResult>> USP_ADMIN_FF_Parameter_CopyAsync(string LangId, long? idfsParameterSource, long? idfsSectionDestination, long? idfsFormTypeDestination, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Parameter_DELResult>> USP_ADMIN_FF_Parameter_DELAsync(string LangId, long? idfsParameter, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Parameter_GETResult>> USP_ADMIN_FF_Parameter_GETAsync(string LangID, long? idfsParameter, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ParameterFixedPresetValue_DELResult>> USP_ADMIN_FF_ParameterFixedPresetValue_DELAsync(long? idfsParameterFixedPresetValue, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ParameterFixedPresetValue_GETListResult>> USP_ADMIN_FF_ParameterFixedPresetValue_GETListAsync(long? idfsParameterType, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ParameterFixedPresetValue_SETResult>> USP_ADMIN_FF_ParameterFixedPresetValue_SETAsync(long? idfsParameterType, string DefaultName, string NationalName, string LangID, int? intOrder, long? idfsParameterFixedPresetValue, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ParameterInUseResult>> USP_ADMIN_FF_ParameterInUseAsync(long? idfsParameter, long? idfsFormTemplate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ParameterReferenceTypes_GETDetailResult>> USP_ADMIN_FF_ParameterReferenceTypes_GETDetailAsync(string LangID, long? idfsReferenceType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ParameterReferenceTypes_GETListResult>> USP_ADMIN_FF_ParameterReferenceTypes_GETListAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Parameters_GETResult>> USP_ADMIN_FF_Parameters_GETAsync(string LangID, long? idfsSection, long? idfsFormType, string SectionIDs, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Parameters_SETResult>> USP_ADMIN_FF_Parameters_SETAsync(string LangID, long? idfsSection, long? idfsFormType, long? idfsParameterType, long? idfsEditor, int? intHACode, int? intOrder, string strNote, string DefaultName, string NationalName, string DefaultLongName, string NationalLongName, long? idfsParameter, long? idfsParameterCaption, string User, int? intRowStatus, int? CopyOnly, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ParameterSelectList_GETResult>> USP_ADMIN_FF_ParameterSelectList_GETAsync(string LangID, long? idfsParameter, long? idfsParameterType, long? intHACode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ParameterTemplate_DELResult>> USP_ADMIN_FF_ParameterTemplate_DELAsync(long? idfsParameter, long? idfsFormTemplate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ParameterTemplate_SETResult>> USP_ADMIN_FF_ParameterTemplate_SETAsync(long? idfsParameter, long? idfsFormTemplate, string LangID, long? idfsEditMode, int? intLeft, int? intTop, int? intWidth, int? intHeight, int? intScheme, int? intLabelSize, int? intOrder, bool? blnFreeze, string User, int? CopyOnly, int? FunctionCall, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ParameterTypeEditorMapping_GetListResult>> USP_ADMIN_FF_ParameterTypeEditorMapping_GetListAsync(string LanguageID, long? idfsParameterType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ParameterTypes_DELResult>> USP_ADMIN_FF_ParameterTypes_DELAsync(long? idfsParameterType, string User, bool? deleteAnyway, string LangId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ParameterTypes_FILTERResult>> USP_ADMIN_FF_ParameterTypes_FILTERAsync(string LangID, string searchString, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ParameterTypes_GETListResult>> USP_ADMIN_FF_ParameterTypes_GETListAsync(string LangID, long? idfsParameterType, bool? OnlyLists, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_ParameterTypes_SETResult>> USP_ADMIN_FF_ParameterTypes_SETAsync(long? idfsParameterType, string DefaultName, string NationalName, long? idfsReferenceType, int? HACode, int? Order, string LangID, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_RequiredParameter_SETResult>> USP_ADMIN_FF_RequiredParameter_SETAsync(long? idfsParameter, long? idfsEditMode, long? idfsFormTemplate, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Rule_GetDetailsResult>> USP_ADMIN_FF_Rule_GetDetailsAsync(string LangID, long? idfsRule, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_RuleParameterForAction_GETResult>> USP_ADMIN_FF_RuleParameterForAction_GETAsync(long? idfsRule, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Rules_GETResult>> USP_ADMIN_FF_Rules_GETAsync(string LangID, long? idfsFormTemplate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Rules_GETListResult>> USP_ADMIN_FF_Rules_GETListAsync(string LangID, long? idfsFunctionParameter, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Rules_SETResult>> USP_ADMIN_FF_Rules_SETAsync(long? idfsFormTemplate, long? idfsCheckPoint, long? idfsRuleFunction, long? idfsRuleAction, string DefaultName, string NationalName, string MessageText, string MessageNationalText, bool? blnNot, string LangID, long? idfsRule, long? idfsRuleMessage, long? idfsFunctionParameter, long? idfsActionParameter, string User, string strFillValue, int? intRowStatus, string strCompareValue, int? FunctionCall, int? CopyOnly, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Section_CopyResult>> USP_ADMIN_FF_Section_CopyAsync(bool? IsDesigning, long? idfsSectionSource, long? idfsSectionDestination, long? idfsFormTypeDestination, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Section_DELResult>> USP_ADMIN_FF_Section_DELAsync(long? idfsSection, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_SectionParameterTree_GETResult>> USP_ADMIN_FF_SectionParameterTree_GETAsync(string LangID, long? idfsSection, long? idfsFormType, string parameterFilter, string sectionFilter, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Sections_GETResult>> USP_ADMIN_FF_Sections_GETAsync(string LangID, long? idfsFormType, long? idfsSection, long? idfsParentSection, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Sections_SETResult>> USP_ADMIN_FF_Sections_SETAsync(long? idfsSection, long? idfsParentSection, long? idfsFormType, string DefaultName, string NationalName, string LangID, int? intOrder, bool? blnGrid, bool? blnFixedRowset, long? idfsMatrixType, int? intRowStatus, string User, int? CopyOnly, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Template_DELResult>> USP_ADMIN_FF_Template_DELAsync(string LangId, long? idfsFormTemplate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Template_GetDetailResult>> USP_ADMIN_FF_Template_GetDetailAsync(string LangID, long? idfsFormTemplate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Template_SETResult>> USP_ADMIN_FF_Template_SETAsync(long? idfsFormType, string DefaultName, string NationalName, string strNote, string LangID, bool? blnUNI, long? idfsFormTemplate, int? intRowStatus, string User, int? FunctionCall, int? CopyOnly, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_TemplateDesign_GETResult>> USP_ADMIN_FF_TemplateDesign_GETAsync(string langid, long? idfsFormTemplate, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_TemplateDeterminantValues_GETResult>> USP_ADMIN_FF_TemplateDeterminantValues_GETAsync(string LangID, long? idfsFormTemplate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_TemplateParameterOrder_SetResult>> USP_ADMIN_FF_TemplateParameterOrder_SetAsync(string langId, long? idfsFormTemplate, long? idfsCurrentParameter, long? idfsDestinationParameter, int? Direction, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_Templates_GETResult>> USP_ADMIN_FF_Templates_GETAsync(string LangID, long? idfsFormTemplate, long? idfsFormType, long? idfOUtbreak, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_TemplatesByParameter_GETResult>> USP_ADMIN_FF_TemplatesByParameter_GETAsync(string LangID, long? idfsParameter, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_FF_TemplateSectionOrder_SetResult>> USP_ADMIN_FF_TemplateSectionOrder_SetAsync(string LangId, long? idfsFormTemplate, long? idfsCurrentSection, long? idfsDestinationSection, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_GISDATA_DELResult>> USP_ADMIN_GISDATA_DELAsync(long? idfsLocation, string userName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_GISDATA_SETResult>> USP_ADMIN_GISDATA_SETAsync(string LangID, long? idfsParent, string strHASC, string strCode, long? idfsLocation, string strDefaultName, string strNationalName, long? idfsType, double? Latitude, double? Longitude, int? Elevation, int? intOrder, string userName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_IE_DownloadTemplate_GETListResult>> USP_ADMIN_IE_DownloadTemplate_GETListAsync(string langId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_IE_Language_SETResult>> USP_ADMIN_IE_Language_SETAsync(long? ReferenceID, long? ReferenceType, string LangID, string DefaultName, string NationalName, string strReferenceCode, int? HACode, int? Order, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_IE_Module_GETListResult>> USP_ADMIN_IE_Module_GETListAsync(string langId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_IE_Resource_GETListResult>> USP_ADMIN_IE_Resource_GETListAsync(long? moduleId, long? idfsResourceSet, string langId, string sortColumn, string sortOrder, string searchString, string includedTypes, bool? allModules, bool? isRequired, bool? isHidden, int? pageNo, int? pageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_IE_Resource_SETResult>> USP_ADMIN_IE_Resource_SETAsync(long? idfsResource, long? idfsResourceSet, string DefaultName, string NationalName, bool? isRequired, bool? isHidden, string LangID, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_IE_Section_GETListResult>> USP_ADMIN_IE_Section_GETListAsync(string parentNode, string langId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_NEIGHBORING_SITE_GETListResult>> USP_ADMIN_NEIGHBORING_SITE_GETListAsync(long? SiteID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_OBJECT_ACCESS_GETListResult>> USP_ADMIN_OBJECT_ACCESS_GETListAsync(string LanguageID, long? ActorID, long? SiteID, long? ObjectID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_OBJECT_ACCESS_SETResult>> USP_ADMIN_OBJECT_ACCESS_SETAsync(string ObjectAccessRecords, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_ORG_DELResult>> USP_ADMIN_ORG_DELAsync(long? OrganizationKey, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_ORG_GETDetailResult>> USP_ADMIN_ORG_GETDetailAsync(string LanguageID, long? OrganizationKey, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_ORG_GETListResult>> USP_ADMIN_ORG_GETListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? OrganizationKey, string OrganizationID, string AbbreviatedName, string FullName, int? AccessoryCode, long? SiteID, long? AdministrativeLevelID, long? OrganizationTypeID, bool? ShowForeignOrganizationsIndicator, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_ORG_SETResult>> USP_ADMIN_ORG_SETAsync(string LanguageID, long? OrganizationKey, string OrganizationID, long? OrganizationTypeID, string AbbreviatedNameDefaultValue, string AbbreviatedNameNationalValue, string FullNameDefaultValue, string FullNameNationalValue, long? CurrentCustomizationID, long? AddressID, long? LocationID, string StreetName, string Apartment, string Building, string House, string PostalCode, bool? ForeignAddressIndicator, string ForeignAddressString, bool? SharedAddressIndicator, string ContactPhone, int? AccessoryCode, int? Order, long? OwnershipFormTypeID, long? LegalFormTypeID, long? MainFormOfActivityTypeID, string AuditUserName, string Departments, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_SITE_ACTOR_GETListResult>> USP_ADMIN_SITE_ACTOR_GETListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? SiteID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_SITE_DELResult>> USP_ADMIN_SITE_DELAsync(long? SiteID, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_SITE_GETDetailResult>> USP_ADMIN_SITE_GETDetailAsync(string LanguageID, long? SiteID, long? UserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_SITE_GETListResult>> USP_ADMIN_SITE_GETListAsync(string LanguageID, long? SiteID, string EIDSSSiteID, long? SiteTypeID, string SiteName, string HASCSiteID, long? OrganizationID, long? AdministrativeLevelID, long? SiteGroupID, string AuditUserName, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_SITE_SETResult>> USP_ADMIN_SITE_SETAsync(string LanguageID, long? SiteID, long? CustomizationPackageID, string EIDSSSiteID, long? ParentSiteID, long? SiteTypeID, string SiteName, long? SiteOrganizationID, string HASCSiteID, int? RowStatus, string Permissions, string Organizations, string UserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_STAT_DELResult>> USP_ADMIN_STAT_DELAsync(long? idfStatistic, long? SiteId, long? UserId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_STAT_GetDetailResult>> USP_ADMIN_STAT_GetDetailAsync(long? idfStatistic, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_STAT_GetListResult>> USP_ADMIN_STAT_GetListAsync(string LangID, long? idfsStatisticalDataType, long? idfsArea, DateTime? datStatisticStartDateFrom, DateTime? datStatisticStartDateTo, long? idfsRegion, long? idfsRayon, long? idfsSettlement, int? pageSize, int? pageNo, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_STAT_SETResult>> USP_ADMIN_STAT_SETAsync(long? idfStatistic, long? idfsStatisticDataType, long? idfsMainBaseReference, long? idfsStatisticAreaType, long? idfsStatisticPeriodType, long? LocationUserControlidfsCountry, long? LocationUserControlidfsRegion, long? LocationUserControlidfsRayon, long? LocationUserControlidfsSettlement, DateTime? datStatisticStartDate, DateTime? datStatisticFinishDate, int? varValue, long? idfsStatisticalAgeGroup, long? idfsParameterName, bool? bulkImport, long? SiteId, long? UserId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_STLE_DELResult>> USP_ADMIN_STLE_DELAsync(long? idfsSettlement, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_STLE_GetListResult>> USP_ADMIN_STLE_GetListAsync(string LangID, long? idfsSettlement, long? idfsSettlementType, string DefaultName, string strNationalName, long? idfsRegion, long? idfsRayon, double? LatMin, double? LatMax, double? LngMin, double? LngMax, double? EleMin, double? EleMax, int? pageSize, int? maxPagesPerFetch, int? paginationSet, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_SYSTEM_PREFERENCE_GETDetailResult>> USP_ADMIN_SYSTEM_PREFERENCE_GETDetailAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_SYSTEM_PREFERENCE_SETResult>> USP_ADMIN_SYSTEM_PREFERENCE_SETAsync(long? SystemPreferenceID, string PreferenceDetail, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_SYSTEMEVENT_GETListResult>> USP_ADMIN_SYSTEMEVENT_GETListAsync(string LanguageId, long? UserId, DateTime? FromDate, DateTime? ToDate, long? EventTypeId, int? PageNo, int? PageSize, string SortColumn, string SortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_SYSTEMFUNCTION_GETLISTResult>> USP_ADMIN_SYSTEMFUNCTION_GETLISTAsync(string LanguageId, string SystemFunctionName, int? PageNo, int? PageSize, string SortColumn, string SortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_SYSTEMFUNCTION_PersonANDEmployeeGroup_DELResult>> USP_ADMIN_SYSTEMFUNCTION_PersonANDEmployeeGroup_DELAsync(long? SystemFunctionID, long? UserId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_Admin_SystemFunction_PersonANDEmployeeGroup_GetListResult>> USP_Admin_SystemFunction_PersonANDEmployeeGroup_GetListAsync(long? SystemFunctionID, string LangID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? ActorTypeID, string Name, string OrganizationName, string Description, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_SYSTEMFUNCTION_USERPERMISSION_GetListResult>> USP_ADMIN_SYSTEMFUNCTION_USERPERMISSION_GetListAsync(string LanguageId, long? EmployeeId, long? SystemFunctionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_Admin_UserGoupAndUser_GetListResult>> USP_Admin_UserGoupAndUser_GetListAsync(string LanguageId, long? Id, string Name, int? pageNo, int? pageSize, string sortColumn, string sortOrder, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_USERGROUP_SYSTEMFUNCTION_PERMISSION_GETLISTResult>> USP_ADMIN_USERGROUP_SYSTEMFUNCTION_PERMISSION_GETLISTAsync(string langId, long? SystemFunctionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_USERGROUPTOEMPLOYEE_SETResult>> USP_ADMIN_USERGROUPTOEMPLOYEE_SETAsync(long? idfEmployeeGroup, string strEmployees, long? idfDataAuditEvent, string user, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_UserListGetForUtilityResult>> USP_ADMIN_UserListGetForUtilityAsync(long? idfsSite, long? idfInstitution, int? pageNo, int? pageSize, bool? showUnconvertedOnly, string advancedSearch, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_USR_GROUPMEMBER_DELResult>> USP_ADMIN_USR_GROUPMEMBER_DELAsync(string idfEmployeeGroups, long? idfEmployee, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_USR_GROUPMEMBER_SETResult>> USP_ADMIN_USR_GROUPMEMBER_SETAsync(string idfEmployeeGroups, long? idfEmployee, int? intRowStatus, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_USR_LOGININFO_DELResult>> USP_ADMIN_USR_LOGININFO_DELAsync(long? idfUserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ADMIN_USR_LOGININFO_SETResult>> USP_ADMIN_USR_LOGININFO_SETAsync(long? idfEmployee, long? idfsPersonSite, string strAccountName, byte[] binPassword, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_AGG_CASE_DELETEResult>> USP_AGG_CASE_DELETEAsync(long? ID, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_AGG_CASE_GETDETAILResult>> USP_AGG_CASE_GETDETAILAsync(string LanguageID, long? idfsAggrCaseType, long? idfAggrCase, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplyFiltrationIndicator, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_AGG_CASE_SETResult>> USP_AGG_CASE_SETAsync(long? idfAggrCase, string strCaseID, long? idfsAggrCaseType, long? GeographicalAdministrativeUnitID, long? OrganizationalAdministrativeUnitID, long? idfReceivedByOffice, long? idfReceivedByPerson, long? idfSentByOffice, long? idfSentByPerson, long? idfEnteredByOffice, long? idfEnteredByPerson, long? idfCaseObservation, long? idfsCaseObservationFormTemplate, long? idfDiagnosticObservation, long? idfsDiagnosticObservationFormTemplate, long? idfProphylacticObservation, long? idfsProphylacticObservationFormTemplate, long? idfSanitaryObservation, long? idfVersion, long? idfDiagnosticVersion, long? idfProphylacticVersion, long? idfSanitaryVersion, long? idfsSanitaryObservationFormTemplate, DateTime? datReceivedByDate, DateTime? datSentByDate, DateTime? datEnteredByDate, DateTime? datStartDate, DateTime? datFinishDate, DateTime? datModificationForArchiveDate, long? SiteID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_AGG_REPORT_DELETEResult>> USP_AGG_REPORT_DELETEAsync(long? ID, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_AGG_REPORT_GETListResult>> USP_AGG_REPORT_GETListAsync(string LanguageID, long? AggregateReportTypeID, string ReportID, string LegacyReportID, long? AdministrativeUnitTypeID, long? TimeIntervalTypeID, DateTime? StartDate, DateTime? EndDate, long? AdministrativeUnitID, long? OrganizationID, bool? SelectAllIndicator, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplySiteFiltrationIndicator, string SortColumn, string SortOrder, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_AGG_REPORT_SETResult>> USP_AGG_REPORT_SETAsync(long? AggregateReportID, string EIDSSAggregateReportID, long? AggregateReportTypeID, long? GeographicalAdministrativeUnitID, long? OrganizationalAdministrativeUnitID, long? ReceivedByOrganizationID, long? ReceivedByPersonID, long? SentByOrganizationID, long? SentByPersonID, long? EnteredByOrganizationID, long? EnteredByPersonID, long? CaseObservationID, long? CaseObservationFormTemplateID, long? DiagnosticObservationID, long? DiagnosticObservationFormTemplateID, long? ProphylacticObservationID, long? ProphylacticObservationFormTemplateID, long? SanitaryObservationID, long? SanitaryObservationFormTemplateID, long? CaseVersion, long? DiagnosticVersion, long? ProphylacticVersion, long? SanitaryVersion, DateTime? ReceivedByDate, DateTime? SentByDate, DateTime? EnteredByDate, DateTime? StartDate, DateTime? FinishDate, long? SiteID, string AuditUserName, long? UserID, string Events, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_AS_CAMPAIGN_DELResult>> USP_AS_CAMPAIGN_DELAsync(string LanguageID, long? CampaignID, string UserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_AS_CAMPAIGN_GETDetailResult>> USP_AS_CAMPAIGN_GETDetailAsync(string LanguageID, long? CampaignID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_AS_CAMPAIGN_GETListResult>> USP_AS_CAMPAIGN_GETListAsync(string LanguageID, string CampaignID, string LegacyCampaignID, string CampaignName, long? CampaignTypeID, long? CampaignStatusTypeID, long? CampaignCategoryID, DateTime? StartDateFrom, DateTime? StartDateTo, long? DiseaseID, long? UserSiteID, long? UserEmployeeID, bool? ApplySiteFiltrationIndicator, string SortColumn, string SortOrder, int? Page, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_AS_CAMPAIGN_SETResult>> USP_AS_CAMPAIGN_SETAsync(string LanguageID, long? idfCampaign, long? CampaignTypeID, long? CampaignStatusTypeID, DateTime? CampaignDateStart, DateTime? CampaignDateEnd, string strCampaignID, string CampaignName, string CampaignAdministrator, string Conclusion, long? SiteID, long? CampaignCategoryTypeID, string AuditUserName, string CampaignToDiagnosisCombo, string MonitoringSessions, string Events, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_AS_CAMPAIGN_TO_DIAGNOSIS_SPECIES_SAMPLE_TYPE_GETListResult>> USP_AS_CAMPAIGN_TO_DIAGNOSIS_SPECIES_SAMPLE_TYPE_GETListAsync(string LanguageID, long? CampaignID, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_AS_DISASSOCITESESSION_FROM_CAMPAIGN_SETResult>> USP_AS_DISASSOCITESESSION_FROM_CAMPAIGN_SETAsync(long? idfCampaign, long? idfMonitoringSesion, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ASPNetUser_GetAccessRulesAndPermissionsResult>> USP_ASPNetUser_GetAccessRulesAndPermissionsAsync(long? UserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ASPNetUser_GetDetailResult>> USP_ASPNetUser_GetDetailAsync(string Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ASPNetUser_GetRolesAndPermissionsResult>> USP_ASPNetUser_GetRolesAndPermissionsAsync(long? idfuserid, long? EmployeeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ASPNetUserGetPermissionByRole_GETLISTResult>> USP_ASPNetUserGetPermissionByRole_GETLISTAsync(string strEmployees, string LangId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ASPNetUserSetSessionContextResult>> USP_ASPNetUserSetSessionContextAsync(string username, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_AVR_UserPermissionsGetResult>> USP_AVR_UserPermissionsGetAsync(long? idfEmployee, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_ADMIN_AggregateHumanCaseMatrixReport_GETResult>> USP_CONF_ADMIN_AggregateHumanCaseMatrixReport_GETAsync(long? idfVersion, int? pageNo, int? pageSize, string sortColumn, string sortOrder, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_ADMIN_AggregateVetCaseMatrixReport_GETResult>> USP_CONF_ADMIN_AggregateVetCaseMatrixReport_GETAsync(string versionList, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_ADMIN_ProphylacticMatrixReportGet_GETResult>> USP_CONF_ADMIN_ProphylacticMatrixReportGet_GETAsync(long? idfVersion, int? pageNo, int? pageSize, string sortColumn, string sortOrder, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_ADMIN_SanitaryMatrixReportGet_GETResult>> USP_CONF_ADMIN_SanitaryMatrixReportGet_GETAsync(string LangID, long? idfVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_ADMIN_VetDiagnosisInvesitgationMatrixReport_GETResult>> USP_CONF_ADMIN_VetDiagnosisInvesitgationMatrixReport_GETAsync(long? idfVersion, string LangID, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_AGEGROUPSTATISTICALAGEGROUPMATRIX_DELResult>> USP_CONF_AGEGROUPSTATISTICALAGEGROUPMATRIX_DELAsync(long? idfDiagnosisAgeGroupToStatisticalAgeGroup, bool? deleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_AGEGROUPSTATISTICALAGEGROUPMATRIX_GETLISTResult>> USP_CONF_AGEGROUPSTATISTICALAGEGROUPMATRIX_GETLISTAsync(string langId, long? idfsDiagnosisAgeGroup, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_AGEGROUPSTATISTICALAGEGROUPMATRIX_SETResult>> USP_CONF_AGEGROUPSTATISTICALAGEGROUPMATRIX_SETAsync(long? idfDiagnosisAgeGroupToStatisticalAgeGroup, long? idfsDiagnosisAgeGroup, long? idfsStatisticalAgeGroup, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_AggregateSetting_GetListResult>> USP_CONF_AggregateSetting_GetListAsync(long? idfCustomizationPackage, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_AggregateSetting_GetList_WithNameResult>> USP_CONF_AggregateSetting_GetList_WithNameAsync(string LanguageID, long? idfCustomizationPackage, long? idfsSite, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_AggregateSetting_SETResult>> USP_CONF_AggregateSetting_SETAsync(string AggregateSettingRecords, string Events, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_CUSTOMREPORT_DELResult>> USP_CONF_CUSTOMREPORT_DELAsync(long? idfReportRows, bool? deleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_CUSTOMREPORT_GETLISTResult>> USP_CONF_CUSTOMREPORT_GETLISTAsync(string langId, long? idfsCustomReportType, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_CUSTOMREPORT_ROWORDER_SETResult>> USP_CONF_CUSTOMREPORT_ROWORDER_SETAsync(DataTable rows, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_CUSTOMREPORT_SETResult>> USP_CONF_CUSTOMREPORT_SETAsync(long? idfReportRows, long? idfsCustomReportType, long? idfsDiagnosisOrReportDiagnosisGroup, long? idfsReportAdditionalText, long? idfsICDReportAdditionalText, int? intRowOrder, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASEAGEGROUPMATRIX_DELResult>> USP_CONF_DISEASEAGEGROUPMATRIX_DELAsync(long? idfDiagnosisAgeGroupToDiagnosis, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASEAGEGROUPMATRIX_GETLISTResult>> USP_CONF_DISEASEAGEGROUPMATRIX_GETLISTAsync(string LangId, long? idfsDiagnosis, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASEAGEGROUPMATRIX_SETResult>> USP_CONF_DISEASEAGEGROUPMATRIX_SETAsync(long? idfDiagnosisAgeGroupToDiagnosis, long? idfsDiagnosis, long? idfsDiagnosisAgeGroup, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASEGROUPDISEASEMATRIX_DELResult>> USP_CONF_DISEASEGROUPDISEASEMATRIX_DELAsync(long? idfDiagnosisToDiagnosisGroup, bool? deleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASEGROUPDISEASEMATRIX_GETLISTResult>> USP_CONF_DISEASEGROUPDISEASEMATRIX_GETLISTAsync(string LangId, long? idfsDiagnosisGroup, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASEGROUPDISEASEMATRIX_SETResult>> USP_CONF_DISEASEGROUPDISEASEMATRIX_SETAsync(long? idfDiagnosisToDiagnosisGroup, long? idfsDiagnosisGroup, long? idfsDiagnosis, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASEHUMANGENDERMATRIX_DELResult>> USP_CONF_DISEASEHUMANGENDERMATRIX_DELAsync(long? DiagnosisGroupToGenderUID, bool? deleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASEHUMANGENDERMATRIX_GETLISTResult>> USP_CONF_DISEASEHUMANGENDERMATRIX_GETLISTAsync(string LangId, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASEHUMANGENDERMATRIX_SETResult>> USP_CONF_DISEASEHUMANGENDERMATRIX_SETAsync(long? DiagnosisGroupToGenderUID, long? DiagnosisGroupID, long? GenderID, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASELABTESTMATRIX_DELResult>> USP_CONF_DISEASELABTESTMATRIX_DELAsync(long? idfTestforDisease, bool? deleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASELABTESTMATRIX_GETLISTResult>> USP_CONF_DISEASELABTESTMATRIX_GETLISTAsync(string langId, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASELABTESTMATRIX_SETResult>> USP_CONF_DISEASELABTESTMATRIX_SETAsync(long? idfTestForDisease, long? idfsDiagnosis, long? idfsSampleType, long? idfsTestName, long? idfsTestCategory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASEPENSIDETESTMATRIX_DELResult>> USP_CONF_DISEASEPENSIDETESTMATRIX_DELAsync(long? idfPensideTestforDisease, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASEPENSIDETESTMATRIX_GETListResult>> USP_CONF_DISEASEPENSIDETESTMATRIX_GETListAsync(string LangID, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASEPENSIDETESTMATRIX_SETResult>> USP_CONF_DISEASEPENSIDETESTMATRIX_SETAsync(long? idfPensideTestForDisease, long? idfsDiagnosis, long? idfsPensideTestName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASESAMPLETYPEMATRIX_BY_DISEASE_GETLISTResult>> USP_CONF_DISEASESAMPLETYPEMATRIX_BY_DISEASE_GETLISTAsync(string langId, long? idfsDiagnosis, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASESAMPLETYPEMATRIX_DELResult>> USP_CONF_DISEASESAMPLETYPEMATRIX_DELAsync(long? idfMaterialForDisease, bool? deleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASESAMPLETYPEMATRIX_GETLISTResult>> USP_CONF_DISEASESAMPLETYPEMATRIX_GETLISTAsync(string langId, long? idfsDiagnosis, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_DISEASESAMPLETYPEMATRIX_SETResult>> USP_CONF_DISEASESAMPLETYPEMATRIX_SETAsync(long? idfMaterialForDisease, long? idfsDiagnosis, long? idfsSampleType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_GetInvestigationTypes_GETResult>> USP_CONF_GetInvestigationTypes_GETAsync(long? idfsBaseReference, long? intHACode, string strLanguageID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_GetProphylacticMeasures_GETResult>> USP_CONF_GetProphylacticMeasures_GETAsync(long? idfsBaseReference, long? intHACode, string strLanguageID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_GetSanitaryActions_GETResult>> USP_CONF_GetSanitaryActions_GETAsync(long? idfsBaseReference, long? intHACode, string strLanguageID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_GetSpeciesList_GETResult>> USP_CONF_GetSpeciesList_GETAsync(long? idfsBaseReference, long? intHACode, string strLanguageID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_GetVetDiseaseList_GETResult>> USP_CONF_GetVetDiseaseList_GETAsync(long? idfsBaseReference, long? intHACode, string strLanguageID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_HumanAggregateCaseMatrixReport_DELETEResult>> USP_CONF_HumanAggregateCaseMatrixReport_DELETEAsync(long? idfAggrHumanCaseMTX, long? idfVersion, long? idfsDiagnosis, int? intNumRow, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_HumanAggregateCaseMatrixReport_POSTResult>> USP_CONF_HumanAggregateCaseMatrixReport_POSTAsync(long? idfAggrHumanCaseMTX, long? idfVersion, long? idfsDiagnosis, int? intNumRow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_HumanAggregateCaseMatrixReport_SETResult>> USP_CONF_HumanAggregateCaseMatrixReport_SETAsync(long? idfAggrHumanCaseMTX, long? idfVersion, string inJsonString, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_HumanAggregateCaseMatrixReportRecord_DELETEResult>> USP_CONF_HumanAggregateCaseMatrixReportRecord_DELETEAsync(long? idfAggrHumanCaseMTX, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_HumanAggregateCaseMatrixVersion_DELETEResult>> USP_CONF_HumanAggregateCaseMatrixVersion_DELETEAsync(long? idfVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_HumanAggregateCaseMatrixVersion_GETResult>> USP_CONF_HumanAggregateCaseMatrixVersion_GETAsync(long? idfVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_HumanAggregateCaseMatrixVersion_SETResult>> USP_CONF_HumanAggregateCaseMatrixVersion_SETAsync(long? idfVersion, long? idfsMatrixType, DateTime? datStartDate, string MatrixName, bool? blnIsActive, bool? blnIsDefault, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_HumanAggregateCaseMatrixVersionByMatrixType_GETResult>> USP_CONF_HumanAggregateCaseMatrixVersionByMatrixType_GETAsync(long? idfsMatrixType, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_HumanAggregateCaseMatrixVersionDiseaseList_GETResult>> USP_CONF_HumanAggregateCaseMatrixVersionDiseaseList_GETAsync(long? idfVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_LKUP_DISEASE_GENDER_MATRIXResult>> USP_CONF_LKUP_DISEASE_GENDER_MATRIXAsync(string LanguageID, long? DiseaseID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_PERSONALIDTYPEMATRIX_DELResult>> USP_CONF_PERSONALIDTYPEMATRIX_DELAsync(long? idfBaseReferenceAttribute, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_PERSONALIDTYPEMATRIX_GETLISTResult>> USP_CONF_PERSONALIDTYPEMATRIX_GETLISTAsync(string LangID, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_PERSONALIDTYPEMATRIX_SETResult>> USP_CONF_PERSONALIDTYPEMATRIX_SETAsync(long? idfPersonalIDType, string strFieldType, int? Length, int? intOrder, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_ProphylacticMatrixReportRecord_DELETEResult>> USP_CONF_ProphylacticMatrixReportRecord_DELETEAsync(long? idfAggrProphylacticActionMTX, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_REPORTDISEASEGROUPDISEASEMATRIX_DELResult>> USP_CONF_REPORTDISEASEGROUPDISEASEMATRIX_DELAsync(long? idfDiagnosisToGroupForReportType, bool? deleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_REPORTDISEASEGROUPDISEASEMATRIX_GETLISTResult>> USP_CONF_REPORTDISEASEGROUPDISEASEMATRIX_GETLISTAsync(string langId, long? idfsCustomReportType, long? idfsReportDiagnosisGroup, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_REPORTDISEASEGROUPDISEASEMATRIX_SETResult>> USP_CONF_REPORTDISEASEGROUPDISEASEMATRIX_SETAsync(long? idfDiagnosisToGroupForReportType, long? idfsCustomReportType, long? idfsReportDiagnosisGroup, long? idfsDiagnosis, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_SAMPLETYPEDERIVATIVEMATRIX_DELResult>> USP_CONF_SAMPLETYPEDERIVATIVEMATRIX_DELAsync(long? idfDerivativeForSampleType, bool? deleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_SAMPLETYPEDERIVATIVEMATRIX_GETLISTResult>> USP_CONF_SAMPLETYPEDERIVATIVEMATRIX_GETLISTAsync(string langId, long? idfsSampleType, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_SAMPLETYPEDERIVATIVEMATRIX_SETResult>> USP_CONF_SAMPLETYPEDERIVATIVEMATRIX_SETAsync(long? idfDerivativeForSampleType, long? idfsSampleType, long? idfsDerivativeType, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_SanitaryMatrixReportRecord_DELETEResult>> USP_CONF_SanitaryMatrixReportRecord_DELETEAsync(long? idfAggrSanitaryActionMTX, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_SPECIESTYPEANIMALAGEMATRIX_DELResult>> USP_CONF_SPECIESTYPEANIMALAGEMATRIX_DELAsync(long? idfSpeciesTypeToAnimalAge, bool? deleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_SPECIESTYPEANIMALAGEMATRIX_GETLISTResult>> USP_CONF_SPECIESTYPEANIMALAGEMATRIX_GETLISTAsync(string langId, long? idfsSpeciesType, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_SPECIESTYPEANIMALAGEMATRIX_SETResult>> USP_CONF_SPECIESTYPEANIMALAGEMATRIX_SETAsync(long? idfSpeciesTypeToAnimalAge, long? idfsSpeciesType, long? idfsAnimalAge, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_TESTTOTESTRESULTMATRIX_DELResult>> USP_CONF_TESTTOTESTRESULTMATRIX_DELAsync(long? idfsTestResultRelation, long? idfsTestName, long? idfsTestResult, bool? deleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_TESTTOTESTRESULTMATRIX_GETLISTResult>> USP_CONF_TESTTOTESTRESULTMATRIX_GETLISTAsync(string langId, long? idfsTestResultRelation, long? idfsTestName, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_TESTTOTESTRESULTMATRIX_SETResult>> USP_CONF_TESTTOTESTRESULTMATRIX_SETAsync(long? idfsTestResultRelation, long? idfsTestName, long? idfsTestResult, bool? blnIndicative, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_UNIQUENUMBERINGSCHEMA_GETLISTResult>> USP_CONF_UNIQUENUMBERINGSCHEMA_GETLISTAsync(string LangId, string QuickSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_UNIQUENUMBERINGSCHEMA_SETResult>> USP_CONF_UNIQUENUMBERINGSCHEMA_SETAsync(long? idfsNumberName, string strName, string strSuffix, string strSpecialCharacter, int? intNumberValue, string langId, int? intNextNumberValue, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_USER_GRIDS_GETDETAILResult>> USP_CONF_USER_GRIDS_GETDETAILAsync(long? idfUserID, string GridID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_USER_GRIDS_SETResult>> USP_CONF_USER_GRIDS_SETAsync(long? idfUserID, long? idfsSite, string ColumnDefinition, string GridID, int? intRowStatus, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VECTORTYPECOLLECTIONMETHODMATRIX_DELResult>> USP_CONF_VECTORTYPECOLLECTIONMETHODMATRIX_DELAsync(long? idfCollectionMethodForVectorType, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VECTORTYPECOLLECTIONMETHODMATRIX_GETLISTResult>> USP_CONF_VECTORTYPECOLLECTIONMETHODMATRIX_GETLISTAsync(string LangId, long? idfsVectorType, int? pageNo, int? pageSize, string sortColumn, string sortOrder, long? idfsCollectionMethod, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VECTORTYPECOLLECTIONMETHODMATRIX_SETResult>> USP_CONF_VECTORTYPECOLLECTIONMETHODMATRIX_SETAsync(long? idfCollectionMethodForVectorType, long? idfsVectorType, long? idfsCollectionMethod, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VECTORTYPEFIELDTESTMATRIX_DELResult>> USP_CONF_VECTORTYPEFIELDTESTMATRIX_DELAsync(long? idfPensideTestTypeForVectorType, bool? deleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VECTORTYPEFIELDTESTMATRIX_GETLISTResult>> USP_CONF_VECTORTYPEFIELDTESTMATRIX_GETLISTAsync(string langId, long? idfsVectorType, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VECTORTYPEFIELDTESTMATRIX_SETResult>> USP_CONF_VECTORTYPEFIELDTESTMATRIX_SETAsync(long? idfPensideTestTypeForVectorType, long? idfsVectorType, long? idfsPensideTestName, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VECTORTYPESAMPLETYPEMATRIX_DELResult>> USP_CONF_VECTORTYPESAMPLETYPEMATRIX_DELAsync(long? idfSampleTypeForVectorType, bool? deleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VECTORTYPESAMPLETYPEMATRIX_GETLISTResult>> USP_CONF_VECTORTYPESAMPLETYPEMATRIX_GETLISTAsync(string langId, long? idfsVectorType, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VECTORTYPESAMPLETYPEMATRIX_SETResult>> USP_CONF_VECTORTYPESAMPLETYPEMATRIX_SETAsync(long? idfSampleTypeForVectorType, long? idfsVectorType, long? idfsSampleType, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VETAggregateCaseMatrixReportRecord_DELETEResult>> USP_CONF_VETAggregateCaseMatrixReportRecord_DELETEAsync(long? idfAggrVetCaseMTX, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VetDiagnosisMatrixReportRecord_DELETEResult>> USP_CONF_VetDiagnosisMatrixReportRecord_DELETEAsync(long? idfAggrDiagnosticActionMTX, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VeterinaryAggregateCaseMatrixReport_SETResult>> USP_CONF_VeterinaryAggregateCaseMatrixReport_SETAsync(long? idfAggrVetCaseMTX, long? idfVersion, string inJsonString, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VeterinaryDiagnosticInvestigationMatrixReport_SETResult>> USP_CONF_VeterinaryDiagnosticInvestigationMatrixReport_SETAsync(long? idfAggrDiagnosticActionMTX, long? idfVersion, string inJsonString, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VeterinaryProphylacticMatrixReport_SETResult>> USP_CONF_VeterinaryProphylacticMatrixReport_SETAsync(long? idfAggrProphylacticActionMTX, long? idfVersion, string inJsonString, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_CONF_VeterinarySanitaryActionMatrixReport_SETResult>> USP_CONF_VeterinarySanitaryActionMatrixReport_SETAsync(long? idfAggrSanitaryActionMTX, long? idfVersion, string inJsonString, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_DAS_APPROVALS_GETListResult>> USP_DAS_APPROVALS_GETListAsync(string LanguageID, string SiteList, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_DAS_DASHBOARD_GETListResult>> USP_DAS_DASHBOARD_GETListAsync(string LanguageID, long? PersonID, string DashboardItemType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_DAS_INVESTIGATIONS_GETListResult>> USP_DAS_INVESTIGATIONS_GETListAsync(string LanguageID, string SiteList, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_DAS_MYCOLLECTIONS_GETListResult>> USP_DAS_MYCOLLECTIONS_GETListAsync(string LanguageID, long? PersonID, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_DAS_MYINVESTIGATIONS_GETListResult>> USP_DAS_MYINVESTIGATIONS_GETListAsync(string LanguageID, long? PersonID, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_DAS_MYNOTIFICATIONS_GETListResult>> USP_DAS_MYNOTIFICATIONS_GETListAsync(string LanguageID, long? PersonID, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_DAS_NOTIFICATIONS_GETListResult>> USP_DAS_NOTIFICATIONS_GETListAsync(string LanguageID, string SiteList, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_DAS_USERS_GETListResult>> USP_DAS_USERS_GETListAsync(string LanguageID, string SiteList, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_DataAudit_AuditEvents_GetListResult>> USP_DataAudit_AuditEvents_GetListAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<usp_Employee_ValidateResult>> usp_Employee_ValidateAsync(long? RootId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_AuditEventSystemLog_SETResult>> USP_GBL_AuditEventSystemLog_SETAsync(string AuditPrimaryTable, string AuditDataPreXML, string AuditDataPostXML, string AuditCreateDBObjectName, string AuditUpdateDBObjectName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_BASE_REFERENCE_Advanced_GETListResult>> USP_GBL_BASE_REFERENCE_Advanced_GETListAsync(string LangID, string ReferenceTypeName, long? intHACode, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_BASE_REFERENCE_GETListResult>> USP_GBL_BASE_REFERENCE_GETListAsync(string LangID, string ReferenceTypeName, long? intHACode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_BaseReferenceTranslation_GetResult>> USP_GBL_BaseReferenceTranslation_GetAsync(string LanguageID, long? idfsBaseReference, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_DataAuditEvent_DeleteResult>> USP_GBL_DataAuditEvent_DeleteAsync(string userName, string JSONUpdates, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_DataAuditEvent_RestoreResult>> USP_GBL_DataAuditEvent_RestoreAsync(long? UserId, long? SiteId, long? idfDataAuditEvent, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_DataAuditEvent_SETResult>> USP_GBL_DataAuditEvent_SETAsync(string userName, long? idfSiteId, string JSONUpdates, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_DataAuditEvent_UpdateResult>> USP_GBL_DataAuditEvent_UpdateAsync(long? idfUserID, string JSONUpdates, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_Department_GetListResult>> USP_GBL_Department_GetListAsync(string LanguageID, long? OrganizationID, long? DepartmentID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_DISEASE_MTX_GETResult>> USP_GBL_DISEASE_MTX_GETAsync(long? idfsBaseReference, long? intHACode, string strLanguageID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_DISEASE_MTX_GET_BY_UsingTypeResult>> USP_GBL_DISEASE_MTX_GET_BY_UsingTypeAsync(long? UsingType, long? intHACode, string strLanguageID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_EMPLOYEE_GROUP_GETListResult>> USP_GBL_EMPLOYEE_GROUP_GETListAsync(string LangID, long? idfsSite, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_EMPLOYEEGROUPSFOREMPLOYEE_GETLISTResult>> USP_GBL_EMPLOYEEGROUPSFOREMPLOYEE_GETLISTAsync(long? idfPerson, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_EMPLOYEESITE_GETDETAILResult>> USP_GBL_EMPLOYEESITE_GETDETAILAsync(long? idfPerson, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_GIS_Location_ChildLevel_GetResult>> USP_GBL_GIS_Location_ChildLevel_GetAsync(string LangID, string Parent_idfsReference, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_GIS_Location_CurrentLevel_GetResult>> USP_GBL_GIS_Location_CurrentLevel_GetAsync(string LangID, int? CurrentLevel, bool? AllCountries, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_GIS_Location_Levels_GetResult>> USP_GBL_GIS_Location_Levels_GetAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_GIS_LocationAncestry_GETListResult>> USP_GBL_GIS_LocationAncestry_GETListAsync(string languageId, long? locationId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_Languages_GETListResult>> USP_GBL_Languages_GETListAsync(string LanguageID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_LKUP_DISEASE_GETListResult>> USP_GBL_LKUP_DISEASE_GETListAsync(string LanguageID, int? AccessoryCode, long? UsingType, string AdvancedSearchTerm, long? UserEmployeeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_LKUP_DISEASE_GETList_PagedResult>> USP_GBL_LKUP_DISEASE_GETList_PagedAsync(string LanguageID, long? intHACode, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_LKUP_ORG_GETListResult>> USP_GBL_LKUP_ORG_GETListAsync(string LangID, int? SiteFlag, int? AccessoryCode, long? OrganizationTypeID, string AdvancedSearch, int? RowStatus, long? LocationID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_LKUP_PERSON_GETListResult>> USP_GBL_LKUP_PERSON_GETListAsync(string LangID, long? OfficeID, long? ID, bool? ShowUsersOnly, int? intHACode, string AdvancedSearch, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_LKUP_REFERENCETYPE_BY_IDS_GETLIST_PagedResult>> USP_GBL_LKUP_REFERENCETYPE_BY_IDS_GETLIST_PagedAsync(string referenceTypeIds, string languageId, int? intHACode, int? PaginationSet, int? PageSize, int? MaxPagesPerFetch, string Term, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_LKUP_REFERENCETYPE_FILTERED_PAGED_GETLISTResult>> USP_GBL_LKUP_REFERENCETYPE_FILTERED_PAGED_GETLISTAsync(string LangId, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_LKUP_REFERENCETYPE_GETLISTResult>> USP_GBL_LKUP_REFERENCETYPE_GETLISTAsync(string LangId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_LKUP_SAMPLESFORDISEASESResult>> USP_GBL_LKUP_SAMPLESFORDISEASESAsync(string LangId, long? idfsDiagnosis, int? AccessoryCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_LKUP_SITE_FROM_ORGResult>> USP_GBL_LKUP_SITE_FROM_ORGAsync(long? idfOffice, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_LogSecurityEvent_SETResult>> USP_GBL_LogSecurityEvent_SETAsync(long? idfUserID, long? idfsAction, bool? success, string strErrorText, string strDescription, long? idfObjectID, long? idfsProcessType, long? idfSiteId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_MENU_ByUser_GETListResult>> USP_GBL_MENU_ByUser_GETListAsync(long? idfUserId, string LangID, long? EmployeeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_MENU_GETListResult>> USP_GBL_MENU_GETListAsync(long? idfUserId, string LangID, long? EmployeeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_OBSERVATION_SETResult>> USP_GBL_OBSERVATION_SETAsync(long? idfObservation, long? idfsFormTemplate, int? intRowStatus, string strMaintenanceFlag, long? idfsSite, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_PERSON_GETDetailResult>> USP_GBL_PERSON_GETDetailAsync(long? idfPerson, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_POSTAL_CODE_GETLISTResult>> USP_GBL_POSTAL_CODE_GETLISTAsync(long? idfsLocation, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_POSTALCODE_SETResult>> USP_GBL_POSTALCODE_SETAsync(string strPostCode, long? idfsLocation, long? idfPostalCode, string user, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_ReportForm_DELETEResult>> USP_GBL_ReportForm_DELETEAsync(long? ID, string AuditUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_ReportForm_GETDETAILResult>> USP_GBL_ReportForm_GETDETAILAsync(string LangID, long? idfsReportFormType, long? idfReportForm, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_ReportForm_GetListResult>> USP_GBL_ReportForm_GetListAsync(string LanguageID, int? pageNo, int? PageSize, string SortColumn, string SortOrder, long? SiteID, long? ReportFormTypeID, string EIDSSReportID, long? AdministrativeUnitTypeID, long? TimeIntervalTypeID, DateTime? StartDate, DateTime? EndDate, long? AdministrativeLevelID, long? OrganizationID, string SiteList, bool? SelectAllIndicator, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplySiteFiltrationIndicator, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_ReportForm_SETResult>> USP_GBL_ReportForm_SETAsync(long? idfReportForm, string strReportFormID, long? idfsReportFormType, long? GeographicalAdministrativeUnitID, long? idfSentByOffice, long? idfSentByPerson, long? idfEnteredByOffice, long? idfEnteredByPerson, DateTime? datSentByDate, DateTime? datEnteredByDate, DateTime? datStartDate, DateTime? datFinishDate, long? idfDiagnosis, int? total, long? SiteID, long? UserID, int? notified, string comments, DateTime? datModificationForArchiveDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_ReportFormSummary_GetListResult>> USP_GBL_ReportFormSummary_GetListAsync(string LanguageID, long? ReportFormTypeID, long? AdministrativeUnitTypeID, long? TimeIntervalTypeID, DateTime? StartDate, DateTime? EndDate, long? AdministrativeUnitID, long? OrganizationID, string SiteList, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_Resource_GETListResult>> USP_GBL_Resource_GETListAsync(string CultureName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_SAMPLE_IMPORT_GETListResult>> USP_GBL_SAMPLE_IMPORT_GETListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, string EIDSSLocalOrFieldSampleID, long? FarmMasterID, string SpeciesTypeIDList, long? DiseaseID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_SecurityEventLog_GetListResult>> USP_GBL_SecurityEventLog_GetListAsync(string LangID, DateTime? ActionStartDate, DateTime? ActionEndDate, long? Action, long? ProcessType, long? ResultType, long? ObjectId, long? UserId, string ErrorText, string ProcessId, string Description, string SortColumn, string SortOrder, int? Page, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_Site_GETListResult>> USP_GBL_Site_GETListAsync(string languageId, long? UserId, bool? ApplySiteFiltrationIndicator, string SortColumn, string SortOrder, int? Page, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_SITE_GROUP_DELResult>> USP_GBL_SITE_GROUP_DELAsync(string LanguageID, long? SiteGroupID, string UserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_SITE_GROUP_GETDetailResult>> USP_GBL_SITE_GROUP_GETDetailAsync(string LanguageID, long? SiteGroupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_SITE_GROUP_GETListResult>> USP_GBL_SITE_GROUP_GETListAsync(string LanguageID, long? SiteGroupTypeID, string SiteGroupName, long? AdministrativeLevelID, long? CentralSiteID, long? SiteID, string EIDSSSiteID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_SITE_GROUP_SETResult>> USP_GBL_SITE_GROUP_SETAsync(string LanguageID, long? SiteGroupID, long? LocationID, string SiteGroupName, long? SiteGroupTypeID, long? CentralSiteID, string SiteGroupDescription, int? RowStatus, string AuditUserName, string Sites, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_STREET_GETListResult>> USP_GBL_STREET_GETListAsync(long? idfsLocation, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_STREET_SETResult>> USP_GBL_STREET_SETAsync(string strStreetName, long? idfsLocation, long? idfStreet, string user, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_TEST_DISEASE_GETListResult>> USP_GBL_TEST_DISEASE_GETListAsync(string LanguageID, string DiseaseIDList, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_TEST_INTERPRETATION_GETListResult>> USP_GBL_TEST_INTERPRETATION_GETListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? DiseaseReportID, long? MonitoringSessionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_USER_GETListResult>> USP_GBL_USER_GETListAsync(string languageId, long? siteId, bool? ApplySiteFiltrationIndicator, string SortColumn, string SortOrder, int? Page, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_USER_PREFERENCE_GETDetailResult>> USP_GBL_USER_PREFERENCE_GETDetailAsync(long? UserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_GBL_USER_PREFERENCE_SETResult>> USP_GBL_USER_PREFERENCE_SETAsync(long? UserPreferenceID, long? UserID, long? ModuleConstantID, string PreferenceDetail, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HACode_GetCheckListResult>> USP_HACode_GetCheckListAsync(string LangID, int? intHACodeMask, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_CAMPAIGN_DELResult>> USP_HAS_CAMPAIGN_DELAsync(string LanguageID, long? CampaignID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_CAMPAIGN_GETDetailResult>> USP_HAS_CAMPAIGN_GETDetailAsync(string LanguageID, long? CampaignID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_CAMPAIGN_GETListResult>> USP_HAS_CAMPAIGN_GETListAsync(string LanguageID, string CampaignID, string CampaignName, long? CampaignTypeID, long? CampaignStatusTypeID, DateTime? StartDateFrom, DateTime? StartDateTo, long? DiseaseID, long? AdministrativeLevelID, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplySiteFiltrationIndicator, string SortColumn, string SortOrder, int? Page, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_CAMPAIGN_SETResult>> USP_HAS_CAMPAIGN_SETAsync(string LanguageID, long? idfCampaign, long? CampaignTypeID, long? CampaignStatusTypeID, DateTime? CampaignDateStart, DateTime? CampaignDateEnd, string strCampaignID, string CampaignName, string CampaignAdministrator, string Conclusion, long? SiteID, long? CampaignCategoryTypeID, string AuditUserName, string CampaignToDiagnosisCombo, string MonitoringSessions, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_CAMPAIGN_TO_SAMPLE_TYPE_GETListResult>> USP_HAS_CAMPAIGN_TO_SAMPLE_TYPE_GETListAsync(string LanguageID, long? CampaignID, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_DetailedInformation_GetListResult>> USP_HAS_DetailedInformation_GetListAsync(string LanguageId, long? idfMonitoringSession, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_DISEASE_REPORT_GETListResult>> USP_HAS_DISEASE_REPORT_GETListAsync(string LanguageID, long? SessionKey, bool? ApplySiteFiltrationIndicator, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, string SortColumn, string SortOrder, int? Page, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_MONITORING_SESSION_ACTION_GETListResult>> USP_HAS_MONITORING_SESSION_ACTION_GETListAsync(string LanguageID, long? MonitoringSessionID, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_MONITORING_SESSION_DELResult>> USP_HAS_MONITORING_SESSION_DELAsync(long? MonitoringSessionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_MONITORING_SESSION_GETDetailResult>> USP_HAS_MONITORING_SESSION_GETDetailAsync(string LanguageID, long? MonitoringSessionID, bool? ApplyFiltrationIndicator, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_MONITORING_SESSION_GETListResult>> USP_HAS_MONITORING_SESSION_GETListAsync(string LanguageID, string SessionID, string LegacySessionID, string CampaignID, long? CampaignKey, long? SessionStatusTypeID, DateTime? DateEnteredFrom, DateTime? DateEnteredTo, long? AdministrativeLevelID, long? DiseaseID, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplySiteFiltrationIndicator, string SortColumn, string SortOrder, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_MONITORING_SESSION_SETResult>> USP_HAS_MONITORING_SESSION_SETAsync(string LanguageID, long? MonitoringSessionID, long? MonitoringSessionStatusTypeID, long? idfsLocation, long? EnteredByPersonID, long? CampaignID, long? SiteID, string EIDSSSessionID, DateTime? StartDate, DateTime? EndDate, long? SessionCategoryTypeID, int? RowStatus, long? CreateDiseaseReportHumanID, string AuditUserName, string DiseaseCombinations, string SampleTypeCombinations, string Samples, string SamplesToDiseases, string Tests, string Actions, string Events, long? UserId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_MONITORING_SESSION_TO_DISEASE_GETListResult>> USP_HAS_MONITORING_SESSION_TO_DISEASE_GETListAsync(string LanguageID, long? MonitoringSessionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_MONITORING_SESSION_TO_SAMPLE_TYPE_GETListResult>> USP_HAS_MONITORING_SESSION_TO_SAMPLE_TYPE_GETListAsync(string LanguageID, long? MonitoringSessionID, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HAS_Tests_GetListResult>> USP_HAS_Tests_GetListAsync(string LanguageId, long? idfMonitoringSession, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_DISEASE_AdvanceSearch_REPORT_GETListResult>> USP_HUM_DISEASE_AdvanceSearch_REPORT_GETListAsync(string LanguageID, long? HumanDiseaseReportID, string LegacyID, long? PatientID, string EIDSSPersonID, long? DiseaseID, long? ReportStatusTypeID, long? RegionID, long? RayonID, DateTime? DateEnteredFrom, DateTime? DateEnteredTo, long? ClassificationTypeID, long? HospitalizationStatusTypeID, string EIDSSReportID, string PatientFirstOrGivenName, string PatientMiddleName, string PatientLastOrSurname, string SentByFacility, string ReceivedByFacility, DateTime? DiagnosisDateFrom, DateTime? DiagnosisDateTo, string LocalSampleID, long? DataEntrySite, DateTime? DateOfSymptomsOnset, DateTime? NotificationDate, DateTime? DateOfFinalCaseClassification, long? LocationOfExposureRegion, long? LocationOfExposureRayon, string SiteList, long? EmployeeID, string EmployeeGroupList, long? SiteGroupID, bool? ApplyNonConfigurableFiltration, bool? ApplyConfigurableFiltration, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_DISEASE_ANTIVIRALTHERAPIES_GetListResult>> USP_HUM_DISEASE_ANTIVIRALTHERAPIES_GetListAsync(long? idfHumanCase, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_DISEASE_CONTACTS_GetListResult>> USP_HUM_DISEASE_CONTACTS_GetListAsync(long? idfHumanCase, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_DISEASE_GETDetailResult>> USP_HUM_DISEASE_GETDetailAsync(string LangID, long? SearchHumanCaseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_DISEASE_REPORT_GETListResult>> USP_HUM_DISEASE_REPORT_GETListAsync(string LanguageID, long? ReportKey, string ReportID, string LegacyReportID, long? SessionKey, long? PatientID, string PersonID, long? DiseaseID, long? ReportStatusTypeID, long? AdministrativeLevelID, DateTime? DateEnteredFrom, DateTime? DateEnteredTo, long? ClassificationTypeID, long? HospitalizationYNID, string PatientFirstName, string PatientMiddleName, string PatientLastName, long? SentByFacilityID, long? ReceivedByFacilityID, DateTime? DiagnosisDateFrom, DateTime? DiagnosisDateTo, string LocalOrFieldSampleID, long? DataEntrySiteID, DateTime? DateOfSymptomsOnsetFrom, DateTime? DateOfSymptomsOnsetTo, DateTime? NotificationDateFrom, DateTime? NotificationDateTo, DateTime? DateOfFinalCaseClassificationFrom, DateTime? DateOfFinalCaseClassificationTo, long? LocationOfExposureAdministrativeLevelID, long? OutcomeID, int? FilterOutbreakTiedReports, bool? OutbreakCasesIndicator, bool? RecordIdentifierSearchIndicator, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplySiteFiltrationIndicator, string SortColumn, string SortOrder, int? Page, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_DISEASE_REPORT_PERMISSION_GETDetailResult>> USP_HUM_DISEASE_REPORT_PERMISSION_GETDetailAsync(string LanguageID, long? RecordID, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_DISEASE_VACCINATIONS_GetListResult>> USP_HUM_DISEASE_VACCINATIONS_GetListAsync(long? idfHumanCase, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_HUMAN_DISEASE_DELResult>> USP_HUM_HUMAN_DISEASE_DELAsync(long? idfHumanCase, long? idfUserID, long? idfSiteId, bool? DeduplicationIndicator, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_HUMAN_DISEASE_INVESTIGATEDBY_UPDATEResult>> USP_HUM_HUMAN_DISEASE_INVESTIGATEDBY_UPDATEAsync(long? IdfHumanCase, long? IdfInvestigatedByPerson, string StrEpidemiologistsName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_HUMAN_DISEASE_SETResult>> USP_HUM_HUMAN_DISEASE_SETAsync(string LanguageID, long? idfHumanCase, long? idfHuman, long? idfHumanActual, string strHumanCaseId, long? idfsFinalDiagnosis, DateTime? datDateOfDiagnosis, DateTime? datNotificationDate, long? idfsFinalState, string strLocalIdentifier, long? idfSentByOffice, string strSentByFirstName, string strSentByPatronymicName, string strSentByLastName, long? idfSentByPerson, long? idfReceivedByOffice, string strReceivedByFirstName, string strReceivedByPatronymicName, string strReceivedByLastName, long? idfReceivedByPerson, long? idfsHospitalizationStatus, long? idfHospital, string strCurrentLocation, DateTime? datOnSetDate, long? idfsInitialCaseStatus, long? idfsYNPreviouslySoughtCare, DateTime? datFirstSoughtCareDate, long? idfSoughtCareFacility, long? idfsNonNotIFiableDiagnosis, long? idfsYNHospitalization, DateTime? datHospitalizationDate, DateTime? datDischargeDate, string strHospitalName, long? idfsYNAntimicrobialTherapy, string strAntibioticName, string strDosage, DateTime? datFirstAdministeredDate, string strAntibioticComments, long? idfsYNSpecIFicVaccinationAdministered, long? idfInvestigatedByOffice, DateTime? StartDateofInvestigation, long? idfsYNRelatedToOutbreak, long? idfOutbreak, long? idfsYNExposureLocationKnown, long? idfPointGeoLocation, DateTime? datExposureDate, long? idfsGeoLocationType, string strLocationDescription, long? idfsLocationCountry, long? idfsLocationRegion, long? idfsLocationRayon, long? idfsLocationSettlement, double? intLocationLatitude, double? intLocationLongitude, long? intElevation, long? idfsLocationGroundType, double? intLocationDistance, double? intLocationDirection, string strForeignAddress, string strNote, long? idfsFinalCaseStatus, long? idfsOutcome, DateTime? DateOfBirth, DateTime? datDateofDeath, long? idfsCaseProgressStatus, long? idfPersonEnteredBy, string strClinicalNotes, long? idfsYNSpecimenCollected, long? idfsYNTestsConducted, long? DiseaseReportTypeID, bool? blnClinicalDiagBasis, bool? blnLabDiagBasis, bool? blnEpiDiagBasis, DateTime? DateofClassification, string strSummaryNotes, long? idfEpiObservation, long? idfCSObservation, long? idfInvestigatedByPerson, string strEpidemiologistsName, long? idfsNotCollectedReason, string strNotCollectedReason, string SamplesParameters, string TestsParameters, string TestsInterpretationParameters, string AntiviralTherapiesParameters, string VaccinationsParameters, string ContactsParameters, string Events, long? idfsHumanAgeType, int? intPatientAge, DateTime? datCompletionPaperFormDate, int? RowStatus, long? idfsSite, string AuditUser, long? idfParentMonitoringSession, long? ConnectedTestId, long? DiseaseId, DateTime? DateOfDiagnosis, long? ChangedDiseaseId, DateTime? DateOfChangedDiagnosis, long? ChangeDiagnosisReasonId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_HUMAN_GETDetailResult>> USP_HUM_HUMAN_GETDetailAsync(string LangId, long? idfHumanActual, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_HUMAN_MASTER_DELResult>> USP_HUM_HUMAN_MASTER_DELAsync(long? HumanMasterID, long? idfDataAuditEvent, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_HUMAN_MASTER_GETDetailResult>> USP_HUM_HUMAN_MASTER_GETDetailAsync(string LangID, long? HumanMasterID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_HUMAN_MASTER_GETDetail_FROM_HUMAN_IDResult>> USP_HUM_HUMAN_MASTER_GETDetail_FROM_HUMAN_IDAsync(string LanguageID, long? HumanID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_HUMAN_MASTER_GETListResult>> USP_HUM_HUMAN_MASTER_GETListAsync(string LangID, string EIDSSPersonID, long? PersonalIDType, string PersonalID, string FirstOrGivenName, string SecondName, string LastOrSurname, DateTime? DateOfBirthFrom, DateTime? DateOfBirthTo, long? GenderTypeID, long? idfsLocation, long? MonitoringSessionID, long? SettlementTypeID, bool? RecordIdentifierSearchIndicator, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_HUMAN_MASTER_SETResult>> USP_HUM_HUMAN_MASTER_SETAsync(long? HumanMasterID,
            bool? CopyToHumanIndicator, long? PersonalIDType, string EIDSSPersonID, string PersonalID, string FirstName,
            string SecondName, string LastName, DateTime? DateOfBirth, DateTime? DateOfDeath, long? HumanGenderTypeID,
            long? OccupationTypeID, long? CitizenshipTypeID, string PassportNumber, long? IsEmployedTypeID,
            string EmployerName, DateTime? EmployedDateLastPresent, bool? EmployerForeignAddressIndicator,
            string EmployerForeignAddressString, long? EmployerGeoLocationID, long? EmployeridfsLocation,
            string EmployerstrStreetName, string EmployerstrApartment, string EmployerstrBuilding,
            string EmployerstrHouse, string EmployeridfsPostalCode, string EmployerPhone, long? IsStudentTypeID,
            string SchoolName, DateTime? SchoolDateLastAttended, bool? SchoolForeignAddressIndicator,
            string SchoolForeignAddressString, long? SchoolGeoLocationID, long? SchoolidfsLocation,
            string SchoolstrStreetName, string SchoolstrApartment, string SchoolstrBuilding, string SchoolstrHouse,
            string SchoolidfsPostalCode, string SchoolPhone, long? HumanGeoLocationID, long? HumanidfsLocation,
            string HumanstrStreetName, string HumanstrApartment, string HumanstrBuilding, string HumanstrHouse,
            string HumanidfsPostalCode, double? HumanstrLatitude, double? HumanstrLongitude, double? HumanstrElevation,
            long? HumanPermGeoLocationID, long? HumanPermidfsLocation, string HumanPermstrStreetName,
            string HumanPermstrApartment, string HumanPermstrBuilding, string HumanPermstrHouse,
            string HumanPermidfsPostalCode, long? HumanAltGeoLocationID, bool? HumanAltForeignAddressIndicator,
            string HumanAltForeignAddressString, long? HumanAltidfsLocation, string HumanAltstrStreetName,
            string HumanAltstrApartment, string HumanAltstrBuilding, string HumanAltstrHouse,
            string HumanAltidfsPostalCode, string RegistrationPhone, string HomePhone, string WorkPhone,
            int? ContactPhoneCountryCode, string ContactPhone, long? ContactPhoneTypeID, int? ContactPhone2CountryCode,
            string ContactPhone2, long? ContactPhone2TypeID, long? idfDataAuditEvent, string AuditUser,
            long? isAnotherPhoneTypeID, long? isAnotherAddressTypeID, OutputParameter<int> returnValue = null,
            CancellationToken cancellationToken = default);
        Task<List<USP_HUM_REP_WHOEXPORTResult>> USP_HUM_REP_WHOEXPORTAsync(string LangID, DateTime? DateFrom, DateTime? DateTo, long? DiseaseID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_SAMPLES_GetList_With_DerivatesResult>> USP_HUM_SAMPLES_GetList_With_DerivatesAsync(string LangID, long? idfHumanCase, long? SearchDiagnosis, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUM_TESTS_GetListResult>> USP_HUM_TESTS_GetListAsync(string LangID, long? idfHumanCase, long? SearchDiagnosis, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_HUMAN_DISEASELABTESTMATRIX_BY_DISEASE_GETLISTResult>> USP_HUMAN_DISEASELABTESTMATRIX_BY_DISEASE_GETLISTAsync(string langId, long? idfsDiagnosis, int? PaginationSet, int? PageSize, int? MaxPagesPerFetch, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ILI_Aggregate_DeleteResult>> USP_ILI_Aggregate_DeleteAsync(long? idfAggregateHeader, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ILI_Aggregate_Detail_GetListResult>> USP_ILI_Aggregate_Detail_GetListAsync(string LanguageID, long? idfAggregateHeader, string FormID, string SortColumn, string SortOrder, int? pageNo, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> USP_ILI_Aggregate_Detail_SETAsync(long? idfAggregateDetail, long? idfAggregateHeader, int? RowStatus, long? idfHospital, int? intAge0_4, int? intAge5_14, int? intAge15_29, int? intAge30_64, int? intAge65, int? inTotalILI, int? intTotalAdmissions, int? intILISamples, string AuditUserName, long? DataAuditEventID, string EIDSSObjectID, string RowAction, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ILI_Aggregate_Form_DeleteResult>> USP_ILI_Aggregate_Form_DeleteAsync(string UserId, long? idfAggregateDetail, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ILI_Aggregate_GetListResult>> USP_ILI_Aggregate_GetListAsync(string LanguageID, string FormID, string LegacyFormID, long? AggregateHeaderID, long? HospitalID, DateTime? StartDate, DateTime? FinishDate, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplySiteFiltrationIndicator, string SortColumn, string SortOrder, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_ILI_Aggregate_SetResult>> USP_ILI_Aggregate_SetAsync(long? idfAggregateHeader, long? idfEnteredBy, long? idfsSite, int? intYear, int? intWeek, DateTime? datStartDate, DateTime? datFinishDate, string strFormId, int? RowStatus, string AuditUserName, string ILITables, string Events, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_APPROVAL_ADVANCED_SEARCH_GETListResult>> USP_LAB_APPROVAL_ADVANCED_SEARCH_GETListAsync(string LanguageID, long? ReportOrSessionTypeID, long? SurveillanceTypeID, string SampleStatusTypeList, string AccessionedIndicatorList, string EIDSSLocalOrFieldSampleID, string EIDSSReportCampaignOrSessionID, long? SentToOrganizationID, long? SentToOrganizationSiteID, long? TransferredToOrganizationID, string EIDSSTransferID, long? ResultsReceivedFromID, DateTime? DateFrom, DateTime? DateTo, string EIDSSLaboratorySampleID, long? SampleTypeID, long? TestNameTypeID, long? DiseaseID, long? TestStatusTypeID, long? TestResultTypeID, DateTime? TestResultDateFrom, DateTime? TestResultDateTo, string PatientName, string FarmOwnerName, long? SpeciesTypeID, string SampleList, string TestList, long? UserID, long? UserEmployeeID, long? UserSiteID, long? UserOrganizationID, long? UserSiteGroupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_APPROVAL_GETListResult>> USP_LAB_APPROVAL_GETListAsync(string LanguageID, long? SampleID, long? TestID, long? UserOrganizationID, long? UserEmployeeID, long? UserSiteID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_APPROVAL_SEARCH_GETListResult>> USP_LAB_APPROVAL_SEARCH_GETListAsync(string LanguageID, string SearchString, bool? AccessionedIndicator, long? UserID, long? UserEmployeeID, long? UserOrganizationID, long? UserSiteID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_BATCH_ADVANCED_SEARCH_GETListResult>> USP_LAB_BATCH_ADVANCED_SEARCH_GETListAsync(string LanguageID, long? ReportOrSessionTypeID, long? SurveillanceTypeID, string SampleStatusTypeList, string AccessionedIndicatorList, string EIDSSLocalOrFieldSampleID, string EIDSSReportCampaignOrSessionID, long? SentToOrganizationID, long? TransferredToOrganizationID, string EIDSSTransferID, long? ResultsReceivedFromID, DateTime? DateFrom, DateTime? DateTo, string EIDSSLaboratorySampleID, long? SampleTypeID, long? TestNameTypeID, long? DiseaseID, long? TestStatusTypeID, long? TestResultTypeID, DateTime? TestResultDateFrom, DateTime? TestResultDateTo, string PatientName, string FarmOwnerName, long? SpeciesTypeID, string BatchTestList, bool? FiltrationIndicator, long? UserID, long? UserEmployeeID, long? UserSiteID, long? UserOrganizationID, long? UserSiteGroupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_BATCH_GETListResult>> USP_LAB_BATCH_GETListAsync(string LanguageID, long? UserID, long? UserEmployeeID, long? UserOrganizationID, long? UserSiteID, long? UserSiteGroupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_FAVORITE_ADVANCED_SEARCH_GETListResult>> USP_LAB_FAVORITE_ADVANCED_SEARCH_GETListAsync(string LanguageID, long? ReportOrSessionTypeID, long? SurveillanceTypeID, string SampleStatusTypeList, string AccessionedIndicatorList, string EIDSSLocalOrFieldSampleID, string EIDSSReportCampaignOrSessionID, long? SentToOrganizationID, long? SentToOrganizationSiteID, long? TransferredToOrganizationID, string EIDSSTransferID, long? ResultsReceivedFromID, DateTime? DateFrom, DateTime? DateTo, string EIDSSLaboratorySampleID, long? SampleTypeID, long? TestNameTypeID, long? DiseaseID, long? TestStatusTypeID, long? TestResultTypeID, DateTime? TestResultDateFrom, DateTime? TestResultDateTo, string PatientName, string FarmOwnerName, long? SpeciesTypeID, string SampleList, string TestList, bool? FiltrationIndicator, long? UserID, long? UserEmployeeID, long? UserSiteID, long? UserOrganizationID, long? UserSiteGroupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_FAVORITE_GETListResult>> USP_LAB_FAVORITE_GETListAsync(string LanguageID, long? SampleID, long? UserID, long? UserEmployeeID, long? UserSiteID, long? UserOrganizationID, long? UserSiteGroupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_FAVORITE_SEARCH_GETListResult>> USP_LAB_FAVORITE_SEARCH_GETListAsync(string LanguageID, string SearchString, bool? AccessionedIndicator, long? UserID, long? UserEmployeeID, long? UserOrganizationID, long? UserSiteID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_FREEZER_GETListResult>> USP_LAB_FREEZER_GETListAsync(string LanguageID, string SiteList, string FreezerName, string Note, long? StorageTypeID, string Building, string Room, string SearchString, int? PaginationSet, int? PageSize, int? MaxPagesPerFetch, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_FREEZER_SETResult>> USP_LAB_FREEZER_SETAsync(string LanguageID, long? FreezerID, long? StorageTypeID, long? OrganizationID, string FreezerName, string FreezerNote, string EIDSSFreezerID, string Building, string Room, int? RowStatus, string FreezerSubdivisions, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_FREEZER_SUBDIVISION_GETListResult>> USP_LAB_FREEZER_SUBDIVISION_GETListAsync(string LanguageID, long? FreezerID, long? SiteID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_SAMPLE_ADVANCED_SEARCH_GETListResult>> USP_LAB_SAMPLE_ADVANCED_SEARCH_GETListAsync(string LanguageID, long? ReportOrSessionTypeID, long? SurveillanceTypeID, string SampleStatusTypeList, string AccessionedIndicatorList, string EIDSSLocalOrFieldSampleID, string EIDSSReportCampaignOrSessionID, long? SentToOrganizationID, long? SentToOrganizationSiteID, long? TransferredToOrganizationID, string EIDSSTransferID, long? ResultsReceivedFromID, DateTime? DateFrom, DateTime? DateTo, string EIDSSLaboratorySampleID, long? SampleTypeID, long? TestNameTypeID, long? DiseaseID, long? TestStatusTypeID, long? TestResultTypeID, DateTime? TestResultDateFrom, DateTime? TestResultDateTo, string PatientName, string FarmOwnerName, long? SpeciesTypeID, string SampleList, bool? TestUnassignedIndicator, bool? TestCompletedIndicator, bool? FiltrationIndicator, long? UserID, long? UserEmployeeID, long? UserSiteID, long? UserOrganizationID, long? UserSiteGroupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_SAMPLE_BAR_CODE_GETListResult>> USP_LAB_SAMPLE_BAR_CODE_GETListAsync(string LanguageID, string SampleList, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_SAMPLE_GETDetailResult>> USP_LAB_SAMPLE_GETDetailAsync(string LanguageID, long? SampleID, long? UserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_SAMPLE_GETListResult>> USP_LAB_SAMPLE_GETListAsync(string LanguageID, long? SampleID, long? ParentSampleID, int? DaysFromAccessionDate, string SampleList, bool? TestUnassignedIndicator, bool? TestCompletedIndicator, bool? FiltrationIndicator, long? UserID, long? UserEmployeeID, long? UserSiteID, long? UserOrganizationID, long? UserSiteGroupID, string SortColumn, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_SAMPLE_GetListByBarCodesResult>> USP_LAB_SAMPLE_GetListByBarCodesAsync(string BarcodeList, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_SAMPLE_GROUP_ACCESSION_GETListResult>> USP_LAB_SAMPLE_GROUP_ACCESSION_GETListAsync(string LanguageID, string EIDSSLocalOrFieldSampleIDList, long? SentToOrganizationID, long? UserID, long? UserEmployeeID, long? UserSiteID, long? UserOrganizationID, long? UserSiteGroupID, int? Page, int? PageSize, string SortColumn, string SortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_SAMPLE_ID_GETListResult>> USP_LAB_SAMPLE_ID_GETListAsync(string Samples, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_SAMPLE_SEARCH_GETListResult>> USP_LAB_SAMPLE_SEARCH_GETListAsync(string LanguageID, string SearchString, bool? AccessionedIndicator, bool? TestUnassignedIndicator, bool? TestCompletedIndicator, long? UserID, long? UserEmployeeID, long? UserOrganizationID, long? UserSiteID, int? DaysFromAccessionDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_SETResult>> USP_LAB_SETAsync(string Samples, string BatchTests, string Tests, string TestAmendments, string Transfers, string FreezerBoxLocationAvailabilities, string Events, long? UserID, string Favorites, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_TAB_COUNTS_GETListResult>> USP_LAB_TAB_COUNTS_GETListAsync(int? DaysFromAccessionDate, long? UserID, long? UserEmployeeID, long? UserSiteID, long? UserOrganizationID, long? UserSiteGroupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_TEST_ADVANCED_SEARCH_GETListResult>> USP_LAB_TEST_ADVANCED_SEARCH_GETListAsync(string LanguageID, long? ReportOrSessionTypeID, long? SurveillanceTypeID, string SampleStatusTypeList, string AccessionedIndicatorList, string EIDSSLocalOrFieldSampleID, string EIDSSReportCampaignOrSessionID, long? SentToOrganizationID, long? SentToOrganizationSiteID, long? TransferredToOrganizationID, string EIDSSTransferID, long? ResultsReceivedFromID, DateTime? DateFrom, DateTime? DateTo, string EIDSSLaboratorySampleID, long? SampleTypeID, long? TestNameTypeID, long? DiseaseID, long? TestStatusTypeID, long? TestResultTypeID, DateTime? TestResultDateFrom, DateTime? TestResultDateTo, string PatientName, string FarmOwnerName, long? SpeciesTypeID, string TestList, bool? BatchTestAssociationIndicator, bool? FiltrationIndicator, long? UserID, long? UserEmployeeID, long? UserSiteID, long? UserOrganizationID, long? UserSiteGroupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_TEST_AMENDMENT_GETListResult>> USP_LAB_TEST_AMENDMENT_GETListAsync(string LanguageID, long? TestID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_TEST_GETDetailResult>> USP_LAB_TEST_GETDetailAsync(string LanguageID, long? TestID, long? UserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_TEST_GETListResult>> USP_LAB_TEST_GETListAsync(string LanguageID, long? TestStatusTypeID, long? SampleID, long? TestID, long? BatchTestID, string TestList, int? DaysFromAccessionDate, bool? FiltrationIndicator, long? UserID, long? UserEmployeeID, long? UserOrganizationID, long? UserSiteID, long? UserSiteGroupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_TEST_SEARCH_GETListResult>> USP_LAB_TEST_SEARCH_GETListAsync(string LanguageID, string SearchString, bool? AccessionedIndicator, long? UserID, long? UserEmployeeID, long? UserOrganizationID, long? UserSiteID, int? DaysFromAccessionDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_TRANSFER_ADVANCED_SEARCH_GETListResult>> USP_LAB_TRANSFER_ADVANCED_SEARCH_GETListAsync(string LanguageID, long? ReportOrSessionTypeID, long? SurveillanceTypeID, string SampleStatusTypeList, string AccessionedIndicatorList, string EIDSSLocalOrFieldSampleID, string EIDSSReportCampaignOrSessionID, long? SentToOrganizationID, long? SentToOrganizationSiteID, long? TransferredToOrganizationID, string EIDSSTransferID, long? ResultsReceivedFromID, DateTime? DateFrom, DateTime? DateTo, string EIDSSLaboratorySampleID, long? SampleTypeID, long? TestNameTypeID, string TestNameTypeName, long? DiseaseID, long? TestStatusTypeID, long? TestResultTypeID, DateTime? TestResultDateFrom, DateTime? TestResultDateTo, string PatientName, string FarmOwnerName, long? SpeciesTypeID, string TransferList, bool? FiltrationIndicator, long? UserID, long? UserEmployeeID, long? UserSiteID, long? UserOrganizationID, long? UserSiteGroupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_TRANSFER_GETDetailResult>> USP_LAB_TRANSFER_GETDetailAsync(string LanguageID, long? TransferID, long? UserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_TRANSFER_GETListResult>> USP_LAB_TRANSFER_GETListAsync(string LanguageID, long? SampleID, bool? FiltrationIndicator, long? UserID, long? UserEmployeeID, long? UserSiteID, long? UserOrganizationID, long? UserSiteGroupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_LAB_TRANSFER_SEARCH_GETListResult>> USP_LAB_TRANSFER_SEARCH_GETListAsync(string LanguageID, string SearchString, bool? AccessionedIndicator, long? UserID, long? UserEmployeeID, long? UserOrganizationID, long? UserSiteID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Case_GetDetailResult>> USP_OMM_Case_GetDetailAsync(string LanguageID, long? OutbreakCaseReportUID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Case_GetListResult>> USP_OMM_Case_GetListAsync(string LanguageID, long? OutbreakID, string SearchTerm, long? HumanMasterID, long? FarmMasterID, bool? TodaysFollowUpsIndicator, int? Page, int? PageSize, string SortColumn, string SortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_CASE_MONITORING_GETListResult>> USP_OMM_CASE_MONITORING_GETListAsync(string LanguageId, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? CaseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Case_QuickSetResult>> USP_OMM_Case_QuickSetAsync(string CaseIdentifiers, long? StatusTypeId, long? ClassificationTypeId, string CaseMonitorings, string Events, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Case_SetResult>> USP_OMM_Case_SetAsync(string LangID, int? intRowStatus, string User, long? OutbreakCaseReportUID, long? idfOutbreak, long? idfHumanCase, long? idfVetCase, long? OutbreakCaseObservationID, long? idfHumanActual, long? idfsDiagnosisOrDiagnosisGroup, DateTime? datNotificationDate, long? idfSentByOffice, long? idfSentByPerson, long? idfReceivedByOffice, long? idfReceivedByPerson, long? CaseGeoLocationID, long? CaseidfsLocation, string CasestrStreetName, string CasestrApartment, string CasestrBuilding, string CasestrHouse, string CaseidfsPostalCode, double? CasestrLatitude, double? CasestrLongitude, double? CasestrElevation, long? CaseStatusID, DateTime? datOnSetDate, DateTime? datFinalDiagnosisDate, long? idfHospital, string strHospitalName, DateTime? datHospitalizationDate, DateTime? datDischargeDate, string Antimicrobials, string vaccinations, string strClinicalNotes, long? idfsYNHospitalization, long? idfsYNAntimicrobialTherapy, long? idfsYNSpecIFicVaccinationAdministered, DateTime? StartDateofInvestigation, long? idfCSObservation, long? OutbreakCaseClassificationID, long? idfInvestigatedByOffice, long? idfInvestigatedByPerson, DateTime? datInvestigationStartDate, string IsPrimaryCaseFlag, string strNote, long? idfEpiObservation, string CaseMonitorings, string CaseContacts, long? idfsYNSpecimenCollected, string CaseSamples, long? idfsYNTestsConducted, string CaseTests, string Events, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_CaseSummary_GetDetailResult>> USP_OMM_CaseSummary_GetDetailAsync(string LangID, long? OutbreakCaseReportUID, long? idfHumanActual, long? idfFarmActual, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Contact_GetDetailResult>> USP_OMM_Contact_GetDetailAsync(string LangID, long? OutbreakCaseContactUID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Contact_GetListResult>> USP_OMM_Contact_GetListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? CaseID, long? OutbreakID, string SearchTerm, bool? TodaysFollowUpsIndicator, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Contact_SetResult>> USP_OMM_Contact_SetAsync(string Contacts, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_FlexForm_SetResult>> USP_OMM_FlexForm_SetAsync(long? idfsFormTemplate, long? idfOutbreakSpeciesParameterUID, string strFormCategory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_HeatMapResult>> USP_OMM_HeatMapAsync(long? OutbreakId, string CaseType, long? DiseaseReportId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Herd_GetListResult>> USP_OMM_Herd_GetListAsync(string LangID, long? idfFarmActual, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_HerdSpecies_SetResult>> USP_OMM_HerdSpecies_SetAsync(string LangID, long? idfFarmActual, string Herds, string Species, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_HUMAN_Case_GetDetailResult>> USP_OMM_HUMAN_Case_GetDetailAsync(string LangID, long? OutbreakCaseReportUID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Note_File_GetResult>> USP_OMM_Note_File_GetAsync(long? idfOutbreakNote, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Session_DelResult>> USP_OMM_Session_DelAsync(long? idfOutbreak, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Session_GetDetailResult>> USP_OMM_Session_GetDetailAsync(string LangID, long? idfOutbreak, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Session_GetListResult>> USP_OMM_Session_GetListAsync(string LanguageID, string OutbreakID, long? OutbreakTypeID, long? SearchDiagnosesGroup, DateTime? StartDateFrom, DateTime? StartDateTo, long? OutbreakStatusTypeID, long? AdministrativeLevelID, string QuickSearch, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplySiteFiltrationIndicator, string SortColumn, string SortOrder, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_SESSION_Note_DeleteResult>> USP_OMM_SESSION_Note_DeleteAsync(long? idfOutbreakNote, bool? deleteFileObjectOnly, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Session_Note_GetDetailResult>> USP_OMM_Session_Note_GetDetailAsync(string LangID, long? idfOutbreakNote, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Session_Note_GetListResult>> USP_OMM_Session_Note_GetListAsync(string LangID, long? idfOutbreak, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_SESSION_Note_SetResult>> USP_OMM_SESSION_Note_SetAsync(string LangID, long? idfOutbreakNote, long? idfOutbreak, string strNote, long? idfPerson, int? intRowStatus, string strMaintenanceFlag, string strReservedAttribute, long? UpdatePriorityID, string UpdateRecordTitle, string UploadFileName, string UploadFileDescription, byte[] UploadFileObject, string DeleteAttachment, string User, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Session_Parameters_GetListResult>> USP_OMM_Session_Parameters_GetListAsync(string LangID, long? idfOutbreak, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Session_SetResult>> USP_OMM_Session_SetAsync(long? idfOutbreak, long? idfsDiagnosisOrDiagnosisGroup, long? idfsOutbreakStatus, long? OutbreakTypeId, long? idfsLocation, DateTime? datStartDate, DateTime? datCloseDate, string strOutbreakID, string strDescription, int? intRowStatus, DateTime? datModificationForArchiveDate, long? idfPrimaryCaseOrSession, long? idfsSite, string outbreakParameters, string User, string Events, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Species_GetListResult>> USP_OMM_Species_GetListAsync(string LangID, long? idfFarmActual, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_Vector_GetListResult>> USP_OMM_Vector_GetListAsync(string LanguageID, long? OutbreakKey, string SearchTerm, string SortColumn, string SortOrder, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_OMM_VET_CASE_GETListResult>> USP_OMM_VET_CASE_GETListAsync(string LanguageID, long? CaseKey, string CaseID, string LegacyCaseID, long? SessionKey, long? FarmMasterID, long? DiseaseID, long? ReportStatusTypeID, long? AdministrativeLevelID, DateTime? DateEnteredFrom, DateTime? DateEnteredTo, long? ClassificationTypeID, string PersonID, long? ReportTypeID, long? SpeciesTypeID, DateTime? DiagnosisDateFrom, DateTime? DiagnosisDateTo, DateTime? InvestigationDateFrom, DateTime? InvestigationDateTo, string LocalOrFieldSampleID, int? TotalAnimalQuantityFrom, int? TotalAnimalQuantityTo, string SessionID, long? DataEntrySiteID, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplySiteFiltrationIndicator, string SortColumn, string SortOrder, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<usp_PersonGetListResult>> usp_PersonGetListAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_PIN_Audit_SetResult>> USP_PIN_Audit_SetAsync(string strPIN, long? idfUser, long? idfsSite, long? idfHumanCase, long? idfH0Form, DateTime? datEIDSSAccessAttempt, DateTime? datPINAccessAttempt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_AccessRule_SETResult>> USP_REF_AccessRule_SETAsync(long? AccessRuleID, string AccessRuleName, string strNationalName, string LangId, int? intOrder, bool? BorderingAreaRuleIndicator, bool? DefaultRuleIndicator, bool? ReciprocalRuleIndicator, long? GrantingActorSiteGroupID, long? GrantingActorSiteID, bool? AccessToPersonalDataPermissionIndicator, bool? AccessToGenderAndAgeDataPermissionIndicator, bool? CreatePermissionIndicator, bool? DeletePermissionIndicator, bool? ReadPermissionIndicator, bool? WritePermissionIndicator, long? AdministrativeLevelTypeID, int? RowStatus, string ReceivingActors, string AuditUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_AGEGROUP_CANDELResult>> USP_REF_AGEGROUP_CANDELAsync(long? idfsAgeGroup, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_AGEGROUP_DELResult>> USP_REF_AGEGROUP_DELAsync(long? idfsAgeGroup, bool? deleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_AGEGROUP_DOESEXISTResult>> USP_REF_AGEGROUP_DOESEXISTAsync(string strName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_AGEGROUP_GETListResult>> USP_REF_AGEGROUP_GETListAsync(string langID, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_AGEGROUP_SETResult>> USP_REF_AGEGROUP_SETAsync(long? idfsAgeGroup, string strDefault, string strName, int? intLowerBoundary, int? intUpperBoundary, long? idfsAgeType, string LangID, int? intOrder, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_BASEREFERENCE_DELResult>> USP_REF_BASEREFERENCE_DELAsync(long? idfsBaseReference, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_BASEREFERENCE_Filtered_GETListResult>> USP_REF_BASEREFERENCE_Filtered_GETListAsync(long? idfsReferenceType, string langID, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_BASEREFERENCE_GETListResult>> USP_REF_BASEREFERENCE_GETListAsync(long? idfsReferenceType, string langID, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_BASEREFERENCE_SETResult>> USP_REF_BASEREFERENCE_SETAsync(long? idfsBaseReference, long? idfsReferenceType, string LangID, string strDefault, string strName, int? HACode, int? Order, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, string LOINC, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_CASECLASSIFICATION_CANDELResult>> USP_REF_CASECLASSIFICATION_CANDELAsync(long? idfsCaseClassification, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_CASECLASSIFICATION_DELResult>> USP_REF_CASECLASSIFICATION_DELAsync(long? IdfsCaseClassification, bool? DeleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_CASECLASSIFICATION_DOESEXISTResult>> USP_REF_CASECLASSIFICATION_DOESEXISTAsync(string strName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_CASECLASSIFICATION_GETListResult>> USP_REF_CASECLASSIFICATION_GETListAsync(string langID, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_CASECLASSIFICATION_SETResult>> USP_REF_CASECLASSIFICATION_SETAsync(long? idfsCaseClassification, string strDefault, string strName, bool? blnInitialHumanCaseClassification, bool? blnFinalHumanCaseClassification, string LangID, int? intOrder, int? intHACode, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_DIAGNOSISREFERENCE_CANDELResult>> USP_REF_DIAGNOSISREFERENCE_CANDELAsync(long? idfsDiagnosis, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_DIAGNOSISREFERENCE_DELResult>> USP_REF_DIAGNOSISREFERENCE_DELAsync(long? IdfsDiagnosis, bool? ForceDelete, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_DIAGNOSISREFERENCE_DOESEXISTResult>> USP_REF_DIAGNOSISREFERENCE_DOESEXISTAsync(string strName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_DIAGNOSISREFERENCE_GETDetailResult>> USP_REF_DIAGNOSISREFERENCE_GETDetailAsync(long? idfsDiagnosis, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_DIAGNOSISREFERENCE_GETListResult>> USP_REF_DIAGNOSISREFERENCE_GETListAsync(string LangID, string search, long? AccessoryCode, int? pageNo, int? pageSize, string sortColumn, string sortOrder, string advancedSearch, long? UserEmployeeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_DIAGNOSISREFERENCE_SETResult>> USP_REF_DIAGNOSISREFERENCE_SETAsync(long? idfsDiagnosis, string strDefault, string strName, string strOIECode, string strIDC10, int? intHACode, long? idfsUsingType, string strPensideTest, string strLabTest, string strSampleType, bool? blnZoonotic, bool? blnSyndrome, string LangId, int? intOrder, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_LKUP_BASE_REFERENCE_GETListResult>> USP_REF_LKUP_BASE_REFERENCE_GETListAsync(long? idfsReferenceType, string langID, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_LKUP_CASECLASSIFICATIONResult>> USP_REF_LKUP_CASECLASSIFICATIONAsync(string langID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_MEASURELIST_DOESEXISTResult>> USP_REF_MEASURELIST_DOESEXISTAsync(string strName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_MEASURELIST_GETListResult>> USP_REF_MEASURELIST_GETListAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_MEASUREREFEFENCE_CANDELResult>> USP_REF_MEASUREREFEFENCE_CANDELAsync(long? idfsAction, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_MEASUREREFEFENCE_DELResult>> USP_REF_MEASUREREFEFENCE_DELAsync(long? IdfsAction, long? IdfsMeasureList, bool? DeleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_MEASUREREFERENCE_GETListResult>> USP_REF_MEASUREREFERENCE_GETListAsync(string LangID, long? idfsActionList, int? pageNo, int? pageSize, string sortColumn, string sortOrder, string advancedSearch, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_MEASUREREFERENCE_SETResult>> USP_REF_MEASUREREFERENCE_SETAsync(long? idfsBaseReference, long? idfsReferenceType, string strDefault, string strName, string strActionCode, int? intOrder, string LangID, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_REPORTDIAGNOSISGROUP_CANDELResult>> USP_REF_REPORTDIAGNOSISGROUP_CANDELAsync(long? idfsReportDiagnosisGroup, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_REPORTDIAGNOSISGROUP_DELResult>> USP_REF_REPORTDIAGNOSISGROUP_DELAsync(long? idfsReportDiagnosisGroup, bool? DeleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_REPORTDIAGNOSISGROUP_DOESEXISTResult>> USP_REF_REPORTDIAGNOSISGROUP_DOESEXISTAsync(string strName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_ReportDiagnosisGroup_GETListResult>> USP_REF_ReportDiagnosisGroup_GETListAsync(string langID, string strSearch, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_REPORTDIAGNOSISGROUP_SETResult>> USP_REF_REPORTDIAGNOSISGROUP_SETAsync(long? idfsReportDiagnosisGroup, string strDefault, string strName, string strCode, string LangID, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_SampleType_GetDetailResult>> USP_REF_SampleType_GetDetailAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_SAMPLETYPEREFERENCE_CANDELResult>> USP_REF_SAMPLETYPEREFERENCE_CANDELAsync(long? idfsSampleType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_SAMPLETYPEREFERENCE_DELResult>> USP_REF_SAMPLETYPEREFERENCE_DELAsync(long? IdfsSampleType, bool? DeleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_SAMPLETYPEREFERENCE_DOESEXISTResult>> USP_REF_SAMPLETYPEREFERENCE_DOESEXISTAsync(string strName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_SampleTypeReference_GetListResult>> USP_REF_SampleTypeReference_GetListAsync(string langID, string strSearchSampleType, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, int? intHACode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_SAMPLETYPEREFERENCE_SETResult>> USP_REF_SAMPLETYPEREFERENCE_SETAsync(long? IdfsSampleType, string strDefault, string strName, string strSampleCode, string LOINC_NUM, int? intHACode, int? intOrder, string LangID, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_SearchDuplicates_GetListResult>> USP_REF_SearchDuplicates_GetListAsync(string LangId, long? idfsBaseReferenceType, string strDefault, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_SPECIESTYPE_DELResult>> USP_REF_SPECIESTYPE_DELAsync(long? IdfsSpeciesType, bool? DeleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_SPECIESTYPE_DOESEXISTResult>> USP_REF_SPECIESTYPE_DOESEXISTAsync(string strName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_SPECIESTYPE_GETListResult>> USP_REF_SPECIESTYPE_GETListAsync(string langID, string strSpeciesType, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_SPECIESTYPE_SETResult>> USP_REF_SPECIESTYPE_SETAsync(long? IdfsSpeciesType, string strDefault, string strName, string strCode, int? intHACode, int? intOrder, string LangID, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_SPECIESTYPEREFERENCE_CANDELResult>> USP_REF_SPECIESTYPEREFERENCE_CANDELAsync(long? idfsSpeciesType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_SPECIESTYPEREFERENCE_SETResult>> USP_REF_SPECIESTYPEREFERENCE_SETAsync(long? idfsSpeciesType, string strDefault, string strName, string strCode, int? intHACode, int? intOrder, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_SPECIETYPE_DELResult>> USP_REF_SPECIETYPE_DELAsync(long? idfsSpeciesType, bool? deleteAnyway, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_STATISTICDATATYPE_CANDELResult>> USP_REF_STATISTICDATATYPE_CANDELAsync(long? idfsStatisticDataType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_STATISTICDATATYPE_DELResult>> USP_REF_STATISTICDATATYPE_DELAsync(long? idfsStatisticDataType, bool? DeleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_STATISTICDATATYPE_DOESEXISTResult>> USP_REF_STATISTICDATATYPE_DOESEXISTAsync(string strName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_STATISTICDATATYPE_GETDetailResult>> USP_REF_STATISTICDATATYPE_GETDetailAsync(string LangID, long? idfsStatisticDataType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_STATISTICDATATYPE_GETListResult>> USP_REF_STATISTICDATATYPE_GETListAsync(string langID, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, long? idfsStatisticDataType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_STATISTICDATATYPE_SETResult>> USP_REF_STATISTICDATATYPE_SETAsync(long? idfsStatisticDataType, string strDefault, string strName, long? idfsReferenceType, long? idfsStatisticPeriodType, long? idfsStatisticAreaType, bool? blnRelatedWithAgeGroup, string LangID, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_StatisticType_GetDetailResult>> USP_REF_StatisticType_GetDetailAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_VectorSubType_CANDELResult>> USP_REF_VectorSubType_CANDELAsync(long? idfsVectorSubType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_VectorSubType_DELResult>> USP_REF_VectorSubType_DELAsync(long? idfsVectorSubType, bool? DeleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_VECTORSUBTYPE_DOESEXISTResult>> USP_REF_VECTORSUBTYPE_DOESEXISTAsync(string strName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_VectorSubType_GETListResult>> USP_REF_VectorSubType_GETListAsync(string LangID, long? idfsVectorType, string strVectorSubType, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_VectorSubType_SETResult>> USP_REF_VectorSubType_SETAsync(long? idfsVectorSubType, long? idfsVectorType, string strName, string strDefault, string strCode, int? intOrder, string LangID, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_VECTORTYPE_DOESEXISTResult>> USP_REF_VECTORTYPE_DOESEXISTAsync(string strName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_VECTORTYPEREFERENCE_CANDELResult>> USP_REF_VECTORTYPEREFERENCE_CANDELAsync(long? idfsVectorType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_VECTORTYPEREFERENCE_DELResult>> USP_REF_VECTORTYPEREFERENCE_DELAsync(long? idfsVectorType, bool? DeleteAnyway, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_VectorTypeReference_GetDetailResult>> USP_REF_VectorTypeReference_GetDetailAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_VECTORTYPEREFERENCE_GETListResult>> USP_REF_VECTORTYPEREFERENCE_GETListAsync(string langID, string strSearchVectorType, string advancedSearch, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REF_VECTORTYPEREFERENCE_SETResult>> USP_REF_VECTORTYPEREFERENCE_SETAsync(long? idfsVectorType, string strDefault, string strName, string strCode, bool? bitCollectionByPool, int? intOrder, string LangID, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_CurrentCountry_GETResult>> USP_REP_CurrentCountry_GETAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_GetCurrentCountryResult>> USP_REP_GetCurrentCountryAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_HUM_ComparitiveCounter_GETResult>> USP_REP_HUM_ComparitiveCounter_GETAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_HUM_ComparitiveCounter_GET_GGResult>> USP_REP_HUM_ComparitiveCounter_GET_GGAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_HUM_DateFieldSource_GETResult>> USP_REP_HUM_DateFieldSource_GETAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_HUM_TuberculosisDiagnosisSelectLookupResult>> USP_REP_HUM_TuberculosisDiagnosisSelectLookupAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_HUM_WhoMeaslesRubella_DiagnosisResult>> USP_REP_HUM_WhoMeaslesRubella_DiagnosisAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_Human_Aggregate_Disease_Summary_Report_DetailResult>> USP_REP_Human_Aggregate_Disease_Summary_Report_DetailAsync(string LangID, long? idfsAggrCaseType, string idfAggrCaseList, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_LAB_AssignmentDiagnosticAZSendToLookupResult>> USP_REP_LAB_AssignmentDiagnosticAZSendToLookupAsync(string LangID, string CaseID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_LAB_TestingResultsDepartmentLookupResult>> USP_REP_LAB_TestingResultsDepartmentLookupAsync(string LangID, string SampleID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_Languages_GETResult>> USP_REP_Languages_GETAsync(string strLanguage, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_MonthNames_GETResult>> USP_REP_MonthNames_GETAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_Organization_GETResult>> USP_REP_Organization_GETAsync(long? idfPerson, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_Quarter_GGResult>> USP_REP_Quarter_GGAsync(string LangID, string Year, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_REPORT_AUDIT_SETResult>> USP_REP_REPORT_AUDIT_SETAsync(long? idfUserID, string strFirstName, string strMiddleName, string strLastName, string UserRole, string strOrganization, string strReportName, bool? idfIsSignatureIncluded, DateTime? datGeneratedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_ReportingPeriodResult>> USP_REP_ReportingPeriodAsync(string LangID, string Year, string ReportingPeriodType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_ReportingPeriodTypeResult>> USP_REP_ReportingPeriodTypeAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_Reports_GetListResult>> USP_REP_Reports_GetListAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_SpeciesType_GetListResult>> USP_REP_SpeciesType_GetListAsync(string LangID, long? idfsDiagnosis, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_VET_DateFieldSource_GETResult>> USP_REP_VET_DateFieldSource_GETAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_VET_NameOfInvestigationOrMeasureSelectLookupResult>> USP_REP_VET_NameOfInvestigationOrMeasureSelectLookupAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_VET_SummarySurveillanceTypeResult>> USP_REP_VET_SummarySurveillanceTypeAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_Veterinary_Aggregate_DiagnosticAction_Summary_Report_DetailResult>> USP_REP_Veterinary_Aggregate_DiagnosticAction_Summary_Report_DetailAsync(string LangID, string idfAggrCaseList, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_Veterinary_Aggregate_Disease_Summary_Report_DetailResult>> USP_REP_Veterinary_Aggregate_Disease_Summary_Report_DetailAsync(string LangID, long? idfsAggrCaseType, string idfAggrCaseList, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_Veterinary_Aggregate_ProphylacticAction_Summary_Report_DetailResult>> USP_REP_Veterinary_Aggregate_ProphylacticAction_Summary_Report_DetailAsync(string LangID, string idfAggrCaseList, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_Veterinary_Aggregate_SanitaryAction_Summary_Report_DetailResult>> USP_REP_Veterinary_Aggregate_SanitaryAction_Summary_Report_DetailAsync(string LangID, string idfAggrCaseList, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_REP_Years_GETResult>> USP_REP_Years_GETAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_SecurityConfiguration_GetResult>> USP_SecurityConfiguration_GetAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_SecurityConfiguration_SetResult>> USP_SecurityConfiguration_SetAsync(int? Id, int? MinPasswordLength, int? EnforcePasswordHistoryCount, int? MinPasswordAgeDays, bool? ForceUppercaseFlag, bool? ForceLowercaseFlag, bool? ForceNumberUsageFlag, bool? ForceSpecialCharactersFlag, bool? AllowUseOfSpaceFlag, bool? PreventSequentialCharacterFlag, bool? PreventUsernameUsageFlag, int? LockoutThld, int? MaxSessionLength, int? SesnIdleTimeoutWarnThldMins, int? SesnIdleCloseoutThldMins, int? SesnInactivityTimeOutMins, long? EventTypeId, long? SiteId, long? UserId, long? LocationId, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<usp_SecuritySetConfigResult>> usp_SecuritySetConfigAsync(long? ID, int? intAccountLockTimeout, int? intAccountTryCount, int? intInactivityTimeout, int? intPasswordAge, int? intPasswordHistoryLength, int? intPasswordMinimalLength, int? intForcePasswordComplexity, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<usp_Settlement_GetLookupResult>> usp_Settlement_GetLookupAsync(string LangID, long? RayonID, long? ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<usp_SettlementType_GetLookupResult>> usp_SettlementType_GetLookupAsync(string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<usp_SettlementType_SetResult>> usp_SettlementType_SetAsync(long? IdfsGISBaseReference, string LangID, string StrDefault, string StrNationalName, int? IntOrder, int? RowStatus, string UserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VAS_MONITORING_SESSION_ACTION_GETListResult>> USP_VAS_MONITORING_SESSION_ACTION_GETListAsync(string LanguageID, long? MonitoringSessionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VAS_MONITORING_SESSION_DELResult>> USP_VAS_MONITORING_SESSION_DELAsync(string LanguageID, long? MonitoringSessionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VAS_MONITORING_SESSION_GETDetailResult>> USP_VAS_MONITORING_SESSION_GETDetailAsync(string LanguageID, long? MonitoringSessionID, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplyFiltrationIndicator, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VAS_MONITORING_SESSION_GETListResult>> USP_VAS_MONITORING_SESSION_GETListAsync(string LanguageID, string SessionID, string LegacySessionID, string CampaignID, long? CampaignKey, long? SessionStatusTypeID, DateTime? DateEnteredFrom, DateTime? DateEnteredTo, long? AdministrativeLevelID, long? DiseaseID, long? SessionCategoryTypeID, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplySiteFiltrationIndicator, string SortColumn, string SortOrder, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VAS_MONITORING_SESSION_SAMPLE_GETListResult>> USP_VAS_MONITORING_SESSION_SAMPLE_GETListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? MonitoringSessionID, long? ParentSampleID, long? RootSampleID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VAS_MONITORING_SESSION_SAMPLE_TO_DISEASE_GETListResult>> USP_VAS_MONITORING_SESSION_SAMPLE_TO_DISEASE_GETListAsync(string LanguageID, long? MonitoringSessionID, long? SampleID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VAS_MONITORING_SESSION_SETResult>> USP_VAS_MONITORING_SESSION_SETAsync(long? MonitoringSessionID, string SessionID, DateTime? SessionStartDate, DateTime? SessionEndDate, long? SessionStatusTypeID, long? SessionCategoryID, long? SiteID, string LegacySessionID, long? CountryID, long? RegionID, long? RayonID, long? SettlementID, long? CampaignKey, string CampaignID, DateTime? DateEntered, long? EnteredByPersonID, int? RowStatus, long? ReportTypeID, string AuditUserName, string FlocksOrHerds, string DiseaseSpeciesSamples, string Species, string Animals, string Farms, string Samples, string SamplesToDiseases, string LaboratoryTests, string LaboratoryTestInterpretations, string Actions, string AggregateSummaryInfo, string AggregateSummaryDiseases, string FarmsAggregate, string FlocksOrHerdsAggregate, string SpeciesAggregate, string DiseaseReports, string Events, long? UserID, long? LocationID, bool? LinkLocalOrFieldSampleIDToReportID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VAS_MONITORING_SESSION_SPECIES_TO_SAMPLE_TYPE_GETListResult>> USP_VAS_MONITORING_SESSION_SPECIES_TO_SAMPLE_TYPE_GETListAsync(string LanguageID, long? MonitoringSessionID, long? CampaignID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VAS_MONITORING_SESSION_SUMMARY_GETListResult>> USP_VAS_MONITORING_SESSION_SUMMARY_GETListAsync(string LanguageID, long? MonitoringSessionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VAS_MONITORING_SESSION_SUMMARY_TO_DISEASE_GETListResult>> USP_VAS_MONITORING_SESSION_SUMMARY_TO_DISEASE_GETListAsync(string LanguageID, long? MonitoringSessionSummaryID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VAS_MONITORING_SESSION_TEST_GETListResult>> USP_VAS_MONITORING_SESSION_TEST_GETListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? MonitoringSessionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VAS_MONITORING_SESSION_TO_DISEASE_GETListResult>> USP_VAS_MONITORING_SESSION_TO_DISEASE_GETListAsync(string LanguageID, long? MonitoringSessionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_DetailedCollections_CopyResult>> USP_VCTS_DetailedCollections_CopyAsync(long? idfVector, bool? VectorData, bool? Samples, bool? Tests, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_FIELDTEST_DELResult>> USP_VCTS_FIELDTEST_DELAsync(long? idfTesting, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_FIELDTEST_GetDetailResult>> USP_VCTS_FIELDTEST_GetDetailAsync(string LangID, long? idfTesting, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_FIELDTEST_GetListResult>> USP_VCTS_FIELDTEST_GetListAsync(long? idfVector, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_LABTEST_GetListResult>> USP_VCTS_LABTEST_GetListAsync(long? idfVector, long? idfVectorSurveillanceSession, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_SAMPLE_DELResult>> USP_VCTS_SAMPLE_DELAsync(long? idfMaterial, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_SAMPLE_GetDetailResult>> USP_VCTS_SAMPLE_GetDetailAsync(string LangID, long? idfVector, long? idfMaterial, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_SAMPLE_GetListResult>> USP_VCTS_SAMPLE_GetListAsync(long? idfVector, string LangID, long? idfMaterial, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_SESSIONSUMMARY_DELResult>> USP_VCTS_SESSIONSUMMARY_DELAsync(long? idfsVSSessionSummary, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_SESSIONSUMMARY_DIAGNOSIS_SETResult>> USP_VCTS_SESSIONSUMMARY_DIAGNOSIS_SETAsync(long? idfsVSSessionSummary, long? idfDiagnosisVectorSurveillanceSession, string strVSSessionSummaryID, long? DiagnosisidfGeoLocation, DateTime? datSummaryCollectionDateTime, long? SummaryInfoSpecies, long? SummaryInfoSex, long? PoolsVectors, DataTable Diagnosis, string AuditUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_SESSIONSUMMARY_GETDetailResult>> USP_VCTS_SESSIONSUMMARY_GETDetailAsync(long? idfsVSSessionSummary, long? idfVectorSurveillanceSession, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_SESSIONSUMMARY_GETListResult>> USP_VCTS_SESSIONSUMMARY_GETListAsync(long? idfVectorSurveillanceSession, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_SESSIONSUMMARY_SETResult>> USP_VCTS_SESSIONSUMMARY_SETAsync(long? idfDiagnosisVectorSurveillanceSession, string strVSSessionSummaryID, long? DiagnosisidfGeoLocation, long? lucAggregateCollectionidfsResidentType, long? lucAggregateCollectionidfsGroundType, long? lucAggregateCollectionidfsGeolocationType, long? lucAggregateCollectionLocationID, string lucAggregateCollectionstrApartment, string lucAggregateCollectionstrBuilding, string lucAggregateCollectionstrStreetName, string lucAggregateCollectionstrHouse, string lucAggregateCollectionstrPostCode, string lucAggregateCollectionstrDescription, double? lucAggregateCollectiondblDistance, double? lucAggregateCollectionstrLatitude, double? lucAggregateCollectionstrLongitude, double? lucAggregateCollectiondblAccuracy, double? lucAggregateCollectiondblAlignment, double? lucAggregateCollectiondblElevation, bool? blnForeignAddress, string strForeignAddress, bool? blnGeoLocationShared, DateTime? datSummaryCollectionDateTime, long? SummaryInfoSpecies, long? SummaryInfoSex, long? PoolsVectors, string AuditUser, OutputParameter<long?> idfsVSSessionSummary, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_SESSIONSUMMARYDIAGNOSIS_DELResult>> USP_VCTS_SESSIONSUMMARYDIAGNOSIS_DELAsync(long? idfsVSSessionSummaryDiagnosis, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_SESSIONSUMMARYDIAGNOSIS_GetDetailResult>> USP_VCTS_SESSIONSUMMARYDIAGNOSIS_GetDetailAsync(long? idfsVSSessionSummary, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_SESSIONSUMMARYDIAGNOSIS_SETResult>> USP_VCTS_SESSIONSUMMARYDIAGNOSIS_SETAsync(long? idfsVSSessionSummaryDiagnosis, long? idfsVSSessionSummary, long? idfsDiagnosis, long? intPositiveQuantity, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_SURVEILLANCE_SESSION_DELResult>> USP_VCTS_SURVEILLANCE_SESSION_DELAsync(long? idfVectorSurveillanceSession, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_SURVEILLANCE_SESSION_GetListResult>> USP_VCTS_SURVEILLANCE_SESSION_GetListAsync(string LanguageID, string SessionID, string FieldSessionID, long? StatusTypeID, string VectorTypeID, long? SpeciesTypeID, long? DiseaseID, string DiseaseGroupID, long? AdministrativeLevelID, DateTime? StartDateFrom, DateTime? StartDateTo, DateTime? EndDateFrom, DateTime? EndDateTo, long? OutbreakKey, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplySiteFiltrationIndicator, string SortColumn, string SortOrder, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_SURVEILLANCE_SESSION_SETResult>> USP_VCTS_SURVEILLANCE_SESSION_SETAsync(string LangID, long? idfVectorSurveillanceSession, string strSessionID, string strFieldSessionID, long? idfsVectorSurveillanceStatus, DateTime? datStartDate, DateTime? datCloseDate, long? idfOutbreak, int? intCollectionEffort, long? idfGeoLocation, long? idfsGeolocationType, long? idfsLocation, double? dblLatitude, double? dblLongitude, string strDescription, long? idfsGroundType, double? dblDistance, double? dblDirection, double? Elevation, string strStreetName, string strPostalCode, string strApartment, string strBuilding, string strHouse, bool? blnForeignAddress, string strForeignAddress, bool? blnGeoLocationShared, string strLocationDescription, long? SiteID, string AggregateCollections, string DiagnosisInfo, string DetailedCollections, string Events, string AuditUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_VECT_DELResult>> USP_VCTS_VECT_DELAsync(long? IdfVector, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_VECT_FIELDTEST_SETResult>> USP_VCTS_VECT_FIELDTEST_SETAsync(long? idfMaterial, string LangID, long? idfTesting, long? idfsTestName, long? idfsTestCategory, long? idfTestedByOffice, long? idfsTestResult, long? idfTestedByPerson, long? idfsDiagnosis, DateTime? datConcludedDate, long? idfVector, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_VECT_GetDetailResult>> USP_VCTS_VECT_GetDetailAsync(long? idfVectorSurveillanceSession, string LangID, bool? bitCollectionByPool, string SortColumn, string SortOrder, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_VECT_GetSampleTypeResult>> USP_VCTS_VECT_GetSampleTypeAsync(long? idfsVectorType, long? idfsSampleType, string idfsstrSampleType, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_VECT_RW_SETResult>> USP_VCTS_VECT_RW_SETAsync(long? idfVector, long? idfsDetailedVectorSurveillanceSession, long? idfHostVector, string strVectorID, string strFieldVectorID, long? idfDetailedLocation, long? lucDetailedCollectionidfsResidentType, long? lucDetailedCollectionidfsGroundType, long? lucDetailedCollectionidfsGeolocationType, long? lucDetailedCollectionidfsLocation, string lucDetailedCollectionstrApartment, string lucDetailedCollectionstrBuilding, string lucDetailedCollectionstrStreetName, string lucDetailedCollectionstrHouse, string lucDetailedCollectionstrPostCode, string lucDetailedCollectionstrDescription, double? lucDetailedCollectiondblDistance, double? lucDetailedCollectionstrLatitude, double? lucDetailedCollectionstrLongitude, double? lucDetailedCollectiondblAccuracy, double? lucDetailedCollectiondblAlignment, bool? blnForeignAddress, string strForeignAddress, bool? blnGeoLocationShared, int? intDetailedElevation, long? DetailedSurroundings, string strGEOReferenceSource, long? idfCollectedByOffice, long? idfCollectedByPerson, DateTime? datCollectionDateTime, long? idfsCollectionMethod, long? idfsBasisOfRecord, long? idfDetailedVectorType, long? idfsVectorSubType, int? intQuantity, long? idfsSex, long? idfIdentIFiedByOffice, long? idfIdentIFiedByPerson, DateTime? datIdentIFiedDateTime, long? idfsIdentIFicationMethod, long? idfObservation, long? idfsFormTemplate, long? idfsDayPeriod, string strComment, long? idfsEctoparASitesCollected, string AuditUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_VECT_SAMPLES_SETResult>> USP_VCTS_VECT_SAMPLES_SETAsync(string LangID, long? idfMaterial, string strFieldBarcode, long? idfsSampleType, long? idfVectorSurveillanceSession, long? idfVector, long? idfSendToOffice, long? idfFieldCollectedByOffice, string strNote, DateTime? datFieldCollectionDate, DateTime? EnteredDate, long? SiteID, long? idfsDiagnosis, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_VECT_SETResult>> USP_VCTS_VECT_SETAsync(long? idfVector, long? idfsDetailedVectorSurveillanceSession, long? idfHostVector, string strVectorID, string strFieldVectorID, long? idfDetailedLocation, long? lucDetailedCollectionidfsResidentType, long? lucDetailedCollectionidfsGroundType, long? lucDetailedCollectionidfsGeolocationType, long? lucDetailedCollectionidfsLocation, string lucDetailedCollectionstrApartment, string lucDetailedCollectionstrBuilding, string lucDetailedCollectionstrStreetName, string lucDetailedCollectionstrHouse, string lucDetailedCollectionstrPostCode, string lucDetailedCollectionstrDescription, double? lucDetailedCollectiondblDistance, double? lucDetailedCollectionstrLatitude, double? lucDetailedCollectionstrLongitude, double? lucDetailedCollectiondblAccuracy, double? lucDetailedCollectiondblAlignment, bool? blnForeignAddress, string strForeignAddress, bool? blnGeoLocationShared, int? intDetailedElevation, long? DetailedSurroundings, string strGEOReferenceSource, long? idfCollectedByOffice, long? idfCollectedByPerson, DateTime? datCollectionDateTime, long? idfsCollectionMethod, long? idfsBasisOfRecord, long? idfDetailedVectorType, long? idfsVectorSubType, int? intQuantity, long? idfsSex, long? idfIdentIFiedByOffice, long? idfIdentIFiedByPerson, DateTime? datIdentIFiedDateTime, long? idfsIdentIFicationMethod, long? idfObservation, long? idfsFormTemplate, long? idfsDayPeriod, string strComment, long? idfsEctoparASitesCollected, string AuditUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_VECT_STRUCTURED_SETResult>> USP_VCTS_VECT_STRUCTURED_SETAsync(string LangID, long? idfVector, long? idfsDetailedVectorSurveillanceSession, long? idfHostVector, string strVectorID, string strFieldVectorID, long? idfDetailedLocation, long? lucDetailedCollectionidfsResidentType, long? lucDetailedCollectionidfsGroundType, long? lucDetailedCollectionidfsGeolocationType, long? lucDetailedCollectionidfsLocation, string lucDetailedCollectionstrApartment, string lucDetailedCollectionstrBuilding, string lucDetailedCollectionstrStreetName, string lucDetailedCollectionstrHouse, string lucDetailedCollectionstrPostCode, string lucDetailedCollectionstrDescription, double? lucDetailedCollectiondblDistance, double? lucDetailedCollectionstrLatitude, double? lucDetailedCollectionstrLongitude, double? lucDetailedCollectiondblAccuracy, double? lucDetailedCollectiondblAlignment, bool? blnForeignAddress, string strForeignAddress, bool? blnGeoLocationShared, int? intDetailedElevation, long? DetailedSurroundings, string strGEOReferenceSource, long? idfCollectedByOffice, long? idfCollectedByPerson, DateTime? datCollectionDateTime, long? idfsCollectionMethod, long? idfsBasisOfRecord, long? idfDetailedVectorType, long? idfsVectorSubType, int? intQuantity, long? idfsSex, long? idfIdentIFiedByOffice, long? idfIdentIFiedByPerson, DateTime? datIdentIFiedDateTime, long? idfsIdentIFicationMethod, long? idfObservation, long? idfsFormTemplate, long? idfsDayPeriod, string strComment, long? idfsEctoparASitesCollected, string Samples, string FieldTests, string AuditUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_VECTCollection_GetDetailResult>> USP_VCTS_VECTCollection_GetDetailAsync(long? idfVector, long? idfVectorSurveillanceSession, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_VSSESSION_GetDetailResult>> USP_VCTS_VSSESSION_GetDetailAsync(long? idfVectorSurveillanceSession, string LangID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_VSSESSION_GetListResult>> USP_VCTS_VSSESSION_GetListAsync(string LangID, string SearchSessionID, string SearchFieldSessionID, long? SearchStatus, string SearchVectorType, long? SearchSpecies, long? SearchDisease, string SearchDiagnosesGroup, long? vectorsearchFormidfsRegion, long? vectorsearchFormidfsRayon, long? vectorsearchFormidfsSettlement, DateTime? SearchStartDateFrom, DateTime? SearchStartDateTo, DateTime? SearchEndDateFrom, DateTime? SearchEndDateTo, long? OutbreakID, long? SearchDataEntrySite, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VCTS_VSSESSION_New_GetDetailResult>> USP_VCTS_VSSESSION_New_GetDetailAsync(long? idfVectorSurveillanceSession, string LangID, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplyFiltrationIndicator, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_ANIMAL_GETListResult>> USP_VET_ANIMAL_GETListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? DiseaseReportID, long? MonitoringSessionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_CASE_LOG_GETListResult>> USP_VET_CASE_LOG_GETListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? DiseaseReportID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_DISEASE_REPORT_DELResult>> USP_VET_DISEASE_REPORT_DELAsync(long? DiseaseReportID, bool? DeduplicationIndicator, long? DataAuditEventID, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_DISEASE_REPORT_GETDetailResult>> USP_VET_DISEASE_REPORT_GETDetailAsync(string LanguageID, long? DiseaseReportID, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplyFiltrationIndicator, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_DISEASE_REPORT_GETListResult>> USP_VET_DISEASE_REPORT_GETListAsync(string LanguageID, long? ReportKey, string ReportID, string LegacyReportID, long? SessionKey, long? FarmMasterID, long? DiseaseID, long? ReportStatusTypeID, long? AdministrativeLevelID, DateTime? DateEnteredFrom, DateTime? DateEnteredTo, long? ClassificationTypeID, string PersonID, long? ReportTypeID, long? SpeciesTypeID, bool? OutbreakCasesIndicator, DateTime? DiagnosisDateFrom, DateTime? DiagnosisDateTo, DateTime? InvestigationDateFrom, DateTime? InvestigationDateTo, string LocalOrFieldSampleID, int? TotalAnimalQuantityFrom, int? TotalAnimalQuantityTo, string SessionID, long? DataEntrySiteID, bool? RecordIdentifierSearchIndicator, long? UserSiteID, long? UserOrganizationID, long? UserEmployeeID, bool? ApplySiteFiltrationIndicator, bool? IncludeSpeciesListIndicator, string SortColumn, string SortOrder, int? PageNumber, int? PageSize, int? OutbreakCaseReportOnly, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_DISEASE_REPORT_SETResult>> USP_VET_DISEASE_REPORT_SETAsync(long? DiseaseReportID, string EIDSSReportID, long? FarmID, long? FarmMasterID, long? FarmOwnerID, long? MonitoringSessionID, long? OutbreakID, long? RelatedToDiseaseReportID, string EIDSSFieldAccessionID, long? DiseaseID, long? EnteredByPersonID, long? ReportedByOrganizationID, long? ReportedByPersonID, long? InvestigatedByOrganizationID, long? InvestigatedByPersonID, long? ReceivedByOrganizationID, long? ReceivedByPersonID, long? SiteID, DateTime? DiagnosisDate, DateTime? EnteredDate, DateTime? ReportDate, DateTime? AssignedDate, DateTime? InvestigationDate, int? RowStatus, long? ReportTypeID, long? ClassificationTypeID, long? StatusTypeID, long? ReportCategoryTypeID, int? FarmTotalAnimalQuantity, int? FarmSickAnimalQuantity, int? FarmDeadAnimalQuantity, double? FarmLatitude, double? FarmLongitude, long? FarmEpidemiologicalObservationID, long? ControlMeasuresObservationID, long? TestsConductedIndicator, long? DataAuditEventID, string AuditUserName, string FlocksOrHerds, string Species, string Animals, string Vaccinations, string Samples, string PensideTests, string LaboratoryTests, string LaboratoryTestInterpretations, string CaseLogs, string ClinicalInformation, string Contacts, string CaseMonitorings, string Events, long? UserID, bool? LinkLocalOrFieldSampleIDToReportID, bool? OutbreakCaseIndicator, long? OutbreakCaseReportUID, long? OutbreakCaseStatusTypeID, long? OutbreakCaseQuestionnaireObservationID, bool? PrimaryCaseIndicator, string Comments, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_DISEASE_REPORT_SPECIES_GETListResult>> USP_VET_DISEASE_REPORT_SPECIES_GETListAsync(string LanguageID, long? VeterinaryDiseaseReportID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_FARM_DELResult>> USP_VET_FARM_DELAsync(string LanguageID, long? FarmID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_FARM_GETDetailResult>> USP_VET_FARM_GETDetailAsync(string LanguageID, long? FarmID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_FARM_GETListResult>> USP_VET_FARM_GETListAsync(string LanguageID, long? FarmID, string EIDSSFarmID, long? FarmTypeID, string FarmName, string FarmOwnerFirstName, string FarmOwnerLastName, string EIDSSPersonID, long? FarmOwnerID, long? RegionID, long? RayonID, long? SettlementID, long? SettlementTypeID, long? MonitoringSessionID, int? pageNo, int? pageSize, string sortColumn, string sortOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_FARM_INVENTORY_GETListResult>> USP_VET_FARM_INVENTORY_GETListAsync(string LanguageID, long? DiseaseReportID, long? MonitoringSessionID, long? FarmID, long? FarmMasterID, string EIDSSFarmID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_FARM_MASTER_DELResult>> USP_VET_FARM_MASTER_DELAsync(long? FarmMasterID, bool? DeduplicationIndicator, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_FARM_MASTER_GETDetailResult>> USP_VET_FARM_MASTER_GETDetailAsync(string LanguageID, long? FarmMasterID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_FARM_MASTER_GETListResult>> USP_VET_FARM_MASTER_GETListAsync(string LanguageID, long? FarmMasterID, string EIDSSFarmID, string LegacyFarmID, long? FarmTypeID, string FarmName, string FarmOwnerFirstName, string FarmOwnerLastName, string EIDSSPersonID, string EIDSSFarmOwnerID, long? FarmOwnerID, long? idfsLocation, long? SettlementTypeID, long? MonitoringSessionID, bool? RecordIdentifierSearchIndicator, string sortColumn, string sortOrder, int? pageNo, int? pageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_FARM_MASTER_SETResult>> USP_VET_FARM_MASTER_SETAsync(long? FarmMasterID, long? AvianFarmTypeID, long? AvianProductionTypeID, long? FarmCategory, long? FarmOwnerID, string FarmNationalName, string FarmInterNationalName, string EIDSSFarmID, long? OwnershipStructureTypeID, string Fax, string Email, string Phone, long? FarmAddressID, bool? ForeignAddressIndicator, long? FarmAddressIdfsLocation, string FarmAddressStreet, string FarmAddressApartment, string FarmAddressBuilding, string FarmAddressHouse, string FarmAddressPostalCode, double? FarmAddressLatitude, double? FarmAddressLongitude, int? NumberOfBuildings, int? NumberOfBirdsPerBuilding, string HerdsOrFlocks, string Species, string AuditUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_PENSIDE_TEST_GETListResult>> USP_VET_PENSIDE_TEST_GETListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? DiseaseReportID, long? SampleID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_SAMPLE_GETListResult>> USP_VET_SAMPLE_GETListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? DiseaseReportID, long? ParentSampleID, long? RootSampleID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_TEST_GETListResult>> USP_VET_TEST_GETListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? DiseaseReportID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_VET_VACCINATION_GETListResult>> USP_VET_VACCINATION_GETListAsync(string LanguageID, int? PageNumber, int? PageSize, string SortColumn, string SortOrder, long? DiseaseReportID, long? SpeciesID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USP_xSiteDocumentListGetResult>> USP_xSiteDocumentListGetAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> USSP_HAS_CampaignToDiagnosis_SETAsync(long? idfCampaignToDiagnosis, long? idfCampaign, long? idfsDiagnosis, int? intOrder, int? intPlannedNumber, long? idfsSpeciesType, long? idfsSampleType, string Comments, string AuditUserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> USSP_VAS_MONITORING_SESSION_ACTION_SETAsync(long? DataAuditEventID, long? MonitoringSessionID, long? EnteredByPersonID, long? MonitoringSessionActionTypeID, long? MonitoringSessionActionStatusTypeID, DateTime? ActionDate, string Comments, int? RowStatus, int? RowAction, string AuditUserName, OutputParameter<long?> MonitoringSessionActionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USSP_VCT_AGGREGATE_DISEASEDIAGNOSIS_SETResult>> USSP_VCT_AGGREGATE_DISEASEDIAGNOSIS_SETAsync(string DiseaseDiagnosisParameters, string AuditUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<USSP_VCT_SAMPLE_DETAILEDCOLLECTIONS_SETResult>> USSP_VCT_SAMPLE_DETAILEDCOLLECTIONS_SETAsync(string SAMPLEPARAMETERS, string AuditUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
