/*
Deployment script for EIDSS7_GG

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO

USE [EIDSS7_GAT_Main];


GO
PRINT N'Altering Procedure [dbo].[USP_ADMIN_DATAAUDITLOG_GETList]...';


GO

-- =============================================
-- Author:		Manickandan Govindarajan
-- Create date: 06/20/2022
-- Description:	Gets the audit event list for the given parameters
-- Manickandan Govidarajan 11/22/2022 - Added additional out columns
-- Manickandan Govindarajan 11/3/2022 - Updated condition
-- =============================================
ALTER PROCEDURE [dbo].[USP_ADMIN_DATAAUDITLOG_GETList]
	@languageId AS NVARCHAR(50),
	@startDate DateTime = NULL,
	@endDate DateTime = NULL,
	@idfUserId BIGINT = NULL,
	@idfSiteId BIGINT = NULL, 
	@idfActionId BIGINT = NULL, 
	@idfObjetType BIGINT = NULL, 
	@idfObjectId BIGINT =NULL,
	@SortColumn NVARCHAR(30) = 'TransactionDate',
	@SortOrder NVARCHAR(4) = 'DESC',
	@Page INT = 1,
	@PageSize INT = 10
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @firstRec INT;
	DECLARE @lastRec INT;

	BEGIN TRY
		SET @firstRec = (@Page-1)* @pagesize
		SET @lastRec = (@Page*@pageSize+1);


		WITH CTEResults AS
		(
			SELECT ROW_NUMBER() OVER ( ORDER BY
			CASE WHEN @sortColumn = 'TransactionDate' AND @SortOrder = 'ASC' THEN ae.datEnteringDate END ASC,
			CASE WHEN @sortColumn = 'TransactionDate' AND @SortOrder = 'DESC' THEN ae.datEnteringDate END DESC,
			CASE WHEN @sortColumn = 'siteName' AND @SortOrder = 'ASC' THEN ae.idfsSite   END ASC,
			CASE WHEN @sortColumn = 'siteName' AND @SortOrder = 'DESC' THEN ae.idfsSite END DESC,
			CASE WHEN @sortColumn = 'UserName' AND @SortOrder = 'ASC' THEN ae.idfUserID   END ASC,
			CASE WHEN @sortColumn = 'UserName' AND @SortOrder = 'DESC' THEN ae.idfUserID END DESC,
			CASE WHEN @sortColumn = 'ActionName' AND @SortOrder = 'ASC' THEN ae.idfsDataAuditEventType   END ASC,
			CASE WHEN @sortColumn = 'ActionName' AND @SortOrder = 'DESC' THEN ae.idfsDataAuditEventType END DESC,
			CASE WHEN @sortColumn = 'ObjectType' AND @SortOrder = 'ASC' THEN ae.idfsDataAuditObjectType  END ASC,
			CASE WHEN @sortColumn = 'ObjectType' AND @SortOrder = 'DESC' THEN ae.idfsDataAuditObjectType END DESC
			)  AS ROWNUM,
					s.strSiteName siteName,
					ae.idfsSite siteId,
					ae.idfUserID userId,
					p.strFirstName userFirstName,
					p.strFamilyName userFamilyName,
					ae.datEnteringDate TransactionDate,
					aAction.name ActionName,
					ae.idfsDataAuditEventType actionTypeId,
					aObjectType.name ObjectType,
					ae.idfsDataAuditObjectType ObjectTypeId,
					ae.idfMainObjectTable ObjectTable,
					ae.idfMainObject ObjectId,
					ae.idfDataAuditEvent auditEventId,
					tt.strName tableName,
					COUNT(*) OVER () AS TotalRowCount
				from tauDataAuditEvent ae
				INNER join tauTable tt on ae.idfMainObjectTable = tt.idfTable
				INNER JOIN dbo.FN_GBL_ReferenceRepair(@languageID, 19000016) aAction ON ae.idfsDataAuditEventType  = aAction.idfsReference
				INNER JOIN dbo.FN_GBL_ReferenceRepair(@languageID, 19000017) aObjectType ON ae.idfsDataAuditObjectType  = aObjectType.idfsReference
				INNER JOIN tstSite s ON ae.idfsSite  = s.idfsSite
				INNER JOIN tstUserTable u ON ae.idfUserID  = u.idfUserID
				INNER JOIN tlbPerson p on p.idfPerson = u.idfPerson
				where 
					(ae.idfsSite = @idfSiteId OR @idfSiteId IS NULL) 
					AND (ae.idfUserID = @idfUserId OR @idfUserId IS NULL) 
					AND (ae.idfsDataAuditEventType = @idfActionId OR @idfActionId IS NULL) 
					AND (ae.idfsDataAuditObjectType = @idfObjetType OR @idfObjetType IS NULL) 
					AND (ae.idfMainObject = @idfObjectId OR @idfObjectId IS NULL)
					AND
					((@startdate is null and @enddate is null)
						or
						(@startdate is null and @enddate is not null and cast(ae.datEnteringDate as date) <= cast(@enddate as date) )
						or
						(@startdate is not null and @enddate is null and cast(ae.datEnteringDate as date) >= cast(@startdate as date) )
						or
						(@startdate is not null and @enddate is not null and cast(ae.datEnteringDate as date) BETWEEN  cast(@startdate as date)  AND  cast(@enddate as date)))

					
					

		)
		SELECT 	auditEventId, 
				siteName,	
		        siteId,
			    userId,
				userFirstName,
				userFamilyName,
				TransactionDate,
				ActionName,
				actionTypeId,
				ObjectType,
				ObjectTypeId,
				ObjectTable,
				ObjectId,
				tableName,
				TotalRowCount,
			TotalPages = (TotalRowCount/@pageSize)+IIF(TotalRowCount%@pageSize>0,1,0),
			CurrentPage = @Page
		FROM CTEResults WHERE RowNum > @firstRec AND RowNum < @lastRec
		



END TRY

	BEGIN CATCH
		
		THROW;
	END CATCH;

	
END
GO
PRINT N'Update complete.';


GO
