
--

SET XACT_ABORT ON 
SET NOCOUNT ON 

/*Specify or update name of the EIDSSv7 database here
  Note: (1) Database shall exist with schemas of the tables except triggers and foreign keys.
		(2) Script is not applicable for cloud-hosted databases.
		(3) Stored Procedure sp_executesql shall be enabled for the instance of SQL Server, where database triggers and foreign keys shall be created.
*/
declare @DbName sysname = 'EIDSS7'

declare @cmd nvarchar(max) = N''

declare	@Error	int
set	@Error = 0

declare	@ErrorMsg	nvarchar(MAX)
set	@ErrorMsg = N''

if not exists (select 1 from sys.databases where [name] = @DbName collate Latin1_General_CI_AS)
begin
	set @Error = 1
	set @ErrorMsg = N'Database with name [' + isnull(@DbName, N'') + N'] does not exists. Please specify name of existing database with empty schema again.'
end
else begin
	declare @isDbWithTables bit = 0
	declare @isDbWithTriggersOrFKs bit = 0

	set @cmd = N'
	set @isDbWithTablesOut = 0
	if exists (select 1 from [' + @DbName + N'].sys.tables)
	begin
		set @isDbWithTablesOut = 1
	end

	set @isDbWithTriggersOrFKsOut = 0
	if exists (select 1 from [' + @DbName + N'].sys.triggers)
		or exists (select 1 from [' + @DbName + N'].sys.foreign_keys)
	begin
		set @isDbWithTriggersOrFKsOut = 1
	end
	'
	exec sp_executesql 
			@cmd, 
			N'@isDbWithTablesOut bit output,  @isDbWithTriggersOrFKsOut bit output', 
			@isDbWithTablesOut = @isDbWithTables output,
			@isDbWithTriggersOrFKsOut = @isDbWithTriggersOrFKs output

	if @isDbWithTables = 0
	begin
		set @Error = 1
		set @ErrorMsg = N'Database with name [' + isnull(@DbName, N'') + N'] does not have tables. No changes will be applied. Please specify name of existing database with tables and no triggers or foreign keys, and then execute script again.'
	end
	else if @isDbWithTriggersOrFKs = 1
	begin
		set @Error = 1
		set @ErrorMsg = N'Database with name [' + isnull(@DbName, N'') + N'] contains triggers or foreign keys. No changes will be applied. Please specify name of existing database with tables and no triggers or foreign keys, and then execute script again.'
	end
end

if @Error <> 0
begin
	raiserror(@ErrorMsg, 16, 1) with seterror;
end
else begin

set @cmd = N''



----


-- Triggers --



--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE  TRIGGER [dbo].[TR_AccessRule_A_Update] ON [dbo].[AccessRule]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF (dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(AccessRuleID) )'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_AccessRule_I_Delete] ON [dbo].[AccessRule]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([AccessRuleID]) AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [AccessRuleID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [AccessRuleID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET  intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.AccessRule AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords AS b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.AccessRuleID = b.AccessRuleID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_AppSessionLog_A_Update] ON [dbo].[AppSessionLog]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE(AppSessionLogUID))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ArchiveSetting_A_Update] ON [dbo].[ArchiveSetting]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE(ArchiveSettingUID))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ArchiveSetting_I_Delete] ON [dbo].[ArchiveSetting]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([ArchiveSettingUID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [ArchiveSettingUID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [ArchiveSettingUID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET  intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ArchiveSetting as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.ArchiveSettingUID = b.ArchiveSettingUID;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_CampaignToSampleType_A_Update] ON [dbo].[CampaignToSampleType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork()=1 AND UPDATE(CampaignToSampleTypeUID))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_CampaignToSampleType_I_Delete] ON [dbo].[CampaignToSampleType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([CampaignToSampleTypeUID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [CampaignToSampleTypeUID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [CampaignToSampleTypeUID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET  intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.CampaignToSampleType as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.CampaignToSampleTypeUID = b.CampaignToSampleTypeUID;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_DiagnosisGroupToGender_A_Update] on [dbo].[DiagnosisGroupToGender]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1) AND (UPDATE(DisgnosisGroupToGenderUID))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_DiagnosisGroupToGender_I_Delete] on [dbo].[DiagnosisGroupToGender]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([DisgnosisGroupToGenderUID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [DisgnosisGroupToGenderUID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [DisgnosisGroupToGenderUID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.DiagnosisGroupToGender as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[DisgnosisGroupToGenderUID] = b.[DisgnosisGroupToGenderUID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_dotNetAppenderLog_A_Update] ON [dbo].[dotNetAppenderLog]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork()=1 AND UPDATE(dotNetAppenderLogUID))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_EmployeeToInstitution_A_Update] on [dbo].[EmployeeToInstitution]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1) AND (UPDATE(EmployeeToInstitution))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_EmployeeToInstitution_I_Delete] on [dbo].[EmployeeToInstitution]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([EmployeeToInstitution]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [EmployeeToInstitution] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [EmployeeToInstitution] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.EmployeeToInstitution as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[EmployeeToInstitution] = b.[EmployeeToInstitution];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE  TRIGGER [dbo].[TR_ffDecorElement_A_Update] ON [dbo].[ffDecorElement]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF (dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDecorElement) )'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffDecorElement_I_Delete] ON [dbo].[ffDecorElement]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfDecorElement]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDecorElement] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDecorElement] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET  intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffDecorElement AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords AS b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfDecorElement = b.idfDecorElement'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffDecorElementLine_A_Update] ON [dbo].[ffDecorElementLine]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDecorElement) )'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffDecorElementLine_I_Delete] ON [dbo].[ffDecorElementLine]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfDecorElement]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDecorElement] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDecorElement] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET  intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffDecorElementLine as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfDecorElement = b.idfDecorElement;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfDecorElement]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDecorElement] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDecorElement] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffDecorElement as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfDecorElement = b.idfDecorElement;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffDecorElementText_A_Update] ON [dbo].[ffDecorElementText]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDecorElement) )'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffDecorElementText_I_Delete] on [dbo].[ffDecorElementText]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfDecorElement]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDecorElement] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDecorElement] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffDecorElementText as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfDecorElement = b.idfDecorElement;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfDecorElement]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDecorElement] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDecorElement] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffDecorElement as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfDecorElement = b.idfDecorElement;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffDeterminantType_A_Update] on [dbo].[ffDeterminantType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDeterminantType))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffDeterminantValue_A_Update] on [dbo].[ffDeterminantValue]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDeterminantValue))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffDeterminantValue_I_Delete] on [dbo].[ffDeterminantValue]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfDeterminantValue]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDeterminantValue] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDeterminantValue] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffDeterminantValue as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfDeterminantValue = b.idfDeterminantValue;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffFormTemplate_A_Update] ON [dbo].[ffFormTemplate]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF((dbo.FN_GBL_TriggersWork ()=1) AND UPDATE(idfsFormTemplate))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffFormTemplate_I_Delete] on [dbo].[ffFormTemplate]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsFormTemplate]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsFormTemplate] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsFormTemplate] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffFormTemplate as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsFormTemplate = b.idfsFormTemplate;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsFormTemplate]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsFormTemplate] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsFormTemplate] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsFormTemplate;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffParameter_A_Update] on [dbo].[ffParameter]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1) AND (UPDATE(idfsParameter))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffParameter_I_Delete] on [dbo].[ffParameter]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsParameter]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsParameter] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsParameter] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffParameter as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsParameter = b.idfsParameter;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsParameter]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsParameter] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsParameter] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsParameter;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffParameterDesignOption_A_Update] ON [dbo].[ffParameterDesignOption]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1) AND (UPDATE(idfParameterDesignOption))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffParameterDesignOption_I_Delete] on [dbo].[ffParameterDesignOption]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfParameterDesignOption]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfParameterDesignOption] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfParameterDesignOption] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffParameterDesignOption as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfParameterDesignOption = b.idfParameterDesignOption;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffParameterFixedPresetValue_A_Update] ON [dbo].[ffParameterFixedPresetValue]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1) AND (UPDATE(idfsParameterFixedPresetValue))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffParameterFixedPresetValue_I_Delete] on [dbo].[ffParameterFixedPresetValue]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsParameterFixedPresetValue]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsParameterFixedPresetValue] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsParameterFixedPresetValue] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffParameterFixedPresetValue as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsParameterFixedPresetValue = b.idfsParameterFixedPresetValue;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsParameterFixedPresetValue]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsParameterFixedPresetValue] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsParameterFixedPresetValue] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsParameterFixedPresetValue;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffParameterForAction_A_Update] ON [dbo].[ffParameterForAction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1) AND (UPDATE(idfParameterForAction))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffParameterForAction_I_Delete] on [dbo].[ffParameterForAction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfParameterForAction]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfParameterForAction] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfParameterForAction] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffParameterForAction as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfParameterForAction = b.idfParameterForAction;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffParameterForFunction_A_Update] ON [dbo].[ffParameterForFunction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1) AND (UPDATE(idfParameterForFunction))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffParameterForFunction_I_Delete] on [dbo].[ffParameterForFunction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfParameterForFunction]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfParameterForFunction] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfParameterForFunction] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffParameterForFunction as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfParameterForFunction = b.idfParameterForFunction;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffParameterForTemplate_A_Update] ON [dbo].[ffParameterForTemplate]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1) AND (UPDATE(idfsFormTemplate) OR UPDATE(idfsParameter))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffParameterForTemplate_I_Delete] on [dbo].[ffParameterForTemplate]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsFormTemplate], [idfsParameter]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsFormTemplate], [idfsParameter] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsFormTemplate], [idfsParameter] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffParameterForTemplate as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsFormTemplate = b.idfsFormTemplate'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.idfsParameter = b.idfsParameter;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffParameterType_A_Update] ON [dbo].[ffParameterType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1) AND (UPDATE(idfsParameterType))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffParameterType_I_Delete] on [dbo].[ffParameterType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsParameterType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsParameterType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsParameterType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffParameterType as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsParameterType = b.idfsParameterType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsParameterType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsParameterType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsParameterType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsParameterType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffRule_A_Update] ON [dbo].[ffRule]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1) AND (UPDATE(idfsRule))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffRule_I_Delete] on [dbo].[ffRule]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsRule]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsRule] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsRule] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffRule as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsRule = b.idfsRule;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsRule]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsRule] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsRule] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsRule;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffRuleConstant_A_Update] ON [dbo].[ffRuleConstant]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF (TRIGGER_NESTLEVEL()<2)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfRuleConstant))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffRuleConstant_I_Delete] on [dbo].[ffRuleConstant]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfRuleConstant]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfRuleConstant] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfRuleConstant] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffRuleConstant as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfRuleConstant = b.idfRuleConstant;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffRuleFunction_A_Update] ON [dbo].[ffRuleFunction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF (TRIGGER_NESTLEVEL()<2)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsRuleFunction))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffSection_A_Update] ON [dbo].[ffSection]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsSection))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffSection_I_Delete] on [dbo].[ffSection]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsSection]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSection] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSection] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffSection as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsSection = b.idfsSection;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffSectionDesignOption_A_Update] ON [dbo].[ffSectionDesignOption]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSectionDesignOption))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffSectionDesignOption_I_Delete] on [dbo].[ffSectionDesignOption]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfSectionDesignOption]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSectionDesignOption] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSectionDesignOption] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffSectionDesignOption as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfSectionDesignOption = b.idfSectionDesignOption;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffSectionForAction_A_Update] ON [dbo].[ffSectionForAction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF (TRIGGER_NESTLEVEL()<2)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSectionForAction))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffSectionForAction_I_Delete] on [dbo].[ffSectionForAction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfSectionForAction]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSectionForAction] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSectionForAction] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffSectionForAction as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfSectionForAction = b.idfSectionForAction;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffSectionForTemplate_A_Update] ON [dbo].[ffSectionForTemplate]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsFormTemplate) OR UPDATE(idfsSection)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_ffSectionForTemplate_I_Delete] on [dbo].[ffSectionForTemplate]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsFormTemplate], [idfsSection]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsFormTemplate], [idfsSection] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsFormTemplate], [idfsSection] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.ffSectionForTemplate as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsFormTemplate = b.idfsFormTemplate'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.idfsSection = b.idfsSection;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisBaseReference_A_Update] ON [dbo].[gisBaseReference]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGISBaseReference))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	-- If the strDefault column was updated...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END ELSE IF( UPDATE(strDefault))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DECLARE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			 @idfsGISReferenceType BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			,@oldlocationName NVARCHAR(255)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			,@updatedLocationName NVARCHAR(255)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT @idfsGISReferenceType = idfsGISReferenceType, @updatedlocationName = strDefault'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM INSERTED'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT @oldlocationName = strDefault'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM DELETED'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- If the change was to any gisreference type...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- This test should ideally be testing if any one of the administrative level names changed...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- IF(@idfsGISReferenceTYpe IN( 19000001,19000002,19000003,19000004,AdminLevel5ID, AdminLevel6ID, AdminLevel7ID)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- GIS Reference Types for Admin Levels 5 thru 7 have yet to be created...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF(@idfsGISReferenceType IN('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT idfsGisReferenceType'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			FROM gisReferenceType rt))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			-- Update the gisLocationDenormalized table with the updated location name...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			UPDATE ld'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SET'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				 ld.Level1Name = CASE WHEN ld.Level1Name = @oldLocationName THEN @updatedLocationName ELSE Level1Name END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				,ld.Level2Name = CASE WHEN ld.Level2Name = @oldLocationName THEN @updatedLocationName ELSE Level2Name END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				,ld.Level3Name = CASE WHEN ld.Level3Name = @oldLocationName THEN @updatedLocationName ELSE Level3Name END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				,ld.Level4Name = CASE WHEN ld.Level4Name = @oldLocationName THEN @updatedLocationName ELSE Level4Name END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				,ld.Level5Name = CASE WHEN ld.Level5Name = @oldLocationName THEN @updatedLocationName ELSE Level5Name END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				,ld.Level6Name = CASE WHEN ld.Level6Name = @oldLocationName THEN @updatedLocationName ELSE Level6Name END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				,ld.Level7Name = CASE WHEN ld.Level7Name = @oldLocationName THEN @updatedLocationName ELSE Level7Name END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			FROM gisLocationDenormalized ld'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			JOIN gisReferenceType rt ON rt.strGISReferenceTypeName = ld.LevelType'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHERE @oldlocationName IN(Level1Name,Level2Name,Level3Name,Level4Name,Level5Name,Level6Name,Level7Name)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisBaseReference_I_Delete] on [dbo].[gisBaseReference]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsGISBaseReference]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsGISBaseReference] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsGISBaseReference] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.gisBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsGISBaseReference = b.idfsGISBaseReference;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisCountry_A_Update] ON [dbo].[gisCountry]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsCountry))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisCountry_I_Delete] on [dbo].[gisCountry]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsCountry]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsCountry] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsCountry] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.gisCountry as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsCountry = b.idfsCountry;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsCountry]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsCountry] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsCountry] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.gisBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsGISBaseReference = b.idfsCountry;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisDistrictSubdistrict_A_Update] ON [dbo].[gisDistrictSubdistrict]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisLegendSymbol_A_Update] ON [dbo].[gisLegendSymbol]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfLegendSymbol))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisLocation_I_Delete] ON [dbo].[gisLocation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsLocation]) AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsLocation] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsLocation] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.gisLocation AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords AS b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsLocation = b.idfsLocation;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Steven Verner'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: 1/4/2021'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Rebuilds gisLocationDenormalized when:'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	-- 1.  When a new location is inserted.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	-- 2.  When a location is re-parented (moved)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	-- 3.  When the location is deleted (intRowStatus = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- History:'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--	Date		Developer			Comments'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--	03/17/2022	Steven Verner		Fixed the issue where the incorrect level type was specified.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--  10/31/2022  Mani Govindarajan   Update the idfsLocation based on location Node and Node.ToString(), Updated the Final Insert-Selct Condition.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--  01/09/2023  Steven Verner		Modified gisStringNameTranslation joins to use left joins.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisLocation_UpdateDenormalizedHierarchy]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[gisLocation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   AFTER INSERT,DELETE,UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DECLARE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@current INT,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@max INT,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@languageId BIGINT,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@hi HIERARCHYID ,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@hiString varchar(255);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DECLARE @t TABLE('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			L1ID BIGINT, L2ID BIGINT, L3ID BIGINT, L4ID BIGINT, L5ID BIGINT, L6ID BIGINT, L7ID BIGINT,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			L1NAME NVARCHAR(255),L2NAME NVARCHAR(255),L3NAME NVARCHAR(255),L4NAME NVARCHAR(255),L5NAME NVARCHAR(255),L6NAME NVARCHAR(255),L7NAME NVARCHAR(255),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			Node HIERARCHYID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			[Level] INT,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfsLocation BIGINT,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			LanguageId BIGINT )'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DECLARE @Languages TABLE(id INT IDENTITY, idfsLanguage BIGINT)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INSERT INTO @Languages(idfsLanguage)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT idfsLanguage'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.gisLocationDenormalized ld'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		GROUP BY idfsLanguage'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DECLARE @idfsLocation BIGINT = NULL,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@newParent HIERARCHYID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@oldParent HIERARCHYID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@newDeleted BIT,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@oldDeleted BIT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			-- The following use cases must be captured:'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			-- 1.  When a new location is inserted.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			-- 2.  When a location is re-parented (moved)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			-- 3.  When the location is deleted (intRowStatus = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			-- 4.  When the location name changes...  (This use case cannot be captured here; it must be captured on the trtBaseReference table trigger...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF EXISTS(SELECT * FROM inserted) AND EXISTS (SELECT * FROM deleted) -- This is an update'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--	===================================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--  Test to see if the location moved...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--	===================================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		 @idfsLocation = idfsLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		,@newDeleted = CASE WHEN intRowStatus=1 THEN 1 ELSE 0 END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		,@newParent = NODE.GetAncestor(1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM Inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT @oldDeleted = intRowStatus,  @oldParent = Node.GetAncestor(1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM DELETED'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- We always remove all references of the location in the gislocationDenormalized table,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- then generate a new entry...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- This handles both when a record was deleted (intRowStatus=1) and the need to remove the existing recordsprior to generating a new one for reparenting...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- When the location has moved or the record is reactivated (intRowStatus = 0)...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF(@newParent != @oldParent)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			DELETE FROM gisLocationDenormalized WHERE idfsLocation = @idfsLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			GOTO GenerateNewReference'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END ELSE IF( @newDeleted = 1 )'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			DELETE FROM gisLocationDenormalized WHERE idfsLocation = @idfsLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ELSE IF(@oldDeleted =1 and @newDeleted = 0 )'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				DELETE FROM gisLocationDenormalized WHERE idfsLocation = @idfsLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				GOTO GenerateNewReference'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		GOTO Fini'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF EXISTS (SELECT * FROM inserted) AND NOT EXISTS (SELECT * FROM deleted) -- This is an insert'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- New location was inserted...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT @idfsLocation = idfsLocation FROM inserted;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		GOTO GenerateNewReference'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF EXISTS (SELECT * FROM deleted) AND NOT EXISTS(SELECT * FROM inserted) -- this is a delete'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- Location was deleted...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT @idfsLocation = idfsLocation FROM deleted;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE FROM dbo.gisLocationDenormalized WHERE idfsLocation = @idfsLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	GOTO Fini'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	GenerateNewReference:'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	--	===================================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT @current = 1, @max= COUNT(*) FROM @Languages'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT @hi = Node, @hiString=Node.ToString()  FROM gisLocation l WHERE l.idfsLocation = @idfsLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- iterate thru all the languages and insert the hierarchy record for each...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHILE (@current <= @max)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			--	Select a language...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT @languageId = idfsLanguage FROM @Languages WHERE id = @current'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			-- Perform the insert...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			-- 1st into table variable...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			INSERT INTO @t('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						 L1ID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,L2ID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,L3ID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,L4ID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,L5ID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,L6ID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,L7ID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,L1NAME'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,L2NAME'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,L3NAME'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,L4NAME'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,L5NAME'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,L6NAME'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,L7NAME'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,Node'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,[Level]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						--,idfsLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						,LanguageId)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			-- PIVOT!!!!!'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			-- Flatten the hierarchy and insert into gisLocationDenormalized...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				-- LevelIDs 1 thru 7...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(CASE WHEN [Level]=1 THEN idfsLocation END ),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(CASE WHEN [Level]=2 THEN idfsLocation END ),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(CASE WHEN [Level]=3 THEN idfsLocation END ),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(CASE WHEN [Level]=4 THEN idfsLocation END ),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(CASE WHEN [Level]=5 THEN idfsLocation END ),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(CASE WHEN [Level]=6 THEN idfsLocation END ),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(CASE WHEN [Level]=7 THEN idfsLocation END ),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				-- LevelNames 1 thru 7...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(CASE WHEN [Level]=1 THEN LevelName END ),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(CASE WHEN [Level]=2 THEN LevelName END ),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(CASE WHEN [Level]=3 THEN LevelName END ),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(CASE WHEN [Level]=4 THEN LevelName END ),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(CASE WHEN [Level]=5 THEN LevelName END ),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(CASE WHEN [Level]=6 THEN LevelName END ),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(CASE WHEN [Level]=7 THEN LevelName END ),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				-- Node...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(Node),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MAX(level),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				--MAX(idfsLocation),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				@languageId'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			FROM'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					l.Node.GetLevel() [Level]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					,COALESCE(snt.strTextString, b.strDefault) [LevelName]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					,b.strDefault [LevelNameDefault]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					,idfsLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					,Node'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					--,LevelType.strTextString'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					 ,rn=ROW_NUMBER() OVER (PARTITION BY 0 ORDER BY node.GetLevel())'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				FROM gisLocation l'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				JOIN gisBaseReference b ON b.idfsGISBaseReference = l.idfsLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				LEFT JOIN dbo.gisStringNameTranslation snt ON snt.idfsGISBaseReference = l.idfsLocation AND'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					snt.idfsLanguage = @languageId'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				WHERE @hi.IsDescendantOf(node) = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				) a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				-- Reset...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				SET @current = @current+1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				SELECT @languageId = NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- Update the idfsLocation...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE @t'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET idfsLocation ='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		CASE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN level =1 AND  Node =@hiString THEN L1ID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN level =2 AND  Node =@hiString THEN L2ID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN level =3 AND  Node =@hiString THEN L3ID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN level =4 AND  Node =@hiString THEN  L4ID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN level =5 AND  Node =@hiString THEN   L5ID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN level =6 AND  Node =@hiString THEN   L6ID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN level =7 AND  Node =@hiString THEN   L7ID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- Finally, insert into gis table...'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INSERT INTO dbo.gisLocationDenormalized'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level1ID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level2ID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level3ID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level4ID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level5ID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level6ID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level7ID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level1Name,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level2Name,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level3Name,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level4Name,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level5Name,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level6Name,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level7Name,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Node,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				Level,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfsLocation,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				LevelType,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfsLanguage'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT  L1ID,L2ID,L3ID,L4ID,L5ID,L6ID,L7ID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				L1NAME,L2NAME,L3NAME,L4NAME,L5NAME,L6NAME,L7NAME,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				node,[level],l.idfsLocation,COALESCE(lt.strTextString, T.strGISReferenceTypeName),l.LanguageId'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM @t l'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		JOIN gisBaseReference b ON b.idfsGISBaseReference = l.idfsLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		JOIN gisReferenceType t ON t.idfsGISReferenceType = b.idfsGISReferenceType'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		LEFT JOIN dbo.trtStringNameTranslation lt ON'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		lt.idfsLanguage = l.LanguageId AND lt.idfsBaseReference ='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		case l.level'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN 1 THEN 10003001'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN 2 THEN 10003003'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN 3 THEN 10003002'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN 4 THEN 10003004'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN 5 THEN 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN 6 THEN 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN 7 THEN 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ELSE 0 END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	Fini:'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- Bye!'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RETURN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisMetadata_A_Update] ON [dbo].[gisMetadata]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(strLayer))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisNewID_A_Update] ON [dbo].[gisNewID]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(gisNewID))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisOtherBaseReference_A_Update] ON [dbo].[gisOtherBaseReference]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGISOtherBaseReference))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisOtherStringNameTranslation_A_Update] ON [dbo].[gisOtherStringNameTranslation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsgisOtherBaseReference)) OR UPDATE(idfsLanguage))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisRayon_A_Update] ON [dbo].[gisRayon]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsRayon))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisRayon_I_Delete] on [dbo].[gisRayon]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsRayon]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsRayon] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsRayon] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.gisRayon as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsRayon = b.idfsRayon;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsRayon]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsRayon] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsRayon] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.gisBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsGISBaseReference = b.idfsRayon;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisReferenceType_A_Update] ON [dbo].[gisReferenceType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGISReferenceType))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisReferenceType_I_Delete] on [dbo].[gisReferenceType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsGISReferenceType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsGISReferenceType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsGISReferenceType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.gisReferenceType as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsGISReferenceType = b.idfsGISReferenceType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisRegion_A_Update] ON [dbo].[gisRegion]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsRegion))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisRegion_I_Delete] on [dbo].[gisRegion]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsRegion]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsRegion] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsRegion] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.gisRegion as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsRegion = b.idfsRegion;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsRegion]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsRegion] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsRegion] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.gisBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsGISBaseReference = b.idfsRegion;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisSettlement_A_Update] ON [dbo].[gisSettlement]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsSettlement))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisSettlement_I_Delete] on [dbo].[gisSettlement]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsSettlement]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSettlement] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSettlement] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.gisSettlement as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsSettlement = b.idfsSettlement;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsSettlement]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSettlement] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSettlement] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.gisBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsGISBaseReference = b.idfsSettlement;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisStringNameTranslation_A_Update] ON [dbo].[gisStringNameTranslation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsGISBaseReference) OR UPDATE(idfsLanguage)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisStringNameTranslation_I_Delete] on [dbo].[gisStringNameTranslation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsGISBaseReference], [idfsLanguage]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsGISBaseReference], [idfsLanguage] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsGISBaseReference], [idfsLanguage] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.gisStringNameTranslation as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsGISBaseReference = b.idfsGISBaseReference'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.idfsLanguage = b.idfsLanguage;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisUserLayer_A_Update] ON [dbo].[gisUserLayer]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(guidLayer))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBCountry_A_Update] ON [dbo].[gisWKBCountry]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBDistrict_A_Update] ON [dbo].[gisWKBDistrict]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBDistrictReady_A_Update] ON [dbo].[gisWKBDistrictReady]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(oid))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBEarthRoad_A_Update] ON [dbo].[gisWKBEarthRoad]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBForest_A_Update] ON [dbo].[gisWKBForest]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBHighway_A_Update] ON [dbo].[gisWKBHighway]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBInlandWater_A_Update] ON [dbo].[gisWKBInlandWater]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBLake_A_Update] ON [dbo].[gisWKBLake]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBLandUse_A_Update] ON [dbo].[gisWKBLandUse]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBMainRiver_A_Update] ON [dbo].[gisWKBMainRiver]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBMajorRoad_A_Update] ON [dbo].[gisWKBMajorRoad]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBPath_A_Update] ON [dbo].[gisWKBPath]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBRailroad_A_Update] ON [dbo].[gisWKBRailroad]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBRayon_A_Update] ON [dbo].[gisWKBRayon]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBRayonReady_A_Update] ON [dbo].[gisWKBRayonReady]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(oid))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBRegion_A_Update] ON [dbo].[gisWKBRegion]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBRegionReady_A_Update] ON [dbo].[gisWKBRegionReady]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(oid))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBRiver_A_Update] ON [dbo].[gisWKBRiver]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBRiverPolygon_A_Update] ON [dbo].[gisWKBRiverPolygon]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBSea_A_Update] ON [dbo].[gisWKBSea]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBSettlement_A_Update] ON [dbo].[gisWKBSettlement]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBSettlementReady_A_Update] ON [dbo].[gisWKBSettlementReady]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(oid))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_gisWKBSmallRiver_A_Update] ON [dbo].[gisWKBSmallRiver]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsGeoObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_HumanActualAddlInfo_A_Update] ON [dbo].[HumanActualAddlInfo]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(HumanActualAddlInfoUID))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_HumanActualAddlInfo_I_Delete] on [dbo].[HumanActualAddlInfo]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([HumanActualAddlInfoUID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [HumanActualAddlInfoUID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [HumanActualAddlInfoUID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.HumanActualAddlInfo as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[HumanActualAddlInfoUID] = b.[HumanActualAddlInfoUID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_HumanAddlInfo_A_Update] ON [dbo].[HumanAddlInfo]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(HumanAdditionalInfo))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_HumanAddlInfo_I_Delete] on [dbo].[HumanAddlInfo]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([HumanAdditionalInfo]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [HumanAdditionalInfo] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [HumanAdditionalInfo] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.HumanAddlInfo as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[HumanAdditionalInfo] = b.[HumanAdditionalInfo];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_HumanDiseaseReportRelationship_A_Update] ON [dbo].[HumanDiseaseReportRelationship]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(HumanDiseasereportRelnUID))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_HumanDiseaseReportRelationship_I_Delete] on [dbo].[HumanDiseaseReportRelationship]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([HumanDiseasereportRelnUID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [HumanDiseasereportRelnUID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [HumanDiseasereportRelnUID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.HumanDiseaseReportRelationship as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[HumanDiseasereportRelnUID] = b.[HumanDiseasereportRelnUID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_HumanDiseaseReportVaccination_A_Update] ON [dbo].[HumanDiseaseReportVaccination]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(HumanDiseaseReportVaccinationUID))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_HumanDiseaseReportVaccination_I_Delete] on [dbo].[HumanDiseaseReportVaccination]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([HumanDiseaseReportVaccinationUID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [HumanDiseaseReportVaccinationUID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [HumanDiseaseReportVaccinationUID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.HumanDiseaseReportVaccination as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[HumanDiseaseReportVaccinationUID] = b.[HumanDiseaseReportVaccinationUID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupEIDSSAppObject_A_Update] ON [dbo].[LkupEIDSSAppObject]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(AppObjectNameID))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupEIDSSAppObject_I_Delete] on [dbo].[LkupEIDSSAppObject]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([AppObjectNameID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [AppObjectNameID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [AppObjectNameID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[LkupEIDSSAppObject] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[AppObjectNameID] = b.[AppObjectNameID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([AppObjectNameID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [AppObjectNameID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [AppObjectNameID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[trtBaseReference] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[idfsBaseReference] = b.[AppObjectNameID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupEIDSSMenu_A_Update] ON [dbo].[LkupEIDSSMenu]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(EIDSSMenuID))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupEIDSSMenu_I_Delete] on [dbo].[LkupEIDSSMenu]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([EIDSSMenuID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [EIDSSMenuID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [EIDSSMenuID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[LkupEIDSSMenu] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[EIDSSMenuID] = b.[EIDSSMenuID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([EIDSSMenuID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [EIDSSMenuID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [EIDSSMenuID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[trtBaseReference] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[idfsBaseReference] = b.[EIDSSMenuID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupEIDSSMenuToSystemFunction_A_Update] ON [dbo].[LkupEIDSSMenuToSystemFunction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork () = 1 AND (UPDATE(EIDSSMenuID) AND UPDATE(SystemFunctionID)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupEIDSSMenuToSystemFunction_I_Delete] ON [dbo].[LkupEIDSSMenuToSystemFunction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([EIDSSMenuID], [SystemFunctionID]) AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [EIDSSMenuID], [SystemFunctionID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [EIDSSMenuID], [SystemFunctionID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[LkupEIDSSMenuToSystemFunction] AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows AS b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[EIDSSMenuID] = b.[EIDSSMenuID]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.[SystemFunctionID] = b.[SystemFunctionID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LKUPNextKey_A_Update] ON [dbo].[LKUPNextKey]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(TableName))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupNextKey_I_Delete] on [dbo].[LkupNextKey]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([TableName]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [TableName] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [TableName] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[LkupNextKey] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[TableName] = b.[TableName];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupRoleDashboardObject_A_Update] ON [dbo].[LkupRoleDashboardObject]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(DashboardObjectID) AND UPDATE(idfEmployee)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupRoleDashboardObject_I_Delete] on [dbo].[LkupRoleDashboardObject]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfEmployee], [DashboardObjectID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfEmployee], [DashboardObjectID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfEmployee], [DashboardObjectID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[LkupRoleDashboardObject] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[idfEmployee] = b.[idfEmployee]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.[DashboardObjectID] = b.[DashboardObjectID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupRoleMenuAccess_A_Update] ON [dbo].[LkupRoleMenuAccess]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(EIDSSMenuID) AND UPDATE(idfEmployee)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupRoleMenuAccess_I_Delete] on [dbo].[LkupRoleMenuAccess]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfEmployee], [EIDSSMenuID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfEmployee], [EIDSSMenuID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfEmployee], [EIDSSMenuID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[LkupRoleMenuAccess] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[idfEmployee] = b.[idfEmployee]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.[EIDSSMenuID] = b.[EIDSSMenuID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupRoleSystemFunctionAccess_A_Update] ON [dbo].[LkupRoleSystemFunctionAccess]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(SystemFunctionID) OR UPDATE(SystemFunctionOperationID) OR UPDATE(idfEmployee)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	-- Added 07 Dec 2020 to update the AuditUpdateDTM when the record is updated'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET a.AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.LkupRoleSystemFunctionAccess AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN inserted AS b ON a.SystemFunctionID = b.SystemFunctionID AND a.SystemFunctionOperationID = b.SystemFunctionOperationID AND a.idfEmployee = b.idfEmployee'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET a.AuditUpdateUser = SUSER_NAME()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.LkupRoleSystemFunctionAccess AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN inserted AS b ON a.SystemFunctionID = b.SystemFunctionID AND a.SystemFunctionOperationID = b.SystemFunctionOperationID AND a.idfEmployee = b.idfEmployee'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE NOT UPDATE(AuditUpdateUser)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupRoleSystemFunctionAccess_I_Delete] on [dbo].[LkupRoleSystemFunctionAccess]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfEmployee], [SystemFunctionID], [SystemFunctionOperationID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT Deleted.idfEmployee, [SystemFunctionID], [SystemFunctionOperationID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT idfEmployee, [SystemFunctionID], [SystemFunctionOperationID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[LkupRoleSystemFunctionAccess] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfEmployee = b.idfEmployee'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.[SystemFunctionID] = b.[SystemFunctionID]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.[SystemFunctionOperationID] = b.[SystemFunctionOperationID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupSystemFunctionToOperation_A_Update] ON [dbo].[LkupSystemFunctionToOperation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(SystemFunctionID) AND UPDATE(SystemFunctionOperationID)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	-- Added 07 Dec 2020 to update the AuditUpdateDTM when the record is updated'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET a.AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.LkupSystemFunctionToOperation AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN inserted AS b ON a.SystemFunctionID = b.SystemFunctionID AND a.SystemFunctionOperationID = b.SystemFunctionOperationID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET a.AuditUpdateUser = SUSER_NAME()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.LkupSystemFunctionToOperation AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN inserted AS b ON a.SystemFunctionID = b.SystemFunctionID AND a.SystemFunctionOperationID = b.SystemFunctionOperationID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE NOT UPDATE(AuditUpdateUser)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_LkupSystemFunctionToOperation_I_Delete] on [dbo].[LkupSystemFunctionToOperation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([SystemFunctionID], [SystemFunctionOperationID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [SystemFunctionID], [SystemFunctionOperationID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [SystemFunctionID], [SystemFunctionOperationID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[LkupSystemFunctionToOperation] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[SystemFunctionID] = b.[SystemFunctionID]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.[SystemFunctionOperationID] = b.[SystemFunctionOperationID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
ALTER TABLE [dbo].[LkupSystemFunctionToOperation] ENABLE TRIGGER [TR_LkupSystemFunctionToOperation_I_Delete]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_locBaseReference_A_Update] ON [dbo].[locBaseReference]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idflBaseReference))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_locStringNameTranslation_A_Update] ON [dbo].[locStringNameTranslation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idflBaseReference) OR UPDATE(idfsLanguage)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_MonitoringSessionToSampleType_A_Update] ON [dbo].[MonitoringSessionToSampleType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(MonitoringSessionToSampleType)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_MonitoringSessionToSampleType_I_Delete] on [dbo].[MonitoringSessionToSampleType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([MonitoringSessionToSampleType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [MonitoringSessionToSampleType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [MonitoringSessionToSampleType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[MonitoringSessionToSampleType] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[MonitoringSessionToSampleType] = b.[MonitoringSessionToSampleType];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_OutbreakCaseContact_A_Update] ON [dbo].[OutbreakCaseContact]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(OutbreakCaseContactUID)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_OutbreakCaseContact_I_Delete] ON [dbo].[OutbreakCaseContact]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([OutbreakCaseContactUID]) AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [OutbreakCaseContactUID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [OutbreakCaseContactUID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[OutbreakCaseContact] AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows AS b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[OutbreakCaseContactUID] = b.[OutbreakCaseContactUID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_OutbreakCaseReport_A_Update] ON [dbo].[OutbreakCaseReport]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(OutbreakCaseReportUID)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_OutbreakCaseReport_I_Delete] on [dbo].[OutbreakCaseReport]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([OutBreakCaseReportUID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [OutBreakCaseReportUID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [OutBreakCaseReportUID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[OutbreakCaseReport] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[OutBreakCaseReportUID] = b.[OutBreakCaseReportUID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_OutbreakSpeciesParameter_A_Update] on [dbo].[OutbreakSpeciesParameter]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1) AND (UPDATE(OutbreakSpeciesParameterUID))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_OutbreakSpeciesParameter_I_Delete] on [dbo].[OutbreakSpeciesParameter]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([OutbreakSpeciesParameterUID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [OutbreakSpeciesParameterUID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [OutbreakSpeciesParameterUID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.OutbreakSpeciesParameter as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[OutbreakSpeciesParameterUID] = b.[OutbreakSpeciesParameterUID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_SecurityPolicyConfiguration_A_Update] on [dbo].[SecurityPolicyConfiguration]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1) AND (UPDATE(SecurityPolicyConfigurationUID))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_SecurityPolicyConfiguration_I_Delete] on [dbo].[SecurityPolicyConfiguration]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([SecurityPolicyConfigurationUID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [SecurityPolicyConfigurationUID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [SecurityPolicyConfigurationUID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.SecurityPolicyConfiguration as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[SecurityPolicyConfigurationUID] = b.[SecurityPolicyConfigurationUID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_SystemPreference_A_Update] ON [dbo].[SystemPreference]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(SystemPreferenceUID))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_SystemPreference_I_Delete] on [dbo].[SystemPreference]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([SystemPreferenceUID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [SystemPreferenceUID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [SystemPreferenceUID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[SystemPreference] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[SystemPreferenceUID] = b.[SystemPreferenceUID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasAggregateFunction_A_Update] ON [dbo].[tasAggregateFunction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsAggregateFunction))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasFieldSourceForTable_A_Update] ON [dbo].[tasFieldSourceForTable]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsSearchField) OR UPDATE(idfUnionSearchTable)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasglLayout_A_Update] ON [dbo].[tasglLayout]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsLayout))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasglLayoutFolder_A_Update] ON [dbo].[tasglLayoutFolder]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsLayoutFolder))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasglLayoutSearchField_A_Update] ON [dbo].[tasglLayoutSearchField]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfLayoutSearchField))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasglLayoutToMapImage_A_Update] ON [dbo].[tasglLayoutToMapImage]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfLayoutToMapImage))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasglMapImage_A_Update] ON [dbo].[tasglMapImage]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfMapImage))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasglQuery_A_Update] ON [dbo].[tasglQuery]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsQuery))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasglQueryConditionGroup_A_Update] ON [dbo].[tasglQueryConditionGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfQueryConditionGroup))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasglQuerySearchField_A_Update] ON [dbo].[tasglQuerySearchField]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfQuerySearchField))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasglQuerySearchFieldCondition_A_Update] ON [dbo].[tasglQuerySearchFieldCondition]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfQuerySearchFieldCondition))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasglQuerySearchObject_A_Update] ON [dbo].[tasglQuerySearchObject]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfQuerySearchObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasglView_A_Update] ON [dbo].[tasglView]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfView) OR UPDATE(idfsLanguage)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasglViewBand_A_Update] ON [dbo].[tasglViewBand]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfViewBand))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasglViewColumn_A_Update] ON [dbo].[tasglViewColumn]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfViewColumn))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasLayout_A_Update] ON [dbo].[tasLayout]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idflLayout))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasLayoutFolder_A_Update] ON [dbo].[tasLayoutFolder]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idflLayoutFolder))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasLayoutSearchField_A_Update] ON [dbo].[tasLayoutSearchField]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfLayoutSearchField))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasLayoutToMapImage_A_Update] ON [dbo].[tasLayoutToMapImage]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfLayoutToMapImage))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasMainTableForObject_A_Update] ON [dbo].[tasMainTableForObject]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsSearchObject) OR UPDATE(idfMainSearchTable)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasMapImage_A_Update] ON [dbo].[tasMapImage]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfMapImage))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasQuery_A_Update] ON [dbo].[tasQuery]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idflQuery))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasQueryConditionGroup_A_Update] ON [dbo].[tasQueryConditionGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfQueryConditionGroup))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasQuerySearchField_A_Update] ON [dbo].[tasQuerySearchField]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfQuerySearchField))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasQuerySearchFieldCondition_A_Update] ON [dbo].[tasQuerySearchFieldCondition]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfQuerySearchFieldCondition))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasQuerySearchObject_A_Update] ON [dbo].[tasQuerySearchObject]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfQuerySearchObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasSearchField_A_Update] ON [dbo].[tasSearchField]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsSearchField))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasSearchField_I_Delete] on [dbo].[tasSearchField]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsSearchField]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSearchField] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSearchField] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tasSearchField as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsSearchField = b.idfsSearchField;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsSearchField]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSearchField] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSearchField] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsSearchField;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasSearchFieldsWithRelatedValues_A_Update] ON [dbo].[tasSearchFieldsWithRelatedValues]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSearchFieldsWithRelatedValues))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasSearchFieldToFFParameter_A_Update] ON [dbo].[tasSearchFieldToFFParameter]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSearchFieldToFFParameter))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasSearchFieldToPersonalDataGroup_A_Update] ON [dbo].[tasSearchFieldToPersonalDataGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsSearchField) OR UPDATE(idfPersonalDataGroup)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasSearchObject_A_Update] ON [dbo].[tasSearchObject]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsSearchObject))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasSearchObject_I_Delete] on [dbo].[tasSearchObject]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsSearchObject]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSearchObject] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSearchObject] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tasSearchObject as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsSearchObject = b.idfsSearchObject;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsSearchObject]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSearchObject] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSearchObject] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsSearchObject;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasSearchObjectToSearchObject_A_Update] ON [dbo].[tasSearchObjectToSearchObject]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsRelatedSearchObject) OR UPDATE(idfsParentSearchObject)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasSearchObjectToSystemFunction_A_Update] ON [dbo].[tasSearchObjectToSystemFunction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsSearchObject) OR UPDATE(idfsSystemFunction)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasSearchTable_A_Update] ON [dbo].[tasSearchTable]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSearchTable))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasSearchTableJoinRule_A_Update] ON [dbo].[tasSearchTableJoinRule]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfMainSearchTable) OR UPDATE(idfSearchTable)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasView_A_Update] ON [dbo].[tasView]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfView) OR UPDATE(idfsLanguage)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasViewBand_A_Update] ON [dbo].[tasViewBand]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfViewBand))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tasViewColumn_A_Update] ON [dbo].[tasViewColumn]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfViewColumn))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tauDataAuditEvent_I_Delete] on [dbo].[tauDataAuditEvent]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfDataAuditEvent]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDataAuditEvent] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDataAuditEvent] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datEnteringDate = getdate(),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tauDataAuditEvent as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfDataAuditEvent = b.idfDataAuditEvent;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tdeDataExport_A_Update] ON [dbo].[tdeDataExport]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDataExport))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tdeDataExportDetail_A_Update] ON [dbo].[tdeDataExportDetail]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDataExportDetail))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tdeDataExportDiagnosis_A_Update] ON [dbo].[tdeDataExportDiagnosis]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsDiagnosis) OR UPDATE(idfDataExport)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tdeDataExportFFReference_A_Update] ON [dbo].[tdeDataExportFFReference]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsParameter) OR UPDATE(idfCustomizationPackage) OR UPDATE(strType) OR UPDATE(strAlias)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tdeDataExportProblem_A_Update] ON [dbo].[tdeDataExportProblem]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDataExportProblem))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflAggrCaseFiltered_A_Update] ON [dbo].[tflAggrCaseFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfAggrCaseFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflBasicSyndromicSurveillanceAggregateHeaderFiltered_A_Update] ON [dbo].[tflBasicSyndromicSurveillanceAggregateHeaderFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfBasicSyndromicSurveillanceAggregateHeaderFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflBasicSyndromicSurveillanceFiltered_A_Update] ON [dbo].[tflBasicSyndromicSurveillanceFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfBasicSyndromicSurveillanceFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflBatchTestFiltered_A_Update] ON [dbo].[tflBatchTestFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfBatchTestFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflDataAuditEventFiltered_A_Update] ON [dbo].[tflDataAuditEventFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDataAuditEventFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflFarmFiltered_A_Update] ON [dbo].[tflFarmFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfFarmFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflGeoLocationFiltered_A_Update] ON [dbo].[tflGeoLocationFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfGeoLocationFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflHumanCaseFiltered_A_Update] ON [dbo].[tflHumanCaseFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfHumanCaseFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflHumanFiltered_A_Update] ON [dbo].[tflHumanFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfHumanFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflMonitoringSessionFiltered_A_Update] ON [dbo].[tflMonitoringSessionFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfMonitoringSessionFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflNotificationFiltered_A_Update] ON [dbo].[tflNotificationFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfNotificationFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflObservationFiltered_A_Update] ON [dbo].[tflObservationFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfObservationFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflOutbreakFiltered_A_Update] ON [dbo].[tflOutbreakFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfOutbreakFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflSite_A_Update] ON [dbo].[tflSite]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsSite))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflSite_I_Delete] on [dbo].[tflSite]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfsSite]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSite] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSite] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[tflSite] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[idfsSite] = b.[idfsSite];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflSiteGroup_A_Update] ON [dbo].[tflSiteGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSiteGroup))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflSiteGroup_I_Delete] on [dbo].[tflSiteGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfSiteGroup]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSiteGroup] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSiteGroup] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[tflSiteGroup] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[idfSiteGroup] = b.[idfSiteGroup];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflSiteGroupRelation_A_Update] ON [dbo].[tflSiteGroupRelation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSiteGroupRelation))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflSiteToSiteGroup_A_Update] ON [dbo].[tflSiteToSiteGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSiteToSiteGroup))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflTransferOutFiltered_A_Update] ON [dbo].[tflTransferOutFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfTransferOutFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflVectorSurveillanceSessionFiltered_A_Update] ON [dbo].[tflVectorSurveillanceSessionFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfVectorSurveillanceSessionFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tflVetCaseFiltered_A_Update] ON [dbo].[tflVetCaseFiltered]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfVetCaseFiltered))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbActivityParameters_A_Update] ON [dbo].[tlbActivityParameters]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfActivityParameters))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbActivityParameters_I_Delete] on [dbo].[tlbActivityParameters]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfActivityParameters]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfActivityParameters] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfActivityParameters] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbActivityParameters as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfActivityParameters = b.idfActivityParameters;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAggrCase_A_Update] ON [dbo].[tlbAggrCase]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfAggrCase))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAggrCase_I_Delete] on [dbo].[tlbAggrCase]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfAggrCase]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggrCase] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggrCase] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbAggrCase as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfAggrCase = b.idfAggrCase;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva S.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: 2014-05-13'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Trigger for correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication and checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[trtAggrCaseReplicationUp]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tlbAggrCase]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   for INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	--DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	--SET @context = dbo.fnGetContext()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	delete  nID	from  dbo.tflNewID as nID		inner join inserted as ins		on   ins.idfAggrCase = nID.idfKey1	where  nID.strTableName = ''''tlbAggrCase''''	insert into dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)	select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			''''tlbAggrCase'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ins.idfAggrCase,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			sg.idfSiteGroup	from  inserted as ins		inner join dbo.tflSiteToSiteGroup as stsg		on   stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				inner join dbo.tflSiteGroup sg		on	sg.idfSiteGroup = stsg.idfSiteGroup			and sg.idfsRayon is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			and sg.idfsCentralSite is null			and sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					left join dbo.tflAggrCaseFiltered as acf		on  acf.idfAggrCase = ins.idfAggrCase			and acf.idfSiteGroup = sg.idfSiteGroup	where  acf.idfAggrCaseFiltered is null	insert into dbo.tflAggrCaseFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfAggrCaseFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfAggrCase,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)	select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ins.idfAggrCase,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			nID.idfKey2	from  inserted as ins		inner join dbo.tflNewID as nID		on  nID.strTableName = ''''tlbAggrCase''''			and nID.idfKey1 = ins.idfAggrCase			and nID.idfKey2 is not null		left join dbo.tflAggrCaseFiltered as acf		on   acf.idfAggrCaseFiltered = nID.NewID	where  acf.idfAggrCaseFiltered is null	delete  nID	from  dbo.tflNewID as nID		inner join inserted as ins		on   ins.idfAggrCase = nID.idfKey1	where  nID.strTableName = ''''tlbAggrCase'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAggrDiagnosticActionMTX_A_Update] ON [dbo].[tlbAggrDiagnosticActionMTX]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfAggrDiagnosticActionMTX))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAggrDiagnosticActionMTX_I_Delete] on [dbo].[tlbAggrDiagnosticActionMTX]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfAggrDiagnosticActionMTX]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggrDiagnosticActionMTX] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggrDiagnosticActionMTX] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbAggrDiagnosticActionMTX as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfAggrDiagnosticActionMTX = b.idfAggrDiagnosticActionMTX;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAggrHumanCaseMTX_A_Update] ON [dbo].[tlbAggrHumanCaseMTX]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfAggrHumanCaseMTX))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAggrHumanCaseMTX_I_Delete] on [dbo].[tlbAggrHumanCaseMTX]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfAggrHumanCaseMTX]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggrHumanCaseMTX] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggrHumanCaseMTX] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbAggrHumanCaseMTX as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfAggrHumanCaseMTX = b.idfAggrHumanCaseMTX;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAggrMatrixVersionHeader_A_Update] ON [dbo].[tlbAggrMatrixVersionHeader]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfVersion))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAggrMatrixVersionHeader_I_Delete] on [dbo].[tlbAggrMatrixVersionHeader]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfVersion]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfVersion] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfVersion] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbAggrMatrixVersionHeader as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfVersion = b.idfVersion;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAggrProphylacticActionMTX_A_Update] ON [dbo].[tlbAggrProphylacticActionMTX]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfAggrProphylacticActionMTX))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAggrProphylacticActionMTX_I_Delete] on [dbo].[tlbAggrProphylacticActionMTX]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfAggrProphylacticActionMTX]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggrProphylacticActionMTX] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggrProphylacticActionMTX] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbAggrProphylacticActionMTX as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfAggrProphylacticActionMTX = b.idfAggrProphylacticActionMTX;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAggrSanitaryActionMTX_A_Update] ON [dbo].[tlbAggrSanitaryActionMTX]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfAggrSanitaryActionMTX))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAggrSanitaryActionMTX_I_Delete] on [dbo].[tlbAggrSanitaryActionMTX]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfAggrSanitaryActionMTX]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggrSanitaryActionMTX] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggrSanitaryActionMTX] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbAggrSanitaryActionMTX as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfAggrSanitaryActionMTX = b.idfAggrSanitaryActionMTX;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAggrVetCaseMTX_A_Update] ON [dbo].[tlbAggrVetCaseMTX]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfAggrVetCaseMTX))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAggrVetCaseMTX_I_Delete] on [dbo].[tlbAggrVetCaseMTX]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfAggrVetCaseMTX]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggrVetCaseMTX] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggrVetCaseMTX] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbAggrVetCaseMTX as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfAggrVetCaseMTX = b.idfAggrVetCaseMTX;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAnimal_A_Update] ON [dbo].[tlbAnimal]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfAnimal))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAnimal_I_Delete] on [dbo].[tlbAnimal]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfAnimal]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAnimal] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAnimal] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbAnimal as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfAnimal = b.idfAnimal;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAntimicrobialTherapy_A_Update] ON [dbo].[tlbAntimicrobialTherapy]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfAntimicrobialTherapy))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbAntimicrobialTherapy_I_Delete] on [dbo].[tlbAntimicrobialTherapy]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfAntimicrobialTherapy]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAntimicrobialTherapy] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAntimicrobialTherapy] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbAntimicrobialTherapy as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfAntimicrobialTherapy = b.idfAntimicrobialTherapy;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbBasicSyndromicSurveillance_A_Update] ON [dbo].[tlbBasicSyndromicSurveillance]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfBasicSyndromicSurveillance))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbBasicSyndromicSurveillance_I_Delete] on [dbo].[tlbBasicSyndromicSurveillance]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfBasicSyndromicSurveillance]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfBasicSyndromicSurveillance] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfBasicSyndromicSurveillance] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbBasicSyndromicSurveillance as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfBasicSyndromicSurveillance = b.idfBasicSyndromicSurveillance;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva Svetlana'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: 2013-09-24'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Trigger for correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication and checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[trtBasicSyndromicSurveillanceReplicationUp]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tlbBasicSyndromicSurveillance]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   for INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET @context = dbo.fnGetContext()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	delete  nID	from  dbo.tflNewID as nID		inner join inserted as ins		on   ins.idfBasicSyndromicSurveillance = nID.idfKey1	where  nID.strTableName = ''''tflBasicSyndromicSurveillanceFiltered''''	insert into dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)	select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			''''tflBasicSyndromicSurveillanceFiltered'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ins.idfBasicSyndromicSurveillance,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			sg.idfSiteGroup	from  inserted as ins		inner join dbo.tflSiteToSiteGroup as stsg		on   stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				inner join dbo.tflSiteGroup sg		on	sg.idfSiteGroup = stsg.idfSiteGroup			and sg.idfsRayon is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			and sg.idfsCentralSite is null			and sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					left join dbo.tflBasicSyndromicSurveillanceFiltered as bsshf		on  bsshf.idfBasicSyndromicSurveillance = ins.idfBasicSyndromicSurveillance			and bsshf.idfSiteGroup = sg.idfSiteGroup	where  bsshf.idfBasicSyndromicSurveillanceFiltered is null	insert into dbo.tflBasicSyndromicSurveillanceFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfBasicSyndromicSurveillanceFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfBasicSyndromicSurveillance,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)	select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ins.idfBasicSyndromicSurveillance,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			nID.idfKey2	from  inserted as ins		inner join dbo.tflNewID as nID		on  nID.strTableName = ''''tflBasicSyndromicSurveillanceFiltered''''			and nID.idfKey1 = ins.idfBasicSyndromicSurveillance			and nID.idfKey2 is not null		left join dbo.tflBasicSyndromicSurveillanceFiltered as bsshf		on   bsshf.idfBasicSyndromicSurveillanceFiltered = nID.NewID	where  bsshf.idfBasicSyndromicSurveillanceFiltered is null	delete  nID	from  dbo.tflNewID as nID		inner join inserted as ins		on   ins.idfBasicSyndromicSurveillance = nID.idfKey1	where  nID.strTableName = ''''tflBasicSyndromicSurveillanceFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbBasicSyndromicSurveillanceAggregateDetail_A_Update] ON [dbo].[tlbBasicSyndromicSurveillanceAggregateDetail]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfAggregateDetail))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbBasicSyndromicSurveillanceAggregateDetail_I_Delete] on [dbo].[tlbBasicSyndromicSurveillanceAggregateDetail]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfAggregateDetail]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggregateDetail] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggregateDetail] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbBasicSyndromicSurveillanceAggregateDetail as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfAggregateDetail = b.idfAggregateDetail;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbBasicSyndromicSurveillanceAggregateHeader_A_Update] ON [dbo].[tlbBasicSyndromicSurveillanceAggregateHeader]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfAggregateHeader))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbBasicSyndromicSurveillanceAggregateHeader_I_Delete] on [dbo].[tlbBasicSyndromicSurveillanceAggregateHeader]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfAggregateHeader]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggregateHeader] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfAggregateHeader] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbBasicSyndromicSurveillanceAggregateHeader as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfAggregateHeader = b.idfAggregateHeader;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva Svetlana'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: 2013-09-24'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Trigger for correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication and checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[trtBasicSyndromicSurveillanceAggregateHeaderReplicationUp]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tlbBasicSyndromicSurveillanceAggregateHeader]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   for INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	--DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	--SET @context = dbo.fnGetContext()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	delete  nID	from  dbo.tflNewID as nID		inner join inserted as ins		on   ins.idfAggregateHeader = nID.idfKey1	where  nID.strTableName = ''''tflBasicSyndromicSurveillanceAggregateHeaderFiltered''''	insert into dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)	select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			''''tflBasicSyndromicSurveillanceAggregateHeaderFiltered'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ins.idfAggregateHeader,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			sg.idfSiteGroup	from  inserted as ins		inner join dbo.tflSiteToSiteGroup as stsg		on   stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				inner join dbo.tflSiteGroup sg		on	sg.idfSiteGroup = stsg.idfSiteGroup			and sg.idfsRayon is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			and sg.idfsCentralSite is null			and sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					left join dbo.tflBasicSyndromicSurveillanceAggregateHeaderFiltered as bsshf		on  bsshf.idfAggregateHeader = ins.idfAggregateHeader			and bsshf.idfSiteGroup = sg.idfSiteGroup	where  bsshf.idfBasicSyndromicSurveillanceAggregateHeaderFiltered is null	insert into dbo.tflBasicSyndromicSurveillanceAggregateHeaderFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfBasicSyndromicSurveillanceAggregateHeaderFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfAggregateHeader,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)	select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ins.idfAggregateHeader,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			nID.idfKey2	from  inserted as ins		inner join dbo.tflNewID as nID		on  nID.strTableName = ''''tflBasicSyndromicSurveillanceAggregateHeaderFiltered''''			and nID.idfKey1 = ins.idfAggregateHeader			and nID.idfKey2 is not null		left join dbo.tflBasicSyndromicSurveillanceAggregateHeaderFiltered as bsshf		on   bsshf.idfBasicSyndromicSurveillanceAggregateHeaderFiltered = nID.NewID	where  bsshf.idfBasicSyndromicSurveillanceAggregateHeaderFiltered is null	delete  nID	from  dbo.tflNewID as nID		inner join inserted as ins		on   ins.idfAggregateHeader = nID.idfKey1	where  nID.strTableName = ''''tflBasicSyndromicSurveillanceAggregateHeaderFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbBatchTest_A_Update] ON [dbo].[tlbBatchTest]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfBatchTest))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbBatchTest_I_Delete] on [dbo].[tlbBatchTest]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfBatchTest]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfBatchTest] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfBatchTest] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbBatchTest as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfBatchTest = b.idfBatchTest;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva Svetlana'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: 2013-09-24'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Trigger for correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication and checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[trtBatchTestReplicationUp]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tlbBatchTest]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   for INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	declare @FilterListedRecordsOnly bit = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	-- get value of global option FilterListedRecordsOnly'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	if exists (select * from tstGlobalSiteOptions tgso where tgso.strName = ''''FilterListedRecordsOnly'''' and tgso.strValue = ''''1'''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		set @FilterListedRecordsOnly = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	else'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		set @FilterListedRecordsOnly = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	if @FilterListedRecordsOnly = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	begin'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--SET @context = dbo.fnGetContext()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		delete  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   ins.idfBatchTest = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  nID.strTableName = ''''tflBatchTestFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		insert into dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				''''tflBatchTestFiltered'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfBatchTest,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflSiteToSiteGroup as stsg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflSiteGroup sg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on	sg.idfSiteGroup = stsg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.idfsRayon is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.idfsCentralSite is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			left join dbo.tflBatchTestFiltered as btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on  btf.idfBatchTest = ins.idfBatchTest'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and btf.idfSiteGroup = sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  btf.idfBatchTestFiltered is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		insert into dbo.tflBatchTestFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfBatchTestFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfBatchTest,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfBatchTest,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				nID.idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on  nID.strTableName = ''''tflBatchTestFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and nID.idfKey1 = ins.idfBatchTest'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and nID.idfKey2 is not null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			left join dbo.tflBatchTestFiltered as btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   btf.idfBatchTestFiltered = nID.NewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  btf.idfBatchTestFiltered is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		delete  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   ins.idfBatchTest = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  nID.strTableName = ''''tflBatchTestFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	end'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbCampaign_A_Update] ON [dbo].[tlbCampaign]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfCampaign))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbCampaign_I_Delete] on [dbo].[tlbCampaign]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfCampaign]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfCampaign] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfCampaign] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbCampaign as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfCampaign = b.idfCampaign;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbChangeDiagnosisHistory_A_Update] ON [dbo].[tlbChangeDiagnosisHistory]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfChangeDiagnosisHistory))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbChangeDiagnosisHistory_I_Delete] on [dbo].[tlbChangeDiagnosisHistory]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfChangeDiagnosisHistory]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfChangeDiagnosisHistory] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfChangeDiagnosisHistory] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbChangeDiagnosisHistory as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfChangeDiagnosisHistory = b.idfChangeDiagnosisHistory;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbContactedCasePerson_A_Update] ON [dbo].[tlbContactedCasePerson]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfContactedCasePerson))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbContactedCasePerson_I_Delete] on [dbo].[tlbContactedCasePerson]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfContactedCasePerson]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfContactedCasePerson] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfContactedCasePerson] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbContactedCasePerson as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfContactedCasePerson = b.idfContactedCasePerson;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbDepartment_A_Update] ON [dbo].[tlbDepartment]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDepartment))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbDepartment_I_Delete] on [dbo].[tlbDepartment]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfDepartment]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDepartment] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDepartment] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbDepartment as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfDepartment = b.idfDepartment;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbEmployee_A_Update] ON [dbo].[tlbEmployee]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfEmployee))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbEmployee_I_Delete] on [dbo].[tlbEmployee]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfEmployee]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfEmployee] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfEmployee] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbEmployee as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfEmployee = b.idfEmployee;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbEmployeeGroup_A_Update] ON [dbo].[tlbEmployeeGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfEmployeeGroup))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbEmployeeGroup_I_Delete] on [dbo].[tlbEmployeeGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfEmployeeGroup]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfEmployeeGroup] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfEmployeeGroup] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbEmployeeGroup as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfEmployeeGroup = b.idfEmployeeGroup;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfEmployeeGroup]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfEmployeeGroup] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfEmployeeGroup] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbEmployee as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfEmployee = b.idfEmployeeGroup;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbEmployeeGroupMember_A_Update] ON [dbo].[tlbEmployeeGroupMember]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfEmployee) OR UPDATE(idfEmployeeGroup)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbEmployeeGroupMember_I_Delete] on [dbo].[tlbEmployeeGroupMember]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfEmployee], [idfEmployeeGroup]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfEmployee], [idfEmployeeGroup] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfEmployee], [idfEmployeeGroup] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbEmployeeGroupMember as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfEmployee = b.idfEmployee'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.idfEmployeeGroup = b.idfEmployeeGroup;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbFarm_A_Update] ON [dbo].[tlbFarm]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfFarm))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbFarm_I_Delete] on [dbo].[tlbFarm]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfFarm]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfFarm] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfFarm] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbFarm as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfFarm = b.idfFarm;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva Svetlana'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: May 19 2014  2:42PM'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Trigger for correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication and checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[trtFarmReplicationUp]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tlbFarm]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   for INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	declare @FilterListedRecordsOnly bit = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	-- get value of global option FilterListedRecordsOnly'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	if exists (select * from tstGlobalSiteOptions tgso where tgso.strName = ''''FilterListedRecordsOnly'''' and tgso.strValue = ''''1'''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		set @FilterListedRecordsOnly = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	else'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		set @FilterListedRecordsOnly = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	if @FilterListedRecordsOnly = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	begin'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--SET @context = dbo.fnGetContext()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		delete  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   ins.idfFarm = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  nID.strTableName = ''''tflFarmFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		insert into dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				''''tflFarmFiltered'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfFarm,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflSiteToSiteGroup as stsg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflSiteGroup sg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on	sg.idfSiteGroup = stsg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.idfsRayon is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.idfsCentralSite is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			left join dbo.tflFarmFiltered as btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on  btf.idfFarm = ins.idfFarm'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and btf.idfSiteGroup = sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  btf.idfFarmFiltered is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		insert into dbo.tflFarmFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfFarmFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfFarm,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfFarm,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				nID.idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on  nID.strTableName = ''''tflFarmFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and nID.idfKey1 = ins.idfFarm'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and nID.idfKey2 is not null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			left join dbo.tflFarmFiltered as btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   btf.idfFarmFiltered = nID.NewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  btf.idfFarmFiltered is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		delete  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   ins.idfFarm = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  nID.strTableName = ''''tflFarmFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	end'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbFarmActual_A_Update] ON [dbo].[tlbFarmActual]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfFarmActual))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbFarmActual_I_Delete] on [dbo].[tlbFarmActual]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfFarmActual]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfFarmActual] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfFarmActual] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbFarmActual as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfFarmActual = b.idfFarmActual;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbFreezer_A_Update] ON [dbo].[tlbFreezer]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfFreezer))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbFreezer_I_Delete] on [dbo].[tlbFreezer]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfFreezer]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfFreezer] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfFreezer] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbFreezer as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfFreezer = b.idfFreezer;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbFreezerSubdivision_A_Update] ON [dbo].[tlbFreezerSubdivision]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSubdivision))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbFreezerSubdivision_I_Delete] on [dbo].[tlbFreezerSubdivision]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfSubdivision]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSubdivision] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSubdivision] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbFreezerSubdivision as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfSubdivision = b.idfSubdivision;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbGeoLocation_A_Insert] ON [dbo].[tlbGeoLocation]	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
DECLARE @okToUpdate BIT = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF EXISTS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT idfGeoLocation, idfsResidentType, idfsGroundType, idfsGeoLocationType, idfsCountry, idfsRegion, idfsRayon, idfsSettlement, strPostCode, strStreetName, strHouse, strBuilding, strApartment, strDescription, dblDistance, dblLatitude, dblLongitude, dblAccuracy, dblAlignment, blnForeignAddress, strForeignAddress, strShortAddressString FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT idfGeoLocation, idfsResidentType, idfsGroundType, idfsGeoLocationType, idfsCountry, idfsRegion, idfsRayon, idfsSettlement, strPostCode, strStreetName, strHouse, strBuilding, strApartment, strDescription, dblDistance, dblLatitude, dblLongitude, dblAccuracy, dblAlignment, blnForeignAddress, strForeignAddress, strShortAddressString FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
SET @okToUpdate = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF ((TRIGGER_NESTLEVEL()<2) AND (dbo.FN_GBL_TriggersWork()=1)) AND @okToUpdate = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	UPDATE tgl'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		tgl.strAddressString = dbo.FN_GBL_GeoLocationString(''''en-US'''', i.idfGeoLocation, i.idfsGeoLocationType),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		tgl.strShortAddressString = dbo.FN_GBL_GeoLocationShortAddressString(''''en-US'''', i.idfGeoLocation, i.idfsGeoLocationType)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM dbo.tlbGeoLocation AS tgl'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	JOIN inserted AS i ON tgl.idfGeoLocation = i.idfGeoLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE ISNULL(tgl.strAddressString, '''''''') <> dbo.FN_GBL_GeoLocationString(''''en-US'''', i.idfGeoLocation, i.idfsGeoLocationType)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	OR ISNULL(tgl.strShortAddressString, '''''''') <> dbo.FN_GBL_GeoLocationShortAddressString(''''en-US'''', i.idfGeoLocation, i.idfsGeoLocationType)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INSERT INTO dbo.tlbGeoLocationTranslation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	(idfGeoLocation, idfsLanguage, strTextString, strShortAddressString)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		tgl.idfGeoLocation,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		tltc.idfsLanguage,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		dbo.FN_GBL_GeoLocationString(tbr.strBaseReferenceCode, i.idfGeoLocation, i.idfsGeoLocationType) AS strTextString,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		dbo.FN_GBL_GeoLocationShortAddressString(tbr.strBaseReferenceCode, i.idfGeoLocation, i.idfsGeoLocationType) AS strShortAddressString'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM dbo.tlbGeoLocation AS tgl'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	JOIN inserted AS i ON tgl.idfGeoLocation = i.idfGeoLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	CROSS JOIN trtLanguageToCP tltc	JOIN trtBaseReference tbr ON tbr.idfsBaseReference = tltc.idfsLanguage AND tbr.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	LEFT JOIN tlbGeoLocationTranslation tglt ON	tglt.idfGeoLocation = tgl.idfGeoLocation AND tglt.idfsLanguage = tltc.idfsLanguage'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	JOIN tstCustomizationPackage tcp1 ON tcp1.idfCustomizationPackage = tltc.idfCustomizationPackage'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE tcp1.idfsCountry = dbo.FN_GBL_CustomizationCountry()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	AND tglt.idfGeoLocation IS NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
SET ANSI_NULLS ON'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbGeoLocation_A_Update] ON [dbo].[tlbGeoLocation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @okToUpdate BIT = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF EXISTS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	 ('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT idfGeoLocation, idfsResidentType, idfsGroundType, idfsGeoLocationType, idfsCountry, idfsRegion, idfsRayon, idfsSettlement, strPostCode, strStreetName, strHouse, strBuilding, strApartment, strDescription, dblDistance, dblLatitude, dblLongitude, dblAccuracy, dblAlignment, blnForeignAddress, strForeignAddress, strShortAddressString FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT idfGeoLocation, idfsResidentType, idfsGroundType, idfsGeoLocationType, idfsCountry, idfsRegion, idfsRayon, idfsSettlement, strPostCode, strStreetName, strHouse, strBuilding, strApartment, strDescription, dblDistance, dblLatitude, dblLongitude, dblAccuracy, dblAlignment, blnForeignAddress, strForeignAddress, strShortAddressString FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET @okToUpdate = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1) AND @okToUpdate = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF(UPDATE(idfGeoLocation))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ELSE IF @okToUpdate = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				UPDATE tgl'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				SET	strAddressString = dbo.FN_GBL_GeoLocationString(''''en-US'''', i.idfGeoLocation, i.idfsGeoLocationType),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					tgl.strShortAddressString = dbo.FN_GBL_GeoLocationShortAddressString(''''en-US'''', i.idfGeoLocation, i.idfsGeoLocationType)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				FROM dbo.tlbGeoLocation AS tgl'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				JOIN inserted AS i ON tgl.idfGeoLocation = i.idfGeoLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				WHERE ISNULL(tgl.strAddressString, '''''''') <> dbo.FN_GBL_GeoLocationString(''''en-US'''', i.idfGeoLocation, i.idfsGeoLocationType)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				OR ISNULL(tgl.strShortAddressString, '''''''') <> dbo.FN_GBL_GeoLocationShortAddressString(''''en-US'''', i.idfGeoLocation, i.idfsGeoLocationType)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				MERGE dbo.tlbGeoLocationTranslation AS [target]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				USING (				'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
							tgl.idfGeoLocation,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
							tltc.idfsLanguage,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
							dbo.FN_GBL_GeoLocationString(tbr.strBaseReferenceCode, i.idfGeoLocation, i.idfsGeoLocationType) AS strTextString,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
							dbo.FN_GBL_GeoLocationShortAddressString(tbr.strBaseReferenceCode, i.idfGeoLocation, i.idfsGeoLocationType) AS strShortAddressString'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						FROM dbo.tlbGeoLocation AS tgl'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						JOIN inserted AS i ON tgl.idfGeoLocation = i.idfGeoLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						CROSS JOIN dbo.trtLanguageToCP tltc	JOIN trtBaseReference tbr ON tbr.idfsBaseReference = tltc.idfsLanguage AND tbr.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						JOIN dbo.tstCustomizationPackage tcp1 ON tcp1.idfCustomizationPackage = tltc.idfCustomizationPackage'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						WHERE tcp1.idfsCountry = dbo.FN_GBL_CustomizationCountry()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					) AS [source]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ON ([target].idfGeoLocation = [source].idfGeoLocation AND [target].idfsLanguage = [source].idfsLanguage)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				WHEN MATCHED AND ('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
									ISNULL([target].strTextString, '''''''') <> ISNULL([source].strTextString, '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
									OR ISNULL([target].strShortAddressString, '''''''') <> ISNULL([source].strShortAddressString, '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
								)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				THEN UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					 SET strTextString = [source].strTextString,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						 strShortAddressString = [source].strShortAddressString;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbGeoLocation_I_Delete] on [dbo].[tlbGeoLocation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfGeoLocation]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfGeoLocation] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfGeoLocation] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbGeoLocation as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfGeoLocation = b.idfGeoLocation;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva Svetlana'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: May 19 2014  2:42PM'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Trigger for correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication and checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[trtGeoLocationReplicationUp]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tlbGeoLocation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   for INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	declare @FilterListedRecordsOnly bit = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	-- get value of global option FilterListedRecordsOnly'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	if exists (select * from tstGlobalSiteOptions tgso where tgso.strName = ''''FilterListedRecordsOnly'''' and tgso.strValue = ''''1'''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		set @FilterListedRecordsOnly = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	else'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		set @FilterListedRecordsOnly = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	if @FilterListedRecordsOnly = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	begin'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--SET @context = dbo.fnGetContext()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		delete  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   ins.idfGeoLocation = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  nID.strTableName = ''''tflGeoLocationFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		insert into dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				''''tflGeoLocationFiltered'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfGeoLocation,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflSiteToSiteGroup as stsg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflSiteGroup sg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on	sg.idfSiteGroup = stsg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.idfsRayon is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.idfsCentralSite is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			left join dbo.tflGeoLocationFiltered as btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on  btf.idfGeoLocation = ins.idfGeoLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and btf.idfSiteGroup = sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  btf.idfGeoLocationFiltered is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		insert into dbo.tflGeoLocationFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfGeoLocationFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfGeoLocation,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfGeoLocation,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				nID.idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on  nID.strTableName = ''''tflGeoLocationFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and nID.idfKey1 = ins.idfGeoLocation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and nID.idfKey2 is not null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			left join dbo.tflGeoLocationFiltered as btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   btf.idfGeoLocationFiltered = nID.NewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  btf.idfGeoLocationFiltered is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		delete  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   ins.idfGeoLocation = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  nID.strTableName = ''''tflGeoLocationFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	end'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE  TRIGGER [dbo].[TR_tlbGeoLocationShared_A_Insert] ON [dbo].[tlbGeoLocationShared]	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF ((TRIGGER_NESTLEVEL()<2) AND (dbo.FN_GBL_TriggersWork()=1))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	UPDATE tgl'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		tgl.strAddressString = dbo.FN_GBL_GeoLocationSharedString(''''en-US'''', i.idfGeoLocationShared, i.idfsGeoLocationType),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		tgl.strShortAddressString = dbo.FN_GBL_GeoLocationSharedShortAddressString(''''en-US'''', i.idfGeoLocationShared, i.idfsGeoLocationType)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM dbo.tlbGeoLocationShared AS tgl'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	JOIN inserted AS i ON tgl.idfGeoLocationShared = i.idfGeoLocationShared'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE ISNULL(tgl.strAddressString, '''''''') <> dbo.FN_GBL_GeoLocationSharedString(''''en-US'''', i.idfGeoLocationShared, i.idfsGeoLocationType)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	OR ISNULL(tgl.strShortAddressString, '''''''') <> dbo.FN_GBL_GeoLocationSharedShortAddressString(''''en-US'''', i.idfGeoLocationShared, i.idfsGeoLocationType)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INSERT INTO dbo.tlbGeoLocationSharedTranslation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		idfGeoLocationShared,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		idfsLanguage,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		strTextString,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		strShortAddressString'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		tgl.idfGeoLocationShared,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		tltc.idfsLanguage,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		dbo.FN_GBL_GeoLocationSharedString(tbr.strBaseReferenceCode, i.idfGeoLocationShared, i.idfsGeoLocationType),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		dbo.FN_GBL_GeoLocationSharedShortAddressString(tbr.strBaseReferenceCode, i.idfGeoLocationShared, i.idfsGeoLocationType)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM dbo.tlbGeoLocationShared AS tgl'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	JOIN inserted AS i ON tgl.idfGeoLocationShared = i.idfGeoLocationShared'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	CROSS JOIN dbo.trtLanguageToCP tltc	JOIN trtBaseReference tbr ON tbr.idfsBaseReference = tltc.idfsLanguage AND tbr.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	LEFT JOIN dbo.tlbGeoLocationSharedTranslation tglt ON tglt.idfGeoLocationShared = tgl.idfGeoLocationShared AND tglt.idfsLanguage = tltc.idfsLanguage'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	JOIN dbo.tstCustomizationPackage tcp1 ON tcp1.idfCustomizationPackage = tltc.idfCustomizationPackage'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE tcp1.idfsCountry = dbo.FN_GBL_CustomizationCountry()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	AND tglt.idfGeoLocationShared IS NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
SET ANSI_NULLS ON'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbGeoLocationShared_A_Update] ON [dbo].[tlbGeoLocationShared]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF(UPDATE(idfGeoLocationShared))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			UPDATE tgl'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SET	tgl.strAddressString = dbo.fnGeoLocationSharedString(''''en-US'''', i.idfGeoLocationShared, i.idfsGeoLocationType),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				tgl.strShortAddressString = dbo.fnGeoLocationSharedShortAddressString(''''en-US'''', i.idfGeoLocationShared, i.idfsGeoLocationType)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			FROM dbo.tlbGeoLocationShared AS tgl'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			JOIN inserted AS i ON tgl.idfGeoLocationShared = i.idfGeoLocationShared'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHERE ISNULL(tgl.strAddressString, '''''''') <> dbo.fnGeoLocationSharedString(''''en-US'''', i.idfGeoLocationShared, i.idfsGeoLocationType)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			OR ISNULL(tgl.strShortAddressString, '''''''') <> dbo.fnGeoLocationSharedShortAddressString(''''en-US'''', i.idfGeoLocationShared, i.idfsGeoLocationType)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			MERGE dbo.tlbGeoLocationSharedTranslation AS [target]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			USING ('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						tgl.idfGeoLocationShared,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						tltc.idfsLanguage,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						dbo.FN_GBL_GeoLocationSharedString(tbr.strBaseReferenceCode, i.idfGeoLocationShared, i.idfsGeoLocationType) as strTextString,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						dbo.FN_GBL_GeoLocationShortAddressString(tbr.strBaseReferenceCode, i.idfGeoLocationShared, i.idfsGeoLocationType) as strShortAddressString'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					FROM dbo.tlbGeoLocationShared AS tgl'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					JOIN inserted AS i ON tgl.idfGeoLocationShared = i.idfGeoLocationShared'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					CROSS JOIN dbo.trtLanguageToCP tltc	JOIN dbo.trtBaseReference tbr ON tbr.idfsBaseReference = tltc.idfsLanguage AND tbr.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					JOIN dbo.tstCustomizationPackage tcp1 ON tcp1.idfCustomizationPackage = tltc.idfCustomizationPackage'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					WHERE tcp1.idfsCountry = dbo.FN_GBL_CustomizationCountry()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				) AS [source]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON ([target].idfGeoLocationShared = [source].idfGeoLocationShared AND [target].idfsLanguage = [source].idfsLanguage)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN MATCHED AND ('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
								ISNULL([target].strTextString, '''''''') <> ISNULL([source].strTextString, '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
								OR ISNULL([target].strShortAddressString, '''''''') <> ISNULL([source].strShortAddressString, '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
							)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			THEN UPDATE SET strTextString = [source].strTextString	,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
							strShortAddressString = [source].strShortAddressString;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbGeoLocationShared_I_Delete] on [dbo].[tlbGeoLocationShared]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfGeoLocationShared]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfGeoLocationShared] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfGeoLocationShared] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbGeoLocationShared as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfGeoLocationShared = b.idfGeoLocationShared;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbGeoLocationSharedTranslation_A_Update] ON [dbo].[tlbGeoLocationSharedTranslation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfGeoLocationShared) OR UPDATE(idfsLanguage)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbGeoLocationTranslation_A_Update] ON [dbo].[tlbGeoLocationTranslation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfGeoLocation) OR UPDATE(idfsLanguage)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbHerd_A_Update] ON [dbo].[tlbHerd]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfHerd))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbHerd_I_Delete] on [dbo].[tlbHerd]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfHerd]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfHerd] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfHerd] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbHerd as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfHerd = b.idfHerd;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbHerdActual_A_Update] ON [dbo].[tlbHerdActual]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfHerdActual))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbHerdActual_I_Delete] on [dbo].[tlbHerdActual]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfHerdActual]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfHerdActual] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfHerdActual] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbHerdActual as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfHerdActual = b.idfHerdActual;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbHuman_A_Update] ON [dbo].[tlbHuman]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF(UPDATE(idfHuman))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ELSE -- calculate name'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			IF  UPDATE(strLastName) or UPDATE(strSecondName) or UPDATE(strFirstName)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				  UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				  SET strCalculatedHumanName = ISNULL(HumanFromCase.strLastName + '''' '''', '''''''') + ISNULL(HumanFromCase.strFirstName + '''' '''', '''''''') + ISNULL(HumanFromCase.strSecondName, '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				  FROM tlbMaterial a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				  INNER JOIN inserted HumanFromCase ON  HumanFromCase.idfHuman=a.idfHuman'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				  WHERE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				  EXISTS (SELECT idfAnimal FROM dbo.tlbAnimal b WHERE b.idfAnimal = a.idfAnimal AND b.intRowStatus = 0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				  OR'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				  EXISTS (SELECT c.idfSpecies FROM dbo.tlbSpecies c WHERE c.idfSpecies = a.idfSpecies AND c.intRowStatus =0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				  OR'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				  EXISTS (SELECT d.idfSpecies FROM dbo.tlbAnimal d WHERE d.idfSpecies = a.idfSpecies AND  d.intRowStatus  =0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				  OR'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				  EXISTS (SELECT e.idfHerd FROM dbo.tlbSpecies e WHERE e.idfHerd = a.idfSpecies AND e.intRowStatus = 0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				  OR'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				  EXISTS (SELECT f.idfFarm FROM dbo.tlbFarm f WHERE f.idfHuman = a.idfHuman)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbHuman_I_Delete] on [dbo].[tlbHuman]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfHuman]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfHuman] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfHuman] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbHuman as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfHuman = b.idfHuman;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva Svetlana'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: May 19 2014  2:44PM'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Trigger for correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication and checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[trtHumanReplicationUp]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tlbHuman]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   for INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	declare @FilterListedRecordsOnly bit = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	-- get value of global option FilterListedRecordsOnly'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	if exists (select * from tstGlobalSiteOptions tgso where tgso.strName = ''''FilterListedRecordsOnly'''' and tgso.strValue = ''''1'''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		set @FilterListedRecordsOnly = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	else'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		set @FilterListedRecordsOnly = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	if @FilterListedRecordsOnly = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	begin'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--SET @context = dbo.fnGetContext()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		delete  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   ins.idfHuman = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  nID.strTableName = ''''tflHumanFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		insert into dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				''''tflHumanFiltered'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfHuman,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflSiteToSiteGroup as stsg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflSiteGroup sg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on	sg.idfSiteGroup = stsg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.idfsRayon is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.idfsCentralSite is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			left join dbo.tflHumanFiltered as btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on  btf.idfHuman = ins.idfHuman'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and btf.idfSiteGroup = sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  btf.idfHumanFiltered is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		insert into dbo.tflHumanFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfHumanFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfHuman,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfHuman,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				nID.idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on  nID.strTableName = ''''tflHumanFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and nID.idfKey1 = ins.idfHuman'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and nID.idfKey2 is not null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			left join dbo.tflHumanFiltered as btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   btf.idfHumanFiltered = nID.NewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  btf.idfHumanFiltered is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		delete  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   ins.idfHuman = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  nID.strTableName = ''''tflHumanFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	end'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbHumanActual_A_Update] ON [dbo].[tlbHumanActual]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfHumanActual))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbHumanActual_I_Delete] on [dbo].[tlbHumanActual]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfHumanActual]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfHumanActual] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfHumanActual] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbHumanActual as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfHumanActual = b.idfHumanActual;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbHumanCase_A_Update] ON [dbo].[tlbHumanCase]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfHumanCase))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE  TRIGGER [dbo].[TR_tlbHumanCase_ChangeArchiveDate] on [dbo].[tlbHumanCase]	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR INSERT, UPDATE, DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF (dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @dateModify DATETIME'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfOutbreakOld BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfOutbreakNew BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		@idfOutbreakOld = ISNULL(idfOutbreak, 0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM DELETED'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		@idfOutbreakNew = ISNULL(idfOutbreak, 0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM INSERTED'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET @dateModify = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfOutbreakOld > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbOutbreak'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfOutbreak = @idfOutbreakOld'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		AND ISNULL(CONVERT(nvarchar(8), datModificationForArchiveDate, 112), '''''''') <> ISNULL(CONVERT(nvarchar(8), @dateModify, 112), '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfOutbreakNew > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbOutbreak'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfOutbreak = @idfOutbreakNew'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		AND ISNULL(CONVERT(nvarchar(8), datModificationForArchiveDate, 112), '''''''') <> ISNULL(CONVERT(nvarchar(8), @dateModify, 112), '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbHumanCase_I_Delete] on [dbo].[tlbHumanCase]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfHumanCase]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfHumanCase] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfHumanCase] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbHumanCase as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfHumanCase = b.idfHumanCase;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva Svetlana'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: May 19 2014  2:43PM'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Trigger for correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication and checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[trtHumanCaseReplicationUp]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tlbHumanCase]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   for INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	--DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	--SET @context = dbo.fnGetContext()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	delete  nID	from  dbo.tflNewID as nID		inner join inserted as ins		on   ins.idfHumanCase = nID.idfKey1	where  nID.strTableName = ''''tflHumanCaseFiltered''''	insert into dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)	select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			''''tflHumanCaseFiltered'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ins.idfHumanCase,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			sg.idfSiteGroup	from  inserted as ins		inner join dbo.tflSiteToSiteGroup as stsg		on   stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				inner join dbo.tflSiteGroup sg		on	sg.idfSiteGroup = stsg.idfSiteGroup			and sg.idfsRayon is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			and sg.idfsCentralSite is null			and sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					left join dbo.tflHumanCaseFiltered as btf		on  btf.idfHumanCase = ins.idfHumanCase			and btf.idfSiteGroup = sg.idfSiteGroup	where  btf.idfHumanCaseFiltered is null	insert into dbo.tflHumanCaseFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfHumanCaseFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfHumanCase,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)	select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ins.idfHumanCase,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			nID.idfKey2	from  inserted as ins		inner join dbo.tflNewID as nID		on  nID.strTableName = ''''tflHumanCaseFiltered''''			and nID.idfKey1 = ins.idfHumanCase			and nID.idfKey2 is not null		left join dbo.tflHumanCaseFiltered as btf		on   btf.idfHumanCaseFiltered = nID.NewID	where  btf.idfHumanCaseFiltered is null	delete  nID	from  dbo.tflNewID as nID		inner join inserted as ins		on   ins.idfHumanCase = nID.idfKey1	where  nID.strTableName = ''''tflHumanCaseFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMaterial_A_Update] ON [dbo].[tlbMaterial]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfMaterial))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMaterial_Calculate]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
ON [dbo].[tlbMaterial]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR INSERT, UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
    IF dbo.FN_GBL_TriggersWork() = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
       AND ('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 UPDATE(idfHumanCase)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 OR UPDATE(idfVetCase)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 OR UPDATE(idfMonitoringSession)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 OR UPDATE(idfVectorSurveillanceSession)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
    )'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
    BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 SET strCalculatedCaseID = CASE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  WHEN a.idfMonitoringSession IS NOT NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
      dbo.tlbMonitoringSession.strMonitoringSessionID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  WHEN a.idfVectorSurveillanceSession IS NOT NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
      dbo.tlbVectorSurveillanceSession.strSessionID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  WHEN a.idfHumanCase IS NOT NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
      CASE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   WHEN dbo.tlbHumanCase.idfOutbreak IS NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
       dbo.tlbHumanCase.strCaseID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
       humOCR.strOutbreakCaseID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
      END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  WHEN a.idfVetCase IS NOT NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
      CASE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   WHEN dbo.tlbVetCase.idfOutbreak IS NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
       dbo.tlbVetCase.strCaseID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
       vetOCR.strOutbreakCaseID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
      END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 FROM dbo.tlbMaterial a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     INNER JOIN inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  ON inserted.idfMaterial = a.idfMaterial'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     LEFT JOIN dbo.tlbHumanCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  ON tlbHumanCase.idfHumanCase = a.idfHumanCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 AND dbo.tlbHumanCase.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     LEFT JOIN dbo.OutbreakCaseReport humOCR'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  ON humOCR.idfHumanCase = dbo.tlbHumanCase.idfHumanCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     LEFT JOIN dbo.tlbVetCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  ON tlbVetCase.idfVetCase = a.idfVetCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 AND dbo.tlbVetCase.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     LEFT JOIN dbo.OutbreakCaseReport vetOCR'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  ON vetOCR.idfVetCase = dbo.tlbVetCase.idfVetCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     LEFT JOIN dbo.tlbMonitoringSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  ON dbo.tlbMonitoringSession.idfMonitoringSession = a.idfMonitoringSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 AND dbo.tlbMonitoringSession.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     LEFT JOIN dbo.tlbVectorSurveillanceSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  ON dbo.tlbVectorSurveillanceSession.idfVectorSurveillanceSession = a.idfVectorSurveillanceSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 AND dbo.tlbVectorSurveillanceSession.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 SET strCalculatedHumanName = CASE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     WHEN a.idfSpecies IS NOT NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   AND a.idfVetCase IS NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   AND a.idfMonitoringSession IS NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  CASE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
      WHEN dbo.tlbFarm.idfHuman IS NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   CASE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   WHEN dbo.tlbFarm.strNationalName IS NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
    dbo.tlbFarm.strFarmCode'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
    dbo.tlbFarm.strNationalName'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
      WHEN HumanFromCase.strLastName IS NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   CASE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   WHEN dbo.tlbFarm.strNationalName IS NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
    dbo.tlbFarm.strFarmCode'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
    dbo.tlbFarm.strNationalName'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
      ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ISNULL(HumanFromCase.strLastName, '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   + ISNULL('''', '''' + HumanFromCase.strFirstName + '''' '''', '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   + ISNULL(HumanFromCase.strSecondName, '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
    WHEN a.idfSpecies IS NOT NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   AND a.idfVetCase IS NOT NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   OR a.idfMonitoringSession IS NOT NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   CASE WHEN dbo.tlbFarm.idfHuman IS NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   CASE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   WHEN dbo.tlbFarm.strNationalName IS NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
    dbo.tlbFarm.strFarmCode'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
    dbo.tlbFarm.strNationalName'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
      WHEN HumanFromCase.strLastName IS NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   CASE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   WHEN dbo.tlbFarm.strNationalName IS NULL THEN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
    dbo.tlbFarm.strFarmCode'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
    dbo.tlbFarm.strNationalName'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
      ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ISNULL(HumanFromCase.strLastName, '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   + ISNULL('''', '''' + HumanFromCase.strFirstName + '''' '''', '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   + ISNULL(HumanFromCase.strSecondName, '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  ISNULL(HumanFromCase.strLastName, '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  + ISNULL('''', '''' + HumanFromCase.strFirstName + '''' '''', '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  + ISNULL(HumanFromCase.strSecondName, '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 FROM dbo.tlbMaterial a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     INNER JOIN inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  ON inserted.idfMaterial = a.idfMaterial'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     LEFT JOIN dbo.tlbAnimal'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  ON dbo.tlbAnimal.idfAnimal = a.idfAnimal'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 AND dbo.tlbAnimal.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     LEFT JOIN dbo.tlbSpecies'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  ON ('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     dbo.tlbSpecies.idfSpecies = a.idfSpecies'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     OR dbo.tlbSpecies.idfSpecies = dbo.tlbAnimal.idfSpecies'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 )'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 AND dbo.tlbSpecies.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     LEFT JOIN dbo.tlbHerd'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  ON dbo.tlbHerd.idfHerd = dbo.tlbSpecies.idfHerd'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 AND dbo.tlbHerd.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     LEFT JOIN dbo.tlbFarm'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  ON dbo.tlbFarm.idfFarm = dbo.tlbHerd.idfFarm'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 AND dbo.tlbFarm.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
     LEFT JOIN dbo.tlbHuman HumanFromCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
  ON HumanFromCase.idfHuman = tlbFarm.idfHuman'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
 OR HumanFromCase.idfHuman = a.idfHuman'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
    END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE  TRIGGER [dbo].[TR_tlbMaterial_ChangeArchiveDate] on [dbo].[tlbMaterial]	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR INSERT, UPDATE, DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
SET @context = dbo.fnGetContext()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF (dbo.FN_GBL_TriggersWork() =1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @dateModify DATETIME'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfHumanCase BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfVetCase BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfMonitoringSession BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfVectorSurveillanceSession BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (SELECT COUNT(*) FROM INSERTED) > 0	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@idfHumanCase = ISNULL(idfHumanCase, 0),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@idfVetCase = ISNULL(idfVetCase, 0),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@idfMonitoringSession = ISNULL(idfMonitoringSession, 0),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@idfVectorSurveillanceSession = ISNULL(idfVectorSurveillanceSession, 0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM INSERTED'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@idfHumanCase = ISNULL(idfHumanCase, 0),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@idfVetCase = ISNULL(idfVetCase, 0),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@idfMonitoringSession = ISNULL(idfMonitoringSession, 0),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@idfVectorSurveillanceSession = ISNULL(idfVectorSurveillanceSession, 0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM DELETED'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET @dateModify = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfHumanCase > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbHumanCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfHumanCase = @idfHumanCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		AND ISNULL(CONVERT(nvarchar(8), datModificationForArchiveDate, 112), '''''''') <> ISNULL(CONVERT(nvarchar(8), @dateModify, 112), '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfVetCase > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbVetCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfVetCase = @idfVetCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		AND ISNULL(CONVERT(nvarchar(8), datModificationForArchiveDate, 112), '''''''') <> ISNULL(CONVERT(nvarchar(8), @dateModify, 112), '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfMonitoringSession > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbMonitoringSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfMonitoringSession = @idfMonitoringSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		AND ISNULL(CONVERT(nvarchar(8), datModificationForArchiveDate, 112), '''''''') <> ISNULL(CONVERT(nvarchar(8), @dateModify, 112), '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfVectorSurveillanceSession > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbVectorSurveillanceSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfVectorSurveillanceSession = @idfVectorSurveillanceSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		AND ISNULL(CONVERT(nvarchar(8), datModificationForArchiveDate, 112), '''''''') <> ISNULL(CONVERT(nvarchar(8), @dateModify, 112), '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMaterial_I_Delete] on [dbo].[tlbMaterial]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfMaterial]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMaterial] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMaterial] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datEnteringDate = getdate(),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbMaterial as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfMaterial = b.idfMaterial;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMonitoringSession_A_Update] ON [dbo].[tlbMonitoringSession]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF UPDATE(idfMonitoringSession)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SET datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			FROM dbo.tlbMonitoringSession AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			INNER JOIN inserted AS b ON a.idfMonitoringSession = b.idfMonitoringSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMonitoringSession_I_Delete] on [dbo].[tlbMonitoringSession]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfMonitoringSession]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMonitoringSession] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMonitoringSession] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbMonitoringSession as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfMonitoringSession = b.idfMonitoringSession;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva Svetlana'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: May 19 2014  2:45PM'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Trigger for correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication and checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[trtMonitoringSessionReplicationUp]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tlbMonitoringSession]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   for INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	--DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	--SET @context = dbo.fnGetContext()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	delete  nID	from  dbo.tflNewID as nID		inner join inserted as ins		on   ins.idfMonitoringSession = nID.idfKey1	where  nID.strTableName = ''''tflMonitoringSessionFiltered''''	insert into dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)	select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			''''tflMonitoringSessionFiltered'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ins.idfMonitoringSession,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			sg.idfSiteGroup	from  inserted as ins		inner join dbo.tflSiteToSiteGroup as stsg		on   stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				inner join dbo.tflSiteGroup sg		on	sg.idfSiteGroup = stsg.idfSiteGroup			and sg.idfsRayon is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			and sg.idfsCentralSite is null			and sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					left join dbo.tflMonitoringSessionFiltered as btf		on  btf.idfMonitoringSession = ins.idfMonitoringSession			and btf.idfSiteGroup = sg.idfSiteGroup	where  btf.idfMonitoringSessionFiltered is null	insert into dbo.tflMonitoringSessionFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfMonitoringSessionFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfMonitoringSession,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)	select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ins.idfMonitoringSession,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			nID.idfKey2	from  inserted as ins		inner join dbo.tflNewID as nID		on  nID.strTableName = ''''tflMonitoringSessionFiltered''''			and nID.idfKey1 = ins.idfMonitoringSession			and nID.idfKey2 is not null		left join dbo.tflMonitoringSessionFiltered as btf		on   btf.idfMonitoringSessionFiltered = nID.NewID	where  btf.idfMonitoringSessionFiltered is null	delete  nID	from  dbo.tflNewID as nID		inner join inserted as ins		on   ins.idfMonitoringSession = nID.idfKey1	where  nID.strTableName = ''''tflMonitoringSessionFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMonitoringSessionAction_A_Update] ON [dbo].[tlbMonitoringSessionAction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfMonitoringSessionAction))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMonitoringSessionAction_I_Delete] on [dbo].[tlbMonitoringSessionAction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfMonitoringSessionAction]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMonitoringSessionAction] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMonitoringSessionAction] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbMonitoringSessionAction as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfMonitoringSessionAction = b.idfMonitoringSessionAction;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMonitoringSessionSummary_A_Update] ON [dbo].[tlbMonitoringSessionSummary]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfMonitoringSessionSummary))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMonitoringSessionSummary_I_Delete] on [dbo].[tlbMonitoringSessionSummary]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfMonitoringSessionSummary]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMonitoringSessionSummary] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMonitoringSessionSummary] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbMonitoringSessionSummary as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfMonitoringSessionSummary = b.idfMonitoringSessionSummary;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMonitoringSessionSummaryDiagnosis_A_Update] ON [dbo].[tlbMonitoringSessionSummaryDiagnosis]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfMonitoringSessionSummary))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMonitoringSessionSummaryDiagnosis_I_Delete] on [dbo].[tlbMonitoringSessionSummaryDiagnosis]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfMonitoringSessionSummary], [idfsDiagnosis]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMonitoringSessionSummary], [idfsDiagnosis] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMonitoringSessionSummary], [idfsDiagnosis] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbMonitoringSessionSummaryDiagnosis as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfMonitoringSessionSummary = b.idfMonitoringSessionSummary'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.idfsDiagnosis = b.idfsDiagnosis;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMonitoringSessionSummarySample_A_Update] ON [dbo].[tlbMonitoringSessionSummarySample]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfMonitoringSessionSummary) OR UPDATE(idfsSampleType)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMonitoringSessionSummarySample_I_Delete] on [dbo].[tlbMonitoringSessionSummarySample]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfMonitoringSessionSummary], [idfsSampleType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMonitoringSessionSummary], [idfsSampleType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMonitoringSessionSummary], [idfsSampleType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbMonitoringSessionSummarySample as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfMonitoringSessionSummary = b.idfMonitoringSessionSummary'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.idfsSampleType = b.idfsSampleType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMonitoringSessionToDiagnosis_A_Update] ON [dbo].[tlbMonitoringSessionToDiagnosis]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfMonitoringSessionToDiagnosis))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbMonitoringSessionToDiagnosis_I_Delete] on [dbo].[tlbMonitoringSessionToDiagnosis]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfMonitoringSessionToDiagnosis]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMonitoringSessionToDiagnosis] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMonitoringSessionToDiagnosis] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbMonitoringSessionToDiagnosis as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfMonitoringSessionToDiagnosis = b.idfMonitoringSessionToDiagnosis;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbObservation_A_Update] ON [dbo].[tlbObservation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfObservation))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbObservation_I_Delete] on [dbo].[tlbObservation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfObservation]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfObservation] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfObservation] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbObservation as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfObservation = b.idfObservation;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva Svetlana'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: May 19 2014  2:47PM'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Trigger for correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication and checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[trtObservationReplicationUp]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tlbObservation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   for INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	declare @FilterListedRecordsOnly bit = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	-- get value of global option FilterListedRecordsOnly'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	if exists (select * from tstGlobalSiteOptions tgso where tgso.strName = ''''FilterListedRecordsOnly'''' and tgso.strValue = ''''1'''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		set @FilterListedRecordsOnly = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	else'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		set @FilterListedRecordsOnly = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	if @FilterListedRecordsOnly = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	begin'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--SET @context = dbo.fnGetContext()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		delete  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   ins.idfObservation = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  nID.strTableName = ''''tflObservationFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		insert into dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				''''tflObservationFiltered'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfObservation,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflSiteToSiteGroup as stsg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflSiteGroup sg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on	sg.idfSiteGroup = stsg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.idfsRayon is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.idfsCentralSite is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			left join dbo.tflObservationFiltered as btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on  btf.idfObservation = ins.idfObservation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and btf.idfSiteGroup = sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  btf.idfObservationFiltered is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		insert into dbo.tflObservationFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfObservationFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfObservation,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfObservation,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				nID.idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on  nID.strTableName = ''''tflObservationFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and nID.idfKey1 = ins.idfObservation'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and nID.idfKey2 is not null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			left join dbo.tflObservationFiltered as btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   btf.idfObservationFiltered = nID.NewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  btf.idfObservationFiltered is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		delete  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   ins.idfObservation = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  nID.strTableName = ''''tflObservationFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	end'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbOffice_A_Update] ON [dbo].[tlbOffice]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfOffice))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbOffice_I_Delete] on [dbo].[tlbOffice]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfOffice]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfOffice] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfOffice] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbOffice as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfOffice = b.idfOffice;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbOutbreak_A_Update] ON [dbo].[tlbOutbreak]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF UPDATE(idfOutbreak)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SET datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			FROM dbo.tlbOutbreak AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			INNER JOIN INSERTED AS b ON a.idfOutbreak = b.idfOutbreak'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbOutbreak_I_Delete] ON [dbo].[tlbOutbreak]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfOutbreak]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfOutbreak] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfOutbreak] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET	intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM	 dbo.tlbOutbreak AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords AS b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfOutbreak = b.idfOutbreak;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva Svetlana'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: May 19 2014  2:47PM'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Trigger FOR correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication AND checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[trtOutbreakReplicationUp]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tlbOutbreak]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   FOR INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	--DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	--SET @context = dbo.FN_GBL_CONTEXT_GET()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DELETE  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM	dbo.tflNewID AS nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INNER JOIN INSERTED AS ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ON		ins.idfOutbreak = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE  nID.strTableName = ''''tflOutbreakFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INTO	dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			''''tflOutbreakFiltered'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ins.idfOutbreak,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM  INSERTED AS ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INNER JOIN dbo.tflSiteToSiteGroup AS stsg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ON		stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INNER JOIN dbo.tflSiteGroup sg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ON		sg.idfSiteGroup = stsg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	AND		sg.idfsRayon IS NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	AND		sg.idfsCentralSite IS NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	AND		sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	LEFT JOIN dbo.tflOutbreakFiltered AS btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ON		btf.idfOutbreak = ins.idfOutbreak'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	AND		btf.idfSiteGroup = sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE	btf.idfOutbreakFiltered IS NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INTO	dbo.tflOutbreakFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfOutbreakFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfOutbreak,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ins.idfOutbreak,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			nID.idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM  INSERTED AS ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INNER JOIN dbo.tflNewID AS nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ON		nID.strTableName = ''''tflOutbreakFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	AND		nID.idfKey1 = ins.idfOutbreak'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	AND		nID.idfKey2 IS not NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	LEFT JOIN dbo.tflOutbreakFiltered AS btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ON		btf.idfOutbreakFiltered = nID.NewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE	btf.idfOutbreakFiltered IS NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DELETE  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM	dbo.tflNewID AS nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INNER JOIN INSERTED AS ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ON		ins.idfOutbreak = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE	nID.strTableName = ''''tflOutbreakFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbOutbreakCaseMonitoring_A_Update] ON [dbo].[tlbOutbreakCaseMonitoring]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE([idfOutbreakCaseMonitoring]))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbOutbreakCaseMonitoring_I_Delete] on [dbo].[tlbOutbreakCaseMonitoring]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfOutbreakCaseMonitoring]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfOutbreakCaseMonitoring] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfOutbreakCaseMonitoring] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[tlbOutbreakCaseMonitoring] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[idfOutbreakCaseMonitoring] = b.[idfOutbreakCaseMonitoring];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbOutbreakNote_A_Update] ON [dbo].[tlbOutbreakNote]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfOutbreakNote))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbOutbreakNote_I_Delete] on [dbo].[tlbOutbreakNote]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfOutbreakNote]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfOutbreakNote] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfOutbreakNote] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.[tlbOutbreakNote] as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[idfOutbreakNote] = b.[idfOutbreakNote];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbPensideTest_A_Update] ON [dbo].[tlbPensideTest]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfPensideTest))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbPensideTest_I_Delete] on [dbo].[tlbPensideTest]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfPensideTest]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfPensideTest] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfPensideTest] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbPensideTest as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfPensideTest = b.idfPensideTest;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbPerson_A_Update] ON [dbo].[tlbPerson]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfPerson))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbPerson_I_Delete] on [dbo].[tlbPerson]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfPerson]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfPerson] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfPerson] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbPerson as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfPerson = b.idfPerson;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfPerson]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfPerson] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfPerson] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbEmployee as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfEmployee = b.idfPerson;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbPostalCode_A_Update] ON [dbo].[tlbPostalCode]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfPostalCode))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbPostalCode_I_Delete] on [dbo].[tlbPostalCode]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfPostalCode]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfPostalCode] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfPostalCode] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbPostalCode as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfPostalCode = b.idfPostalCode;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbReportForm_A_Update] ON [dbo].[tlbReportForm]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfReportForm))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbReportForm_I_Delete] ON [dbo].[tlbReportForm]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords(idfReportForm) AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT idfReportForm FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT idfReportForm FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbReportForm AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords AS b ON a.idfReportForm = b.idfReportForm;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbSpecies_A_Update] ON [dbo].[tlbSpecies]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSpecies))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbSpecies_I_Delete] on [dbo].[tlbSpecies]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfSpecies]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSpecies] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSpecies] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbSpecies as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfSpecies = b.idfSpecies;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbSpeciesActual_A_Update] ON [dbo].[tlbSpeciesActual]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSpeciesActual))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbSpeciesActual_I_Delete] on [dbo].[tlbSpeciesActual]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfSpeciesActual]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSpeciesActual] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSpeciesActual] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbSpeciesActual as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfSpeciesActual = b.idfSpeciesActual;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbStatistic_A_Update] ON [dbo].[tlbStatistic]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfStatistic))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbStatistic_I_Delete] on [dbo].[tlbStatistic]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfStatistic]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfStatistic] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfStatistic] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbStatistic as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfStatistic = b.idfStatistic;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbStreet_A_Update] ON [dbo].[tlbStreet]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfStreet))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbStreet_I_Delete] on [dbo].[tlbStreet]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfStreet]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfStreet] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfStreet] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbStreet as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfStreet = b.idfStreet;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbTestAmendmentHistory_A_Update] ON [dbo].[tlbTestAmendmentHistory]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfTestAmendmentHistory))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbTestAmendmentHistory_I_Delete] on [dbo].[tlbTestAmendmentHistory]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfTestAmendmentHistory]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfTestAmendmentHistory] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfTestAmendmentHistory] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbTestAmendmentHistory as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfTestAmendmentHistory = b.idfTestAmendmentHistory;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbTesting_A_Update] ON [dbo].[tlbTesting]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfTesting))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbTesting_ChangeArchiveDate] ON [dbo].[tlbTesting]	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR INSERT, UPDATE, DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF (dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfMaterial BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfBatchTest BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @dateModify DATETIME'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (SELECT COUNT(*) FROM INSERTED) > 0	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@idfMaterial = ISNULL(idfMaterial, 0),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@idfBatchTest = ISNULL(@idfBatchTest, 0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM INSERTED'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@idfMaterial = ISNULL(idfMaterial, 0),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			@idfBatchTest = ISNULL(@idfBatchTest, 0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM DELETED'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfHumanCase BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfVetCase BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfMonitoringSession BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfVectorSurveillanceSession BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		@idfHumanCase = ISNULL(idfHumanCase, 0),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		@idfVetCase = ISNULL(idfVetCase, 0),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		@idfMonitoringSession = ISNULL(idfMonitoringSession, 0),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		@idfVectorSurveillanceSession = ISNULL(idfVectorSurveillanceSession, 0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM tlbMaterial'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE idfMaterial = @idfMaterial		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET @dateModify = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfHumanCase > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbHumanCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfHumanCase = @idfHumanCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		AND ISNULL(CONVERT(nvarchar(8), datModificationForArchiveDate, 112), '''''''') <> ISNULL(CONVERT(nvarchar(8), @dateModify, 112), '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfVetCase > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbVetCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfVetCase = @idfVetCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		AND ISNULL(CONVERT(nvarchar(8), datModificationForArchiveDate, 112), '''''''') <> ISNULL(CONVERT(nvarchar(8), @dateModify, 112), '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfMonitoringSession > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbMonitoringSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfMonitoringSession = @idfMonitoringSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		AND ISNULL(CONVERT(nvarchar(8), datModificationForArchiveDate, 112), '''''''') <> ISNULL(CONVERT(nvarchar(8), @dateModify, 112), '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfVectorSurveillanceSession > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbVectorSurveillanceSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfVectorSurveillanceSession = @idfVectorSurveillanceSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		AND ISNULL(CONVERT(nvarchar(8), datModificationForArchiveDate, 112), '''''''') <> ISNULL(CONVERT(nvarchar(8), @dateModify, 112), '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfBatchTest > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbBatchTest'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfBatchTest = @idfBatchTest'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		AND ISNULL(CONVERT(nvarchar(8), datModificationForArchiveDate, 112), '''''''') <> ISNULL(CONVERT(nvarchar(8), @dateModify, 112), '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbTesting_I_Delete] on [dbo].[tlbTesting]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfTesting]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfTesting] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfTesting] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbTesting as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfTesting = b.idfTesting;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbTestValidation_A_Update] ON [dbo].[tlbTestValidation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfTestValidation))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbTestValidation_I_Delete] on [dbo].[tlbTestValidation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfTestValidation]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfTestValidation] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfTestValidation] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbTestValidation as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfTestValidation = b.idfTestValidation;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbTransferOUT_A_Update] ON [dbo].[tlbTransferOUT]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF UPDATE(idfTransferOut)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SET datModificationForArchiveDate = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			FROM dbo.tlbTransferOUT AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			INNER JOIN inserted AS b ON a.idfTransferOut = b.idfTransferOut'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbTransferOUT_I_Delete] on [dbo].[tlbTransferOUT]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfTransferOut]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfTransferOut] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfTransferOut] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbTransferOUT as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfTransferOut = b.idfTransferOut;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva Svetlana'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: May 19 2014  3:05PM'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Trigger for correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication and checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[trtTransferOutReplicationUp]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tlbTransferOUT]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   for INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	declare @FilterListedRecordsOnly bit = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	-- get value of global option FilterListedRecordsOnly'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	if exists (select * from tstGlobalSiteOptions tgso where tgso.strName = ''''FilterListedRecordsOnly'''' and tgso.strValue = ''''1'''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		set @FilterListedRecordsOnly = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	else'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		set @FilterListedRecordsOnly = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	if @FilterListedRecordsOnly = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	begin'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--SET @context = dbo.fnGetContext()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		delete  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   ins.idfTransferOut = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  nID.strTableName = ''''tflTransferOutFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		insert into dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				''''tflTransferOutFiltered'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfTransferOut,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflSiteToSiteGroup as stsg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflSiteGroup sg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on	sg.idfSiteGroup = stsg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.idfsRayon is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.idfsCentralSite is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			left join dbo.tflTransferOutFiltered as btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on  btf.idfTransferOut = ins.idfTransferOut'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and btf.idfSiteGroup = sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  btf.idfTransferOutFiltered is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		insert into dbo.tflTransferOutFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfTransferOutFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfTransferOut,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfTransferOut,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				nID.idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on  nID.strTableName = ''''tflTransferOutFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and nID.idfKey1 = ins.idfTransferOut'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and nID.idfKey2 is not null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			left join dbo.tflTransferOutFiltered as btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   btf.idfTransferOutFiltered = nID.NewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  btf.idfTransferOutFiltered is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		delete  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   ins.idfTransferOut = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  nID.strTableName = ''''tflTransferOutFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	end'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbTransferOutMaterial_A_Update] ON [dbo].[tlbTransferOutMaterial]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfTransferOut) OR UPDATE(idfMaterial)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbTransferOutMaterial_I_Delete] on [dbo].[tlbTransferOutMaterial]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfMaterial], [idfTransferOut]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMaterial], [idfTransferOut] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMaterial], [idfTransferOut] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbTransferOutMaterial as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfMaterial = b.idfMaterial'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		and a.idfTransferOut = b.idfTransferOut;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVaccination_A_Update] ON [dbo].[tlbVaccination]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfVaccination))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVaccination_I_Delete] on [dbo].[tlbVaccination]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfVaccination]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfVaccination] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfVaccination] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbVaccination as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfVaccination = b.idfVaccination;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVector_A_Update] ON [dbo].[tlbVector]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfVector))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVector_I_Delete] on [dbo].[tlbVector]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfVector]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfVector] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfVector] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbVector as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfVector = b.idfVector;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVectorSurveillanceSession_A_Update] ON [dbo].[tlbVectorSurveillanceSession]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF UPDATE(idfVectorSurveillanceSession)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SET datModificationForArchiveDate = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			FROM dbo.tlbVectorSurveillanceSession AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			INNER JOIN INSERTED AS b ON a.idfVectorSurveillanceSession = b.idfVectorSurveillanceSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE  TRIGGER [dbo].[TR_tlbVectorSurveillanceSession_ChangeArchiveDate] ON [dbo].[tlbVectorSurveillanceSession]	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR INSERT, UPDATE, DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF (dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @dateModify DATETIME'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfOutbreakOld BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfOutbreakNew BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		@idfOutbreakOld = ISNULL(idfOutbreak, 0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM DELETED'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		@idfOutbreakNew = ISNULL(idfOutbreak, 0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM INSERTED'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET @dateModify = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfOutbreakOld > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbOutbreak'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfOutbreak = @idfOutbreakOld'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfOutbreakNew > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbOutbreak'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfOutbreak = @idfOutbreakNew'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVectorSurveillanceSession_I_Delete] ON [dbo].[tlbVectorSurveillanceSession]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfVectorSurveillanceSession]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfVectorSurveillanceSession] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfVectorSurveillanceSession] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbVectorSurveillanceSession AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords AS b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfVectorSurveillanceSession = b.idfVectorSurveillanceSession;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva Svetlana'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: May 19 2014  3:06PM'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	TRIGGER for correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication AND checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[trtVectorSurveillanceSessionReplicationUp]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tlbVectorSurveillanceSession]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   for INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	--DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	--SET @context = dbo.FN_GBL_CONTEXT_GET()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DELETE  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM  dbo.tflNewID AS nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN INSERTED AS ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ON   ins.idfVectorSurveillanceSession = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE  nID.strTableName = ''''tflVectorSurveillanceSessionFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INTO	 dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT	''''tflVectorSurveillanceSessionFiltered'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ins.idfVectorSurveillanceSession,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM  INSERTED AS ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INNER JOIN dbo.tflSiteToSiteGroup AS stsg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ON   stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN dbo.tflSiteGroup sg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ON	sg.idfSiteGroup = stsg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND sg.idfsRayon IS NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND sg.idfsCentralSite IS NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	LEFT JOIN	dbo.tflVectorSurveillanceSessionFiltered AS btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ON			btf.idfVectorSurveillanceSession = ins.idfVectorSurveillanceSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	AND			btf.idfSiteGroup = sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE		btf.idfVectorSurveillanceSessionFiltered IS NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INSERT INTO dbo.tflVectorSurveillanceSessionFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfVectorSurveillanceSessionFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfVectorSurveillanceSession,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT 	nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ins.idfVectorSurveillanceSession,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			nID.idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM  INSERTED AS ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INNER JOIN	dbo.tflNewID AS nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ON			nID.strTableName = ''''tflVectorSurveillanceSessionFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	AND			nID.idfKey1 = ins.idfVectorSurveillanceSession'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	AND			nID.idfKey2 IS NOT NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	LEFT JOIN	dbo.tflVectorSurveillanceSessionFiltered AS btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ON			btf.idfVectorSurveillanceSessionFiltered = nID.NewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE  btf.idfVectorSurveillanceSessionFiltered IS NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DELETE		nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM		dbo.tflNewID AS nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INNER JOIN	INSERTED AS ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ON			ins.idfVectorSurveillanceSession = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE		nID.strTableName = ''''tflVectorSurveillanceSessionFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVectorSurveillanceSessionSummary_A_Update] ON [dbo].[tlbVectorSurveillanceSessionSummary]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsVSSessionSummary))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVectorSurveillanceSessionSummary_I_Delete] ON [dbo].[tlbVectorSurveillanceSessionSummary]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsVSSessionSummary]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsVSSessionSummary] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsVSSessionSummary] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbVectorSurveillanceSessionSummary AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords AS b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsVSSessionSummary = b.idfsVSSessionSummary;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVectorSurveillanceSessionSummaryDiagnosis_A_Update]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
ON [dbo].[tlbVectorSurveillanceSessionSummaryDiagnosis]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsVSSessionSummaryDiagnosis))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVectorSurveillanceSessionSummaryDiagnosis_I_Delete] ON [dbo].[tlbVectorSurveillanceSessionSummaryDiagnosis]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsVSSessionSummaryDiagnosis]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsVSSessionSummaryDiagnosis] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsVSSessionSummaryDiagnosis] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbVectorSurveillanceSessionSummaryDiagnosis AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords AS b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsVSSessionSummaryDiagnosis = b.idfsVSSessionSummaryDiagnosis;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE  TRIGGER [dbo].[TR_tlbVetCase_A_Insert] ON [dbo].[tlbVetCase]	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF ((TRIGGER_NESTLEVEL()<2) AND (dbo.FN_GBL_TriggersWork ()=1))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	UPDATE tvc'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET strDefaultDisplayDiagnosis = dbo.FN_GBL_DiagnosisString(''''xx'''', i.idfVetCase)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM dbo.tlbVetCase AS tvc'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	JOIN inserted AS i ON tvc.idfVetCase = i.idfVetCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INSERT INTO dbo.tlbVetCaseDisplayDiagnosis'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	(idfVetCase, idfsLanguage, strDisplayDiagnosis)		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		tvc.idfVetCase,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		tltc.idfsLanguage,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		dbo.FN_GBL_DiagnosisString(tbr.strBaseReferenceCode, i.idfVetCase) AS DisplayDiagnosis'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM dbo.tlbVetCase AS tvc'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	JOIN inserted AS i ON tvc.idfVetCase = i.idfVetCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	CROSS JOIN dbo.trtLanguageToCP tltc	JOIN dbo.tstLocalSiteOptions tlso ON tlso.strName = ''''SiteID'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		JOIN dbo.tstSite ts ON ts.idfsSite = tlso.strValue AND ts.idfCustomizationPackage = tltc.idfCustomizationPackage AND ts.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	JOIN dbo.trtBaseReference tbr ON tbr.idfsBaseReference = tltc.idfsLanguage AND tbr.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVetCase_A_Update] ON [dbo].[tlbVetCase]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF UPDATE(idfVetCase)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SET datModificationForArchiveDate = GETDATE(),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				a.AuditCreateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			FROM dbo.tlbVetCase AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			INNER JOIN INSERTED AS b ON a.idfVetCase = b.idfVetCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			UPDATE tvc'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SET strDefaultDisplayDiagnosis = dbo.FN_GBL_DiagnosisString(''''xx'''', i.idfVetCase)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			FROM dbo.tlbVetCase AS tvc'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			JOIN inserted AS i ON'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				tvc.idfVetCase = i.idfVetCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHERE ISNULL(tvc.strDefaultDisplayDiagnosis, '''''''') <> ISNULL(dbo.fnDiagnosisString(''''xx'''', i.idfVetCase), '''''''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			MERGE dbo.tlbVetCaseDisplayDiagnosis AS [target]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			USING (				'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						tvc.idfVetCase,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						tltc.idfsLanguage,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						dbo.fnDiagnosisString(tbr.strBaseReferenceCode, tvc.idfVetCase) as DisplayDiagnosis'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					FROM dbo.tlbVetCase AS tvc'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					JOIN inserted AS i ON tvc.idfVetCase = i.idfVetCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					CROSS JOIN dbo.trtLanguageToCP tltc	JOIN dbo.tstLocalSiteOptions tlso ON tlso.strName = ''''SiteID'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					JOIN dbo.tstSite ts ON ts.idfsSite = tlso.strValue AND ts.idfCustomizationPackage = tltc.idfCustomizationPackage AND ts.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
					JOIN dbo.trtBaseReference tbr ON tbr.idfsBaseReference = tltc.idfsLanguage AND tbr.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				 ) AS [source]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON ([target].idfVetCase = [source].idfVetCase AND [target].idfsLanguage = [source].idfsLanguage)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			WHEN MATCHED AND (ISNULL([target].strDisplayDiagnosis, '''''''') <> ISNULL([source].DisplayDiagnosis, ''''''''))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			THEN UPDATE	SET strDisplayDiagnosis = [source].DisplayDiagnosis;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE  TRIGGER [dbo].[TR_tlbVetCase_ChangeArchiveDate] on [dbo].[tlbVetCase]	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR INSERT, UPDATE, DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF (dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @dateModify DATETIME'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfOutbreakOld BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DECLARE @idfOutbreakNew BIGINT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		@idfOutbreakOld = ISNULL(idfOutbreak, 0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM DELETED'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		@idfOutbreakNew = ISNULL(idfOutbreak, 0)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM INSERTED'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET @dateModify = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
						'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfOutbreakOld > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbOutbreak'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfOutbreak = @idfOutbreakOld'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF @idfOutbreakNew > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE tlbOutbreak'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datModificationForArchiveDate = @dateModify,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = @dateModify'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE idfOutbreak = @idfOutbreakNew'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVetCase_I_Delete] on [dbo].[tlbVetCase]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfVetCase]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfVetCase] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfVetCase] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = getdate()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbVetCase as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfVetCase = b.idfVetCase;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva Svetlana'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: May 19 2014  3:07PM'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Trigger for correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication and checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_VetCaseReplicationUp_A_Insert]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tlbVetCase]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   FOR INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DELETE nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM  dbo.tflNewID AS nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INNER JOIN inserted AS ins ON ins.idfVetCase = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE nID.strTableName = ''''tflVetCaseFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INSERT INTO dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		''''tflVetCaseFiltered'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ins.idfVetCase,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM inserted AS ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INNER JOIN dbo.tflSiteToSiteGroup AS stsg ON stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INNER JOIN dbo.tflSiteGroup sg ON sg.idfSiteGroup = stsg.idfSiteGroup AND sg.idfsRayon IS NULL AND sg.idfsCentralSite IS NULL AND sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	LEFT JOIN dbo.tflVetCaseFiltered AS btf ON  btf.idfVetCase = ins.idfVetCase	AND btf.idfSiteGroup = sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE  btf.idfVetCaseFiltered IS NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INSERT INTO dbo.tflVetCaseFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		idfVetCaseFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		idfVetCase,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ins.idfVetCase,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		nID.idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM  inserted AS ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INNER JOIN dbo.tflNewID AS nID ON  nID.strTableName = ''''tflVetCaseFiltered'''' AND nID.idfKey1 = ins.idfVetCase AND nID.idfKey2 IS NOT NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	LEFT JOIN dbo.tflVetCaseFiltered AS btf ON btf.idfVetCaseFiltered = nID.NewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE  btf.idfVetCaseFiltered IS NULL'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DELETE nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM  dbo.tflNewID AS nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INNER JOIN inserted AS ins ON ins.idfVetCase = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	WHERE  nID.strTableName = ''''tflVetCaseFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVetCaseDisplayDiagnosis_A_Update] ON [dbo].[tlbVetCaseDisplayDiagnosis]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsLanguage) OR UPDATE(idfVetCase)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVetCaseDisplayDiagnosis_I_Delete] on [dbo].[tlbVetCaseDisplayDiagnosis]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfVetCase], [idfsLanguage]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfVetCase], [idfsLanguage] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfVetCase], [idfsLanguage] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbVetCaseDisplayDiagnosis as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfVetCase = b.idfVetCase'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.idfsLanguage = b.idfsLanguage;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVetCaseLog_A_Update] ON [dbo].[tlbVetCaseLog]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfVetCaseLog))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tlbVetCaseLog_I_Delete] on [dbo].[tlbVetCaseLog]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfVetCaseLog]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfVetCaseLog] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfVetCaseLog] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tlbVetCaseLog as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfVetCaseLog = b.idfVetCaseLog;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtAttributeType_A_Update] ON [dbo].[trtAttributeType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfAttributeType))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtBaseReference_A_Update] ON [dbo].[trtBaseReference]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsBaseReference))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET a.AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN inserted AS b ON a.idfsBaseReference = b.idfsBaseReference'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET a.AuditUpdateUser = SUSER_NAME()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN inserted AS b ON a.idfsBaseReference = b.idfsBaseReference'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WHERE NOT UPDATE(AuditUpdateUser)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtBaseReference_I_Delete] on [dbo].[trtBaseReference]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF  delete'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
if((TRIGGER_NESTLEVEL()<2) AND (dbo.FN_GBL_TriggersWork()=1))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
begin'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	update a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	set  intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	from dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	INNER join deleted as b on a.idfsBaseReference = b.idfsBaseReference'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
end'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
else'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
delete a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
from dbo.trtBaseReference as a inner join deleted as b on a.idfsBaseReference = b.idfsBaseReference'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtBaseReferenceAttribute_A_Update] ON [dbo].[trtBaseReferenceAttribute]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfBaseReferenceAttribute))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtBaseReferenceAttributeToCP_A_Update] ON [dbo].[trtBaseReferenceAttributeToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfBaseReferenceAttribute) OR UPDATE(idfCustomizationPackage)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtBaseReferenceToCP_A_Update] ON [dbo].[trtBaseReferenceToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsBaseReference) OR UPDATE(idfCustomizationPackage)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtBssAggregateColumns_A_Update] ON [dbo].[trtBssAggregateColumns]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsBssAggregateColumn))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtBssAggregateColumns_I_Delete] on [dbo].[trtBssAggregateColumns]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsBssAggregateColumn]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsBssAggregateColumn] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsBssAggregateColumn] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBssAggregateColumns as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBssAggregateColumn = b.idfsBssAggregateColumn;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsBssAggregateColumn]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsBssAggregateColumn] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsBssAggregateColumn] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsBssAggregateColumn;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtCaseClassification_A_Update] ON [dbo].[trtCaseClassification]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsCaseClassification))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtCollectionMethodForVectorType_A_Update] ON [dbo].[trtCollectionMethodForVectorType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfCollectionMethodForVectorType))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtCollectionMethodForVectorType_I_Delete] on [dbo].[trtCollectionMethodForVectorType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfCollectionMethodForVectorType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfCollectionMethodForVectorType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfCollectionMethodForVectorType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtCollectionMethodForVectorType as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfCollectionMethodForVectorType = b.idfCollectionMethodForVectorType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtCollectionMethodForVectorTypeToCP_A_Update] ON [dbo].[trtCollectionMethodForVectorTypeToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfCollectionMethodForVectorType) OR UPDATE(idfCollectionMethodForVectorType)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDerivativeForSampleType_A_Update] ON [dbo].[trtDerivativeForSampleType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDerivativeForSampleType))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDerivativeForSampleType_I_Delete] on [dbo].[trtDerivativeForSampleType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfDerivativeForSampleType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDerivativeForSampleType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDerivativeForSampleType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtDerivativeForSampleType as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfDerivativeForSampleType = b.idfDerivativeForSampleType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDerivativeForSampleTypeToCP_A_Update] ON [dbo].[trtDerivativeForSampleTypeToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfDerivativeForSampleType]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDiagnosis_A_Update] ON [dbo].[trtDiagnosis]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsDiagnosis))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDiagnosis_I_Delete] on [dbo].[trtDiagnosis]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsDiagnosis]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsDiagnosis] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsDiagnosis] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtDiagnosis as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsDiagnosis = b.idfsDiagnosis;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsDiagnosis]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsDiagnosis] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsDiagnosis] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsDiagnosis;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDiagnosisAgeGroup_A_Update] ON [dbo].[trtDiagnosisAgeGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsDiagnosisAgeGroup))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDiagnosisAgeGroup_I_Delete] on [dbo].[trtDiagnosisAgeGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsDiagnosisAgeGroup]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsDiagnosisAgeGroup] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsDiagnosisAgeGroup] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtDiagnosisAgeGroup as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsDiagnosisAgeGroup = b.idfsDiagnosisAgeGroup;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsDiagnosisAgeGroup]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsDiagnosisAgeGroup] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsDiagnosisAgeGroup] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsDiagnosisAgeGroup;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDiagnosisAgeGroupToDiagnosis_A_Update] ON [dbo].[trtDiagnosisAgeGroupToDiagnosis]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDiagnosisAgeGroupToDiagnosis))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDiagnosisAgeGroupToDiagnosis_I_Delete] on [dbo].[trtDiagnosisAgeGroupToDiagnosis]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfDiagnosisAgeGroupToDiagnosis]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDiagnosisAgeGroupToDiagnosis] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDiagnosisAgeGroupToDiagnosis] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtDiagnosisAgeGroupToDiagnosis as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfDiagnosisAgeGroupToDiagnosis = b.idfDiagnosisAgeGroupToDiagnosis;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDiagnosisAgeGroupToDiagnosisToCP_A_Update] ON [dbo].[trtDiagnosisAgeGroupToDiagnosisToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfDiagnosisAgeGroupToDiagnosis]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDiagnosisAgeGroupToStatisticalAgeGroup_A_Update] ON [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDiagnosisAgeGroupToStatisticalAgeGroup))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDiagnosisAgeGroupToStatisticalAgeGroup_I_Delete] on [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfDiagnosisAgeGroupToStatisticalAgeGroup]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDiagnosisAgeGroupToStatisticalAgeGroup] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDiagnosisAgeGroupToStatisticalAgeGroup] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtDiagnosisAgeGroupToStatisticalAgeGroup as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfDiagnosisAgeGroupToStatisticalAgeGroup = b.idfDiagnosisAgeGroupToStatisticalAgeGroup;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDiagnosisAgeGroupToStatisticalAgeGroupToCP_A_Update] ON [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroupToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfDiagnosisAgeGroupToStatisticalAgeGroup]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDiagnosisToDiagnosisGroup_A_Update] ON [dbo].[trtDiagnosisToDiagnosisGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDiagnosisToDiagnosisGroup))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDiagnosisToDiagnosisGroup_I_Delete] on [dbo].[trtDiagnosisToDiagnosisGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfDiagnosisToDiagnosisGroup]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDiagnosisToDiagnosisGroup] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfDiagnosisToDiagnosisGroup] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtDiagnosisToDiagnosisGroup as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfDiagnosisToDiagnosisGroup = b.idfDiagnosisToDiagnosisGroup;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDiagnosisToDiagnosisGroupToCP_A_Update] ON [dbo].[trtDiagnosisToDiagnosisGroupToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfDiagnosisToDiagnosisGroup]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtDiagnosisToGroupForReportType_A_Update] ON [dbo].[trtDiagnosisToGroupForReportType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfDiagnosisToGroupForReportType))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtEventType_A_Update] ON [dbo].[trtEventType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsEventTypeID))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtEventType_I_Delete] on [dbo].[trtEventType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsEventTypeID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsEventTypeID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsEventTypeID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtEventType as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsEventTypeID = b.idfsEventTypeID;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsEventTypeID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsEventTypeID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsEventTypeID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsEventTypeID;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtFFObjectForCustomReport_A_Update] ON [dbo].[trtFFObjectForCustomReport]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfFFObjectForCustomReport))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtFFObjectForCustomReport_I_Delete] on [dbo].[trtFFObjectForCustomReport]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfFFObjectForCustomReport]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfFFObjectForCustomReport] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfFFObjectForCustomReport] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtFFObjectForCustomReport as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfFFObjectForCustomReport = b.idfFFObjectForCustomReport;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtFFObjectToDiagnosisForCustomReport_A_Update] ON [dbo].[trtFFObjectToDiagnosisForCustomReport]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfFFObjectToDiagnosisForCustomReport))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtFFObjectToDiagnosisForCustomReport_I_Delete] on [dbo].[trtFFObjectToDiagnosisForCustomReport]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfFFObjectToDiagnosisForCustomReport]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfFFObjectToDiagnosisForCustomReport] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfFFObjectToDiagnosisForCustomReport] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtFFObjectToDiagnosisForCustomReport as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfFFObjectToDiagnosisForCustomReport = b.idfFFObjectToDiagnosisForCustomReport;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtGISBaseReferenceAttribute_A_Update] ON [dbo].[trtGISBaseReferenceAttribute]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfGISBaseReferenceAttribute]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtGISObjectForCustomReport_A_Update] ON [dbo].[trtGISObjectForCustomReport]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfGISObjectForCustomReport]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtHACodeList_A_Update] ON [dbo].[trtHACodeList]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(intHACode))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtHACodeList_I_Delete] on [dbo].[trtHACodeList]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([intHACode]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [intHACode] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [intHACode] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtHACodeList as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.intHACode = b.intHACode;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtLanguageToCP_A_Update] ON [dbo].[trtLanguageToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfsLanguage]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtMaterialForDisease_A_Update] ON [dbo].[trtMaterialForDisease]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfMaterialForDisease))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtMaterialForDisease_I_Delete] on [dbo].[trtMaterialForDisease]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfMaterialForDisease]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMaterialForDisease] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfMaterialForDisease] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtMaterialForDisease as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfMaterialForDisease = b.idfMaterialForDisease;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtMaterialForDiseaseToCP_A_Update] ON [dbo].[trtMaterialForDiseaseToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfMaterialForDisease]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtMatrixColumn_A_Update] ON [dbo].[trtMatrixColumn]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfsMatrixColumn]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtMatrixType_A_Update] ON [dbo].[trtMatrixType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfsMatrixType]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtObjectTypeToObjectOperation_A_Update] ON [dbo].[trtObjectTypeToObjectOperation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfsObjectType]) OR UPDATE([idfsObjectOperation])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtObjectTypeToObjectType_A_Update] ON [dbo].[trtObjectTypeToObjectType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfsParentObjectType]) OR UPDATE([idfsRelatedObjectType])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtPensideTestForDisease_A_Update] ON [dbo].[trtPensideTestForDisease]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfPensideTestForDisease))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtPensideTestForDisease_I_Delete] on [dbo].[trtPensideTestForDisease]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfPensideTestForDisease]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfPensideTestForDisease] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfPensideTestForDisease] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtPensideTestForDisease as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfPensideTestForDisease = b.idfPensideTestForDisease;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtPensideTestForDiseaseToCP_A_Update] ON [dbo].[trtPensideTestForDiseaseToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfPensideTestForDisease]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtPensideTestTypeForVectorType_A_Update] ON [dbo].[trtPensideTestTypeForVectorType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfPensideTestTypeForVectorType))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtPensideTestTypeForVectorType_I_Delete] on [dbo].[trtPensideTestTypeForVectorType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfPensideTestTypeForVectorType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfPensideTestTypeForVectorType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfPensideTestTypeForVectorType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtPensideTestTypeForVectorType as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfPensideTestTypeForVectorType = b.idfPensideTestTypeForVectorType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtPensideTestTypeForVectorTypeToCP_A_Update] ON [dbo].[trtPensideTestTypeForVectorTypeToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfPensideTestTypeForVectorType]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtPensideTestTypeToTestResult_A_Update] ON [dbo].[trtPensideTestTypeToTestResult]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsPensideTestName) OR UPDATE(idfsPensideTestResult)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtPensideTestTypeToTestResult_I_Delete] on [dbo].[trtPensideTestTypeToTestResult]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsPensideTestName], [idfsPensideTestResult]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsPensideTestName], [idfsPensideTestResult] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsPensideTestName], [idfsPensideTestResult] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtPensideTestTypeToTestResult as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsPensideTestName = b.idfsPensideTestName'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.idfsPensideTestResult = b.idfsPensideTestResult;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtPensideTestTypeToTestResultToCP_A_Update] ON [dbo].[trtPensideTestTypeToTestResultToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfsPensideTestName]) OR UPDATE([idfsPensideTestResult]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtProphilacticAction_A_Update] ON [dbo].[trtProphilacticAction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsProphilacticAction))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtProphilacticAction_I_Delete] on [dbo].[trtProphilacticAction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsProphilacticAction]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsProphilacticAction] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsProphilacticAction] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtProphilacticAction as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsProphilacticAction = b.idfsProphilacticAction;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsProphilacticAction]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsProphilacticAction] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsProphilacticAction] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsProphilacticAction;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtReferenceType_A_Update] ON [dbo].[trtReferenceType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfsReferenceType]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtReferenceType_I_Delete] on [dbo].[trtReferenceType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsReferenceType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsReferenceType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsReferenceType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtReferenceType as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsReferenceType = b.idfsReferenceType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsReferenceType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsReferenceType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsReferenceType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsReferenceType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtReportDiagnosisGroup_A_Update] ON [dbo].[trtReportDiagnosisGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsReportDiagnosisGroup))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtReportDiagnosisGroup_I_Delete] on [dbo].[trtReportDiagnosisGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsReportDiagnosisGroup]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsReportDiagnosisGroup] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsReportDiagnosisGroup] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtReportDiagnosisGroup as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsReportDiagnosisGroup = b.idfsReportDiagnosisGroup;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsReportDiagnosisGroup]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsReportDiagnosisGroup] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsReportDiagnosisGroup] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsReportDiagnosisGroup;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtReportRows_A_Update] ON [dbo].[trtReportRows]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfReportRows))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtReportRows_I_Delete] on [dbo].[trtReportRows]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfReportRows]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfReportRows] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfReportRows] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtReportRows as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfReportRows = b.idfReportRows;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtResource_A_Update] ON [dbo].[trtResource]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsResource))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtResource_I_Delete] ON [dbo].[trtResource]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsResource]) AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsResource] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsResource] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtResource AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords AS b ON a.idfsResource = b.idfsResource;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtResourceSet_A_Update] ON [dbo].[trtResourceSet]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsResourceSet))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtResourceSet_I_Delete] ON [dbo].[trtResourceSet]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsResourceSet]) AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsResourceSet] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsResourceSet] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtResourceSet AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords AS b ON a.idfsResourceSet = b.idfsResourceSet;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtResourceSetHierarchy_A_Update] ON [dbo].[trtResourceSetHierarchy]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfResourceHierarchy))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtResourceSetHierarchy_I_Delete] ON [dbo].[trtResourceSetHierarchy]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfResourceHierarchy]) AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfResourceHierarchy] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfResourceHierarchy] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtResourceSetHierarchy AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords AS b ON a.idfResourceHierarchy = b.idfResourceHierarchy;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtResourceSetToResource_A_Update] ON [dbo].[trtResourceSetToResource]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsResourceSet) AND UPDATE(idfsResource)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtResourceSetToResource_I_Delete] ON [dbo].[trtResourceSetToResource]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfsResourceSet], [idfsResource]) AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsResourceSet], [idfsResource] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsResourceSet], [idfsResource] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtResourceSetToResource AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows AS b ON a.idfsResourceSet = b.idfsResourceSet	AND a.idfsResource = b.idfsResource;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtResourceSetTranslation_A_Update] ON [dbo].[trtResourceSetTranslation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsResourceSet) AND UPDATE(idfsLanguage)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtResourceSetTranslation_I_Delete] ON [dbo].[trtResourceSetTranslation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfsResourceSet], [idfsLanguage]) AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsResourceSet], [idfsLanguage] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsResourceSet], [idfsLanguage] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtResourceSetTranslation AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows AS b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsResourceSet = b.idfsResourceSet'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.idfsLanguage = b.idfsLanguage;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtResourceTranslation_A_Update] ON [dbo].[trtResourceTranslation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsResource) AND UPDATE(idfsLanguage)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtResourceTranslation_I_Delete] ON [dbo].[trtResourceTranslation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfsResource], [idfsLanguage]) AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsResource], [idfsLanguage] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsResource], [idfsLanguage] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtResourceTranslation AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows AS b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsResource = b.idfsResource'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.idfsLanguage = b.idfsLanguage;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSampleType_A_Update] ON [dbo].[trtSampleType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsSampleType))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSampleType_I_Delete] on [dbo].[trtSampleType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsSampleType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSampleType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSampleType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtSampleType as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsSampleType = b.idfsSampleType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsSampleType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSampleType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSampleType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsSampleType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSampleTypeForVectorType_A_Update] ON [dbo].[trtSampleTypeForVectorType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSampleTypeForVectorType))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSampleTypeForVectorType_I_Delete] on [dbo].[trtSampleTypeForVectorType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfSampleTypeForVectorType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSampleTypeForVectorType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSampleTypeForVectorType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtSampleTypeForVectorType as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfSampleTypeForVectorType = b.idfSampleTypeForVectorType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSampleTypeForVectorTypeToCP_A_Update] ON [dbo].[trtSampleTypeForVectorTypeToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfSampleTypeForVectorType]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSanitaryAction_A_Update] on [dbo].[trtSanitaryAction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsSanitaryAction))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSanitaryAction_I_Delete] on [dbo].[trtSanitaryAction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsSanitaryAction]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSanitaryAction] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSanitaryAction] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtSanitaryAction as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsSanitaryAction = b.idfsSanitaryAction;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsSanitaryAction]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSanitaryAction] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSanitaryAction] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsSanitaryAction;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSpeciesContentInCustomReport_A_Update] ON [dbo].[trtSpeciesContentInCustomReport]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSpeciesContentInCustomReport))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSpeciesContentInCustomReport_I_Delete] on [dbo].[trtSpeciesContentInCustomReport]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfSpeciesContentInCustomReport]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSpeciesContentInCustomReport] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSpeciesContentInCustomReport] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtSpeciesContentInCustomReport as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfSpeciesContentInCustomReport = b.idfSpeciesContentInCustomReport;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSpeciesGroup_A_Update] ON [dbo].[trtSpeciesGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsSpeciesGroup))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSpeciesGroup_I_Delete] on [dbo].[trtSpeciesGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfsSpeciesGroup]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSpeciesGroup] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSpeciesGroup] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtSpeciesGroup as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsSpeciesGroup = b.idfsSpeciesGroup;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfsSpeciesGroup]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSpeciesGroup] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSpeciesGroup] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsSpeciesGroup;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSpeciesToGroupForCustomReport_A_Update] ON [dbo].[trtSpeciesToGroupForCustomReport]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSpeciesToGroupForCustomReport))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSpeciesToGroupForCustomReport_I_Delete] on [dbo].[trtSpeciesToGroupForCustomReport]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfSpeciesToGroupForCustomReport]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSpeciesToGroupForCustomReport] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSpeciesToGroupForCustomReport] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtSpeciesToGroupForCustomReport as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfSpeciesToGroupForCustomReport = b.idfSpeciesToGroupForCustomReport;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSpeciesType_A_Update] ON [dbo].[trtSpeciesType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsSpeciesType))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSpeciesType_I_Delete] on [dbo].[trtSpeciesType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsSpeciesType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSpeciesType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSpeciesType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtSpeciesType as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsSpeciesType = b.idfsSpeciesType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsSpeciesType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSpeciesType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSpeciesType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsSpeciesType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSpeciesTypeToAnimalAge_A_Update] ON [dbo].[trtSpeciesTypeToAnimalAge]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfSpeciesTypeToAnimalAge))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSpeciesTypeToAnimalAge_I_Delete] on [dbo].[trtSpeciesTypeToAnimalAge]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfSpeciesTypeToAnimalAge]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSpeciesTypeToAnimalAge] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSpeciesTypeToAnimalAge] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtSpeciesTypeToAnimalAge as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfSpeciesTypeToAnimalAge = b.idfSpeciesTypeToAnimalAge;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSpeciesTypeToAnimalAgeToCP_A_Update] ON [dbo].[trtSpeciesTypeToAnimalAgeToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfSpeciesTypeToAnimalAge]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtStatisticDataType_A_Update] ON [dbo].[trtStatisticDataType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsStatisticDataType))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtStatisticDataType_I_Delete] on [dbo].[trtStatisticDataType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfsStatisticDataType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsStatisticDataType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsStatisticDataType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtStatisticDataType as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsStatisticDataType = b.idfsStatisticDataType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfsStatisticDataType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsStatisticDataType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsStatisticDataType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsStatisticDataType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtStringNameTranslation_A_Update] ON [dbo].[trtStringNameTranslation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsBaseReference) AND UPDATE(idfsLanguage)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtStringNameTranslation_I_Delete] on [dbo].[trtStringNameTranslation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfsBaseReference], [idfsLanguage]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsBaseReference], [idfsLanguage] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsBaseReference], [idfsLanguage] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtStringNameTranslation as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsBaseReference'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.idfsLanguage = b.idfsLanguage;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtStringNameTranslationToCP_A_Update] ON [dbo].[trtStringNameTranslationToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfsBaseReference]) OR UPDATE([idfsLanguage]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSystemFunction_A_Update] ON [dbo].[trtSystemFunction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsSystemFunction))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSystemFunction_I_Delete] on [dbo].[trtSystemFunction]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfsSystemFunction]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSystemFunction] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSystemFunction] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtSystemFunction as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsSystemFunction = b.idfsSystemFunction;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfsSystemFunction]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSystemFunction] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSystemFunction] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsSystemFunction;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtSystemFunctionOperation_A_Update] ON [dbo].[trtSystemFunctionOperation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfsSystemFunctionOperation]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtTestForDisease_A_Update] ON [dbo].[trtTestForDisease]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfTestForDisease))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtTestForDisease_I_Delete] on [dbo].[trtTestForDisease]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfTestForDisease]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfTestForDisease] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfTestForDisease] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtTestForDisease as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfTestForDisease = b.idfTestForDisease;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtTestForDiseaseToCP_A_Update] ON [dbo].[trtTestForDiseaseToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfTestForDisease]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtTestTypeForCustomReport_A_Update] ON [dbo].[trtTestTypeForCustomReport]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfTestTypeForCustomReport))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtTestTypeForCustomReport_I_Delete] on [dbo].[trtTestTypeForCustomReport]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([idfTestTypeForCustomReport]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfTestTypeForCustomReport] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfTestTypeForCustomReport] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtTestTypeForCustomReport as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfTestTypeForCustomReport = b.idfTestTypeForCustomReport;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtTestTypeToTestResult_A_Update] ON [dbo].[trtTestTypeToTestResult]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND (UPDATE(idfsTestName) OR UPDATE(idfsTestResult)))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtTestTypeToTestResult_I_Delete] on [dbo].[trtTestTypeToTestResult]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsTestName], [idfsTestResult]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsTestName], [idfsTestResult] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsTestName], [idfsTestResult] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtTestTypeToTestResult as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsTestName = b.idfsTestName'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.idfsTestResult = b.idfsTestResult'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtTestTypeToTestResultToCP_A_Update] ON [dbo].[trtTestTypeToTestResultToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfsTestName]) OR UPDATE([idfsTestResult]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtVectorSubType_A_Update] ON [dbo].[trtVectorSubType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsVectorSubType))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtVectorSubType_I_Delete] on [dbo].[trtVectorSubType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	begin'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsVectorSubType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsVectorSubType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsVectorSubType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtVectorSubType as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsVectorSubType = b.idfsVectorSubType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsVectorSubType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsVectorSubType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsVectorSubType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsVectorSubType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtVectorType_A_Update] ON [dbo].[trtVectorType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1 AND UPDATE(idfsVectorType))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_trtVectorType_I_Delete] on [dbo].[trtVectorType]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsVectorType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsVectorType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsVectorType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtVectorType as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsVectorType = b.idfsVectorType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsVectorType]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsVectorType] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsVectorType] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		DELETE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.trtBaseReference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsBaseReference = b.idfsVectorType;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstAggrSetting_A_Update] ON [dbo].[tstAggrSetting]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfsAggrCaseType]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstAggrSetting_I_Delete] on [dbo].[tstAggrSetting]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsAggrCaseType], [idfCustomizationPackage]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsAggrCaseType], [idfCustomizationPackage] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsAggrCaseType], [idfCustomizationPackage] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET  intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tstAggrSetting as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsAggrCaseType = b.idfsAggrCaseType'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.idfCustomizationPackage = b.idfCustomizationPackage;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstBarcodeLayout_A_Update] ON [dbo].[tstBarcodeLayout]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfsNumberName]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstCheckConstraints_A_Update] ON [dbo].[tstCheckConstraints]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfCheckConstraints]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstCheckTables_A_Update] ON [dbo].[tstCheckTables]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfCheckTable]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstCustomizationPackage_A_Update] ON [dbo].[tstCustomizationPackage]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfCustomizationPackage]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstCustomizationPackageSettings_A_Update] ON [dbo].[tstCustomizationPackageSettings]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfCustomizationPackage]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstEvent_A_Update] ON [dbo].[tstEvent]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfEventID]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstEventActive_A_Update] ON [dbo].[tstEventActive]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfEventID]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstEventClient_A_Update] ON [dbo].[tstEventClient]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([strClient]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstEventSubscription_A_Update] ON [dbo].[tstEventSubscription]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfsEventTypeID]) OR UPDATE([strClient])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstGeoLocationFormat_A_Update] ON [dbo].[tstGeoLocationFormat]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfsCountry]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstGlobalSiteOptions_A_Update] ON [dbo].[tstGlobalSiteOptions]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([strName]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstInvalidObjects_A_Update] ON [dbo].[tstInvalidObjects]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfKey]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstInvisibleFields_A_Update] ON [dbo].[tstInvisibleFields]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfInvisibleField]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstInvisibleFieldsToCP_A_Update] ON [dbo].[tstInvisibleFieldsToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfInvisibleField]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstLocalClient_A_Update] ON [dbo].[tstLocalClient]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([strClient]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstLocalConnectionContext_A_Update] ON [dbo].[tstLocalConnectionContext]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([strConnectionContext]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstLocalSamplesTestsPreferences_A_Update] ON [dbo].[tstLocalSamplesTestsPreferences]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfSamplesTestsPreferences]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstLocalSiteOptions_A_Update] ON [dbo].[tstLocalSiteOptions]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([strName]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstMandatoryFields_A_Update] ON [dbo].[tstMandatoryFields]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfMandatoryField]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstMandatoryFieldsToCP_A_Update] ON [dbo].[tstMandatoryFieldsToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfMandatoryField]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstNextNumbers_A_Update] ON [dbo].[tstNextNumbers]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfsNumberName]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstNotification_A_Update] ON [dbo].[tstNotification]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF UPDATE(idfNotification)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SET datModificationForArchiveDate = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			FROM dbo.tstNotification AS a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			INNER JOIN inserted AS b ON a.idfNotification = b.idfNotification'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstNotification_I_Delete] on [dbo].[tstNotification]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfNotification]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfNotification] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfNotification] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET datEnteringDate = GETDATE(),'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			datModificationForArchiveDate = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tstNotification as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfNotification = b.idfNotification;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Author:		Romasheva Svetlana'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Create date: May 19 2014  2:46PM'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- Description:	Trigger for correct problems'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
--       with replication and checkin in the same time'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
-- ============================================='''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[trtNotificationReplicationUp]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   ON  [dbo].[tstNotification]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   for INSERT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
   NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT ON;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	declare @FilterListedRecordsOnly bit = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	-- get value of global option FilterListedRecordsOnly'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	if exists (select * from tstGlobalSiteOptions tgso where tgso.strName = ''''FilterListedRecordsOnly'''' and tgso.strValue = ''''1'''')'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		set @FilterListedRecordsOnly = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	else'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		set @FilterListedRecordsOnly = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	if @FilterListedRecordsOnly = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	begin'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--DECLARE @context VARCHAR(50)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		--SET @context = dbo.fnGetContext()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		delete  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   ins.idfNotification = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  nID.strTableName = ''''tflNotificationFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		insert into dbo.tflNewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				strTableName,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				''''tflNotificationFiltered'''','''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfNotification,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflSiteToSiteGroup as stsg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   stsg.idfsSite = ins.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflSiteGroup sg'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on	sg.idfSiteGroup = stsg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.idfsRayon is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.idfsCentralSite is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and sg.intRowStatus = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			left join dbo.tflNotificationFiltered as btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on  btf.idfNotification = ins.idfNotification'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and btf.idfSiteGroup = sg.idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  btf.idfNotificationFiltered is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		insert into dbo.tflNotificationFiltered'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfNotificationFiltered,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfNotification,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				idfSiteGroup'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		select'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				nID.NewID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfNotification,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				nID.idfKey2'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on  nID.strTableName = ''''tflNotificationFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and nID.idfKey1 = ins.idfNotification'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				and nID.idfKey2 is not null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			left join dbo.tflNotificationFiltered as btf'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   btf.idfNotificationFiltered = nID.NewID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  btf.idfNotificationFiltered is null'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		delete  nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		from  dbo.tflNewID as nID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			inner join inserted as ins'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on   ins.idfNotification = nID.idfKey1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		where  nID.strTableName = ''''tflNotificationFiltered'''''''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	end'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	SET NOCOUNT OFF;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstNotificationShared_A_Update] ON [dbo].[tstNotificationShared]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfNotificationShared]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstNotificationStatus_A_Update] ON [dbo].[tstNotificationStatus]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfNotification]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstObjectAccess_A_Update] ON [dbo].[tstObjectAccess]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF dbo.FN_GBL_TriggersWork ()=1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF UPDATE(idfObjectAccess)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstObjectAccess_I_Delete] on [dbo].[tstObjectAccess]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfObjectAccess]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfObjectAccess] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfObjectAccess] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tstObjectAccess as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfObjectAccess = b.idfObjectAccess;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstPersonalDataGroup_A_Update] ON [dbo].[tstPersonalDataGroup]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfPersonalDataGroup]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstPersonalDataGroupToCP_A_Update] ON [dbo].[tstPersonalDataGroupToCP]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([idfPersonalDataGroup]) OR UPDATE([idfCustomizationPackage])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstRayonToReportSite_A_Update] ON [dbo].[tstRayonToReportSite]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfRayonToReportSite]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstSecurityAudit_A_Update] ON [dbo].[tstSecurityAudit]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfSecurityAudit]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstSecurityConfiguration_A_Update] ON [dbo].[tstSecurityConfiguration]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF dbo.FN_GBL_TriggersWork ()=1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF UPDATE(idfSecurityConfiguration)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstSecurityConfiguration_I_Delete] on [dbo].[tstSecurityConfiguration]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfSecurityConfiguration]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSecurityConfiguration] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSecurityConfiguration] from inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tstSecurityConfiguration as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			on a.idfSecurityConfiguration = b.idfSecurityConfiguration;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstSecurityConfigurationAlphabet_A_Update] ON [dbo].[tstSecurityConfigurationAlphabet]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF dbo.FN_GBL_TriggersWork ()=1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF UPDATE(idfsSecurityConfigurationAlphabet)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstSecurityConfigurationAlphabet_I_Delete] on [dbo].[tstSecurityConfigurationAlphabet]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfsSecurityConfigurationAlphabet]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSecurityConfigurationAlphabet] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfsSecurityConfigurationAlphabet] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tstSecurityConfigurationAlphabet as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfsSecurityConfigurationAlphabet = b.idfsSecurityConfigurationAlphabet;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstSecurityConfigurationAlphabetParticipation_A_Update] ON [dbo].[tstSecurityConfigurationAlphabetParticipation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork ()=1 )'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF (UPDATE(idfSecurityConfiguration) OR UPDATE(idfsSecurityConfigurationAlphabet))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstSecurityConfigurationAlphabetParticipation_I_Delete] on [dbo].[tstSecurityConfigurationAlphabetParticipation]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfSecurityConfiguration], [idfsSecurityConfigurationAlphabet]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSecurityConfiguration], [idfsSecurityConfigurationAlphabet] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfSecurityConfiguration], [idfsSecurityConfigurationAlphabet] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tstSecurityConfigurationAlphabetParticipation as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfSecurityConfiguration = b.idfSecurityConfiguration'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AND a.idfsSecurityConfigurationAlphabet = b.idfsSecurityConfigurationAlphabet;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstSite_A_Update] ON [dbo].[tstSite]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfsSite]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstSite_CopyToTfl] on [dbo].[tstSite]	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR INSERT, UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF ((TRIGGER_NESTLEVEL()<2) AND (dbo.FN_GBL_TriggersWork()=1))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (SELECT COUNT(*) FROM INSERTED) > 0 AND (SELECT COUNT(*) FROM DELETED) = 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INSERT INTO tflSite (idfsSite, strSiteID, intRowStatus)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SELECT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			idfsSite, strSiteID, intRowStatus'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM INSERTED'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	ELSE	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF (SELECT COUNT(*) FROM INSERTED) > 0 AND (SELECT COUNT(*) FROM DELETED) > 0'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			UPDATE ts'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SET ts.strSiteID = ins.strSiteID,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ts.intRowStatus = ins.intRowStatus'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			FROM tflSite ts'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			JOIN INSERTED AS ins ON'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
				ins.idfsSite = ts.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
SET ANSI_NULLS ON'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE  TRIGGER [dbo].[TR_tstSite_DeleteFromTfl] ON [dbo].[tstSite]	'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
IF ((TRIGGER_NESTLEVEL()<2) AND (dbo.FN_GBL_TriggersWork() = 1))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DELETE ts'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM tflSite ts'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	JOIN DELETED AS del ON'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		del.idfsSite = ts.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	DELETE FROM ts'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	FROM tstSite ts'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	JOIN DELETED AS del ON'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		del.idfsSite = ts.idfsSite'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstUserTable_A_Update] ON [dbo].[tstUserTable]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF dbo.FN_GBL_TriggersWork ()=1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF UPDATE(idfUserID)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ELSE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			UPDATE dbo.tstUserTable'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SET AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			FROM dbo.tstUserTable UT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			INNER JOIN Inserted i ON UT.idfUserID = i.idfUserID'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstUserTable_I_Delete] on [dbo].[tstUserTable]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfUserID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfUserID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfUserID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tstUserTable as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfUserID = b.idfUserID;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstUserTableLocal_A_Update] ON [dbo].[tstUserTableLocal]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([idfUserID]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstUserTableOldPassword_A_Update] ON [dbo].[tstUserTableOldPassword]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF dbo.FN_GBL_TriggersWork ()=1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		IF UPDATE(idfUserOldPassword)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstUserTableOldPassword_I_Delete] ON [dbo].[tstUserTableOldPassword]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		-- Perform logical delete instead of physical delete'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRecords([idfUserOldPassword]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfUserOldPassword] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [idfUserOldPassword] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.tstUserTableOldPassword as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRecords as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.idfUserOldPassword = b.idfUserOldPassword;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstUserTicket_A_Update] ON [dbo].[tstUserTicket]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([strTicket]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_tstVersionCompare_A_Update] ON [dbo].[tstVersionCompare]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([strModuleName]) OR UPDATE([strModuleVersion]) OR UPDATE([strDatabaseVersion])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_updRunningApps_A_Update] ON [dbo].[updRunningApps]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([strClientID]) OR UPDATE([strApplication])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_updUpdateBlock_A_Update] ON [dbo].[updUpdateBlock]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND (UPDATE([strClientID]) OR UPDATE([strApplication])))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_UserPreference_A_Update] on [dbo].[UserPreference]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF(dbo.FN_GBL_TriggersWork ()=1) AND (UPDATE(UserPreferenceUID))'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_UserPreference_I_Delete] on [dbo].[UserPreference]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
INSTEAD OF DELETE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		WITH cteOnlyDeletedRows([UserPreferenceUID]) as'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		('''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [UserPreferenceUID] FROM deleted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			EXCEPT'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			SELECT [UserPreferenceUID] FROM inserted'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		)'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		UPDATE a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		SET intRowStatus = 1,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateUser = SYSTEM_USER,'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			AuditUpdateDTM = GETDATE()'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		FROM dbo.UserPreference as a'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		INNER JOIN cteOnlyDeletedRows as b'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
			ON a.[UserPreferenceUID] = b.[UserPreferenceUID];'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
SET ANSI_NULLS ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 

SET QUOTED_IDENTIFIER ON
'' exec [' + @DbName + '].sys.sp_executesql @cmd
set @cmd = N''''
'


-------

set @cmd = @cmd + N'
set @cmd = @cmd + N''
CREATE TRIGGER [dbo].[TR_VetDiseaseReportRelationship_A_Update] ON [dbo].[VetDiseaseReportRelationship]'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
FOR UPDATE'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
NOT FOR REPLICATION'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
AS'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	IF (dbo.FN_GBL_TriggersWork() = 1 AND UPDATE([VetDiseaseReportRelnUID]))  -- update to Primary Key is not allowed.'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	BEGIN'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		RAISERROR(''''Update Trigger: Not allowed to update PK.'''',16,1);'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
		ROLLBACK TRANSACTION;'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
	END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
END'''

set @cmd = @cmd + N'
set @cmd = @cmd + N''
'''


-------

set @cmd = @cmd + N' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


--------


-- Foreign Keys --


 
------- ----------

set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuerySearchFieldCondition]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuerySearchFieldCondition_tasQueryConditionGroup__idfQueryConditionGroup_R_1342] FOREIGN KEY([idfQueryConditionGroup])
REFERENCES [dbo].[tasQueryConditionGroup] ([idfQueryConditionGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasQuerySearchFieldCondition] CHECK CONSTRAINT [FK_tasQuerySearchFieldCondition_tasQueryConditionGroup__idfQueryConditionGroup_R_1342]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtVectorSubType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtVectorSubType_trtVectorType_idfsVectorType] FOREIGN KEY([idfsVectorType])
REFERENCES [dbo].[trtVectorType] ([idfsVectorType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtVectorSubType] CHECK CONSTRAINT [FK_trtVectorSubType_trtVectorType_idfsVectorType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBMainRiver]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBMainRiver_gisOtherBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisWKBMainRiver] CHECK CONSTRAINT [FK_gisWKBMainRiver_gisOtherBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AccessRuleActor]  WITH NOCHECK ADD  CONSTRAINT [FK_AccessRuleActor_AccessRule_AccessRuleID] FOREIGN KEY([AccessRuleID])
REFERENCES [dbo].[AccessRule] ([AccessRuleID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[AccessRuleActor] CHECK CONSTRAINT [FK_AccessRuleActor_AccessRule_AccessRuleID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTransferOutMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTransferOutMaterial_tlbMaterial] FOREIGN KEY([idfMaterial])
REFERENCES [dbo].[tlbMaterial] ([idfMaterial])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbTransferOutMaterial] CHECK CONSTRAINT [FK_tlbTransferOutMaterial_tlbMaterial]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtObjectTypeToObjectType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtObjectTypeToObjectType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtObjectTypeToObjectType] CHECK CONSTRAINT [FK_trtObjectTypeToObjectType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarmActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsGrazingPattern_R_1298] FOREIGN KEY([idfsGrazingPattern])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbFarmActual] CHECK CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsGrazingPattern_R_1298]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasView]  WITH NOCHECK ADD  CONSTRAINT [FK_tasView_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasView] CHECK CONSTRAINT [FK_tasView_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrMatrixVersionHeader]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrMatrixVersionHeader_trtBaseReference__idfsAggrMatrixType_R_1685] FOREIGN KEY([idfsMatrixType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbAggrMatrixVersionHeader] CHECK CONSTRAINT [FK_tlbAggrMatrixVersionHeader_trtBaseReference__idfsAggrMatrixType_R_1685]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuerySearchFieldCondition]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuerySearchFieldCondition_tasQuerySearchField__idfQuerySearchField_R_1343] FOREIGN KEY([idfQuerySearchField])
REFERENCES [dbo].[tasQuerySearchField] ([idfQuerySearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasQuerySearchFieldCondition] CHECK CONSTRAINT [FK_tasQuerySearchFieldCondition_tasQuerySearchField__idfQuerySearchField_R_1343]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtVectorType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtVectorType_trtBaseReference__idfsVectorType] FOREIGN KEY([idfsVectorType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtVectorType] CHECK CONSTRAINT [FK_trtVectorType_trtBaseReference__idfsVectorType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBMajorRoad]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBMajorRoad_gisCountry] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisWKBMajorRoad] CHECK CONSTRAINT [FK_gisWKBMajorRoad_gisCountry]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AccessRuleActor]  WITH NOCHECK ADD  CONSTRAINT [FK_AccessRuleActor_tflSiteGroup_ActorSiteGroupID] FOREIGN KEY([ActorSiteGroupID])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[AccessRuleActor] CHECK CONSTRAINT [FK_AccessRuleActor_tflSiteGroup_ActorSiteGroupID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTransferOutMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTransferOutMaterial_tlbTransferOUT] FOREIGN KEY([idfTransferOut])
REFERENCES [dbo].[tlbTransferOUT] ([idfTransferOut])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbTransferOutMaterial] CHECK CONSTRAINT [FK_tlbTransferOutMaterial_tlbTransferOUT]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestForDisease]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestForDisease_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtPensideTestForDisease] CHECK CONSTRAINT [FK_trtPensideTestForDisease_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarmActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsLivestockProductionType_R_1296] FOREIGN KEY([idfsLivestockProductionType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbFarmActual] CHECK CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsLivestockProductionType_R_1296]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasViewBand]  WITH NOCHECK ADD  CONSTRAINT [FK_tasViewBand_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasViewBand] CHECK CONSTRAINT [FK_tasViewBand_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbAnimal] FOREIGN KEY([idfAnimal])
REFERENCES [dbo].[tlbAnimal] ([idfAnimal])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbAnimal]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuerySearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuerySearchObject_tasQuerySearchObject__idfParentQuerySearchObject_R_1329] FOREIGN KEY([idfParentQuerySearchObject])
REFERENCES [dbo].[tasQuerySearchObject] ([idfQuerySearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasQuerySearchObject] CHECK CONSTRAINT [FK_tasQuerySearchObject_tasQuerySearchObject__idfParentQuerySearchObject_R_1329]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBMajorRoad]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBMajorRoad_gisOtherBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisWKBMajorRoad] CHECK CONSTRAINT [FK_gisWKBMajorRoad_gisOtherBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AccessRuleActor]  WITH NOCHECK ADD  CONSTRAINT [FK_AccessRuleActor_tlbEmployeGroup_ActorEmployeeGroupID] FOREIGN KEY([ActorEmployeeGroupID])
REFERENCES [dbo].[tlbEmployeeGroup] ([idfEmployeeGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[AccessRuleActor] CHECK CONSTRAINT [FK_AccessRuleActor_tlbEmployeGroup_ActorEmployeeGroupID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstLocalSamplesTestsPreferences]  WITH NOCHECK ADD  CONSTRAINT [FK_tstLocalSamplesTestsPreferences_tlbMaterial__idfMaterial] FOREIGN KEY([idfMaterial])
REFERENCES [dbo].[tlbMaterial] ([idfMaterial])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstLocalSamplesTestsPreferences] CHECK CONSTRAINT [FK_tstLocalSamplesTestsPreferences_tlbMaterial__idfMaterial]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestForDiseaseToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestForDiseaseToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtPensideTestForDiseaseToCP] CHECK CONSTRAINT [FK_trtPensideTestForDiseaseToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarmActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarmActual_tlbHumanActual__idfHumanActual_R_1470] FOREIGN KEY([idfHumanActual])
REFERENCES [dbo].[tlbHumanActual] ([idfHumanActual])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbFarmActual] CHECK CONSTRAINT [FK_tlbFarmActual_tlbHumanActual__idfHumanActual_R_1470]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasViewColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tasViewColumn_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasViewColumn] CHECK CONSTRAINT [FK_tasViewColumn_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbDepartment_idfInDepartment] FOREIGN KEY([idfInDepartment])
REFERENCES [dbo].[tlbDepartment] ([idfDepartment])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbDepartment_idfInDepartment]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuerySearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuerySearchObject_tasQuery__idflQueryName_R_1327] FOREIGN KEY([idflQuery])
REFERENCES [dbo].[tasQuery] ([idflQuery])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasQuerySearchObject] CHECK CONSTRAINT [FK_tasQuerySearchObject_tasQuery__idflQueryName_R_1327]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBPath]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBPath_gisCountry] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[gisWKBPath] CHECK CONSTRAINT [FK_gisWKBPath_gisCountry]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AccessRuleActor]  WITH NOCHECK ADD  CONSTRAINT [FK_AccessRuleActor_tstSite_ActorSiteID] FOREIGN KEY([ActorSiteID])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[AccessRuleActor] CHECK CONSTRAINT [FK_AccessRuleActor_tstSite_ActorSiteID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstLocalSamplesTestsPreferences]  WITH NOCHECK ADD  CONSTRAINT [FK_tstLocalSamplesTestsPreferences_tlbTesting__idfTesting] FOREIGN KEY([idfTesting])
REFERENCES [dbo].[tlbTesting] ([idfTesting])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstLocalSamplesTestsPreferences] CHECK CONSTRAINT [FK_tstLocalSamplesTestsPreferences_tlbTesting__idfTesting]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestTypeForVectorType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestTypeForVectorType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtPensideTestTypeForVectorType] CHECK CONSTRAINT [FK_trtPensideTestTypeForVectorType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarmActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarmActual_tlbGeoLocationShared__idfFarmAddress_R_1473] FOREIGN KEY([idfFarmAddress])
REFERENCES [dbo].[tlbGeoLocationShared] ([idfGeoLocationShared])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbFarmActual] CHECK CONSTRAINT [FK_tlbFarmActual_tlbGeoLocationShared__idfFarmAddress_R_1473]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tauColumn_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tauColumn] CHECK CONSTRAINT [FK_tauColumn_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbFreezerSubdivision] FOREIGN KEY([idfSubdivision])
REFERENCES [dbo].[tlbFreezerSubdivision] ([idfSubdivision])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbFreezerSubdivision]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuerySearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuerySearchObject_tasSearchObject__idfsSearchObject_R_1328] FOREIGN KEY([idfsSearchObject])
REFERENCES [dbo].[tasSearchObject] ([idfsSearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasQuerySearchObject] CHECK CONSTRAINT [FK_tasQuerySearchObject_tasSearchObject__idfsSearchObject_R_1328]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBPath]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBPath_gisOtherBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[gisWKBPath] CHECK CONSTRAINT [FK_gisWKBPath_gisOtherBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AccessRuleActor]  WITH NOCHECK ADD  CONSTRAINT [FK_AccessRuleActor_tstUserTable_ActorUserID] FOREIGN KEY([ActorUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[AccessRuleActor] CHECK CONSTRAINT [FK_AccessRuleActor_tstUserTable_ActorUserID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstLocalSamplesTestsPreferences]  WITH NOCHECK ADD  CONSTRAINT [FK_tstLocalSamplesTestsPreferences_tstUserTable__idfUserID] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tstLocalSamplesTestsPreferences] CHECK CONSTRAINT [FK_tstLocalSamplesTestsPreferences_tstUserTable__idfUserID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestTypeForVectorTypeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestTypeForVectorTypeToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtPensideTestTypeForVectorTypeToCP] CHECK CONSTRAINT [FK_trtPensideTestTypeForVectorTypeToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHerd]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHerd_tlbFarm__idfFarm_R_1480] FOREIGN KEY([idfFarm])
REFERENCES [dbo].[tlbFarm] ([idfFarm])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbHerd] CHECK CONSTRAINT [FK_tlbHerd_tlbFarm__idfFarm_R_1480]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditDetailCreate]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditDetailCreate_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tauDataAuditDetailCreate] CHECK CONSTRAINT [FK_tauDataAuditDetailCreate_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbHumanCase] FOREIGN KEY([idfHumanCase])
REFERENCES [dbo].[tlbHumanCase] ([idfHumanCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbHumanCase]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuerySearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuerySearchObject_trtBaseReference__idfsReportType] FOREIGN KEY([idfsReportType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasQuerySearchObject] CHECK CONSTRAINT [FK_tasQuerySearchObject_trtBaseReference__idfsReportType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRailroad]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRailroad_gisCountry] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[gisWKBRailroad] CHECK CONSTRAINT [FK_gisWKBRailroad_gisCountry]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AccessRulePermission]  WITH NOCHECK ADD  CONSTRAINT [FK_AccessRulePermission_AccessRule_AccessRuleID] FOREIGN KEY([AccessRuleID])
REFERENCES [dbo].[AccessRule] ([AccessRuleID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[AccessRulePermission] CHECK CONSTRAINT [FK_AccessRulePermission_AccessRule_AccessRuleID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionAction]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionAction_tlbMonitoringSession__idfMonitoringSession_R_1833] FOREIGN KEY([idfMonitoringSession])
REFERENCES [dbo].[tlbMonitoringSession] ([idfMonitoringSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbMonitoringSessionAction] CHECK CONSTRAINT [FK_tlbMonitoringSessionAction_tlbMonitoringSession__idfMonitoringSession_R_1833]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestTypeToTestResult]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestTypeToTestResult_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtPensideTestTypeToTestResult] CHECK CONSTRAINT [FK_trtPensideTestTypeToTestResult_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHerd]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHerd_tlbHerdActual] FOREIGN KEY([idfHerdActual])
REFERENCES [dbo].[tlbHerdActual] ([idfHerdActual])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbHerd] CHECK CONSTRAINT [FK_tlbHerd_tlbHerdActual]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditDetailDelete]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditDetailDelete_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tauDataAuditDetailDelete] CHECK CONSTRAINT [FK_tauDataAuditDetailDelete_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbHuman] FOREIGN KEY([idfHuman])
REFERENCES [dbo].[tlbHuman] ([idfHuman])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbHuman]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[VetDiseaseReportRelationship]  WITH NOCHECK ADD  CONSTRAINT [FK_VetDiseaseReportReln_BaseRef_RelTypeID] FOREIGN KEY([RelationshipTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[VetDiseaseReportRelationship] CHECK CONSTRAINT [FK_VetDiseaseReportReln_BaseRef_RelTypeID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchFieldToPersonalDataGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchFieldToPersonalDataGroup_tasSearchField_idfsSearchField] FOREIGN KEY([idfsSearchField])
REFERENCES [dbo].[tasSearchField] ([idfsSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasSearchFieldToPersonalDataGroup] CHECK CONSTRAINT [FK_tasSearchFieldToPersonalDataGroup_tasSearchField_idfsSearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNextNumbers]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNextNumbers_trtBaseReference__idfsNumberName_R_930] FOREIGN KEY([idfsNumberName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstNextNumbers] CHECK CONSTRAINT [FK_tstNextNumbers_trtBaseReference__idfsNumberName_R_930]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRailroad]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRailroad_gisOtherBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisWKBRailroad] CHECK CONSTRAINT [FK_gisWKBRailroad_gisOtherBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AspNetRoles]  WITH NOCHECK ADD  CONSTRAINT [FK_ASPNetRole_tlbEmployeeGRoup_idfemployeeGroup] FOREIGN KEY([idfEmployeeGroup])
REFERENCES [dbo].[tlbEmployeeGroup] ([idfEmployeeGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[AspNetRoles] CHECK CONSTRAINT [FK_ASPNetRole_tlbEmployeeGRoup_idfemployeeGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionAction]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionAction_tlbPerson__idfPersonEnteredBy_R_1836] FOREIGN KEY([idfPersonEnteredBy])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbMonitoringSessionAction] CHECK CONSTRAINT [FK_tlbMonitoringSessionAction_tlbPerson__idfPersonEnteredBy_R_1836]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestTypeToTestResultToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestTypeToTestResultToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtPensideTestTypeToTestResultToCP] CHECK CONSTRAINT [FK_trtPensideTestTypeToTestResultToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionSummary]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionSummary_tlbFarm__idfFarm] FOREIGN KEY([idfFarm])
REFERENCES [dbo].[tlbFarm] ([idfFarm])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbMonitoringSessionSummary] CHECK CONSTRAINT [FK_tlbMonitoringSessionSummary_tlbFarm__idfFarm]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditDetailRestore]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditDetailRestore_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tauDataAuditDetailRestore] CHECK CONSTRAINT [FK_tauDataAuditDetailRestore_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbMaterial__idfParentMaterial_R_1222] FOREIGN KEY([idfParentMaterial])
REFERENCES [dbo].[tlbMaterial] ([idfMaterial])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbMaterial__idfParentMaterial_R_1222]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchFieldToPersonalDataGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchFieldToPersonalDataGroup_tstPersonalDataGroup_idfPersonalDataGroup] FOREIGN KEY([idfPersonalDataGroup])
REFERENCES [dbo].[tstPersonalDataGroup] ([idfPersonalDataGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasSearchFieldToPersonalDataGroup] CHECK CONSTRAINT [FK_tasSearchFieldToPersonalDataGroup_tstPersonalDataGroup_idfPersonalDataGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotification]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotification_trtBaseReference__idfsNotificationObjectType_R_1307] FOREIGN KEY([idfsNotificationObjectType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstNotification] CHECK CONSTRAINT [FK_tstNotification_trtBaseReference__idfsNotificationObjectType_R_1307]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRiver]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRiver_gisCountry] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[gisWKBRiver] CHECK CONSTRAINT [FK_gisWKBRiver_gisCountry]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AspNetUserClaims]  WITH NOCHECK ADD  CONSTRAINT [FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId] FOREIGN KEY([UserId])
REFERENCES [dbo].[AspNetUsers] ([Id])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[AspNetUserClaims] CHECK CONSTRAINT [FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionAction]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionAction_trtBaseReference__idfsMonitoringSessionActionType_R_1834] FOREIGN KEY([idfsMonitoringSessionActionType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbMonitoringSessionAction] CHECK CONSTRAINT [FK_tlbMonitoringSessionAction_trtBaseReference__idfsMonitoringSessionActionType_R_1834]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtProphilacticAction]  WITH NOCHECK ADD  CONSTRAINT [FK_trtProphilacticAction_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtProphilacticAction] CHECK CONSTRAINT [FK_trtProphilacticAction_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionSummary]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionSummary_tlbMonitoringSession__idfMonitoringSession] FOREIGN KEY([idfMonitoringSession])
REFERENCES [dbo].[tlbMonitoringSession] ([idfMonitoringSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbMonitoringSessionSummary] CHECK CONSTRAINT [FK_tlbMonitoringSessionSummary_tlbMonitoringSession__idfMonitoringSession]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditDetailUpdate]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditDetailUpdate_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tauDataAuditDetailUpdate] CHECK CONSTRAINT [FK_tauDataAuditDetailUpdate_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtResourceTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_trtResourceTranslation_idfsLanguage] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtResourceTranslation] CHECK CONSTRAINT [FK_trtResourceTranslation_idfsLanguage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbMaterial__idfRootMaterial] FOREIGN KEY([idfRootMaterial])
REFERENCES [dbo].[tlbMaterial] ([idfMaterial])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbMaterial__idfRootMaterial]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbCampaign]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbCampaign_trtBaseRef_CampaignCategory] FOREIGN KEY([CampaignCategoryID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbCampaign] CHECK CONSTRAINT [FK_tlbCampaign_trtBaseRef_CampaignCategory]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchFieldsWithRelatedValues]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchFieldsWithRelatedValues_tasSearchField__idfsRelatedSearchField] FOREIGN KEY([idfsRelatedSearchField])
REFERENCES [dbo].[tasSearchField] ([idfsSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasSearchFieldsWithRelatedValues] CHECK CONSTRAINT [FK_tasSearchFieldsWithRelatedValues_tasSearchField__idfsRelatedSearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotification]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotification_trtBaseReference__idfsNotificationType_R_1306] FOREIGN KEY([idfsNotificationType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstNotification] CHECK CONSTRAINT [FK_tstNotification_trtBaseReference__idfsNotificationType_R_1306]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRiver]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRiver_gisOtherBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[gisWKBRiver] CHECK CONSTRAINT [FK_gisWKBRiver_gisOtherBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AspNetUserLogins]  WITH NOCHECK ADD  CONSTRAINT [FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId] FOREIGN KEY([UserId])
REFERENCES [dbo].[AspNetUsers] ([Id])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[AspNetUserLogins] CHECK CONSTRAINT [FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionAction]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionAction_trtBaseReference__idfsMonitoringSessionActionStatus_R_1835] FOREIGN KEY([idfsMonitoringSessionActionStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbMonitoringSessionAction] CHECK CONSTRAINT [FK_tlbMonitoringSessionAction_trtBaseReference__idfsMonitoringSessionActionStatus_R_1835]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtReferenceType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtReferenceType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtReferenceType] CHECK CONSTRAINT [FK_trtReferenceType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionSummary]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionSummary_tlbSpecies__idfSpecies] FOREIGN KEY([idfSpecies])
REFERENCES [dbo].[tlbSpecies] ([idfSpecies])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbMonitoringSessionSummary] CHECK CONSTRAINT [FK_tlbMonitoringSessionSummary_tlbSpecies__idfSpecies]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditEvent_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tauDataAuditEvent] CHECK CONSTRAINT [FK_tauDataAuditEvent_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_trtSampleType__idfsSampleType] FOREIGN KEY([idfsSampleType])
REFERENCES [dbo].[trtSampleType] ([idfsSampleType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_trtSampleType__idfsSampleType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFreezerSubdivision]  WITH NOCHECK ADD  CONSTRAINT [FK_FreezerSubdivision_BaseRef_BoxSizeID] FOREIGN KEY([BoxSizeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbFreezerSubdivision] CHECK CONSTRAINT [FK_FreezerSubdivision_BaseRef_BoxSizeID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchFieldsWithRelatedValues]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchFieldsWithRelatedValues_tasSearchField__idfsSearchField] FOREIGN KEY([idfsSearchField])
REFERENCES [dbo].[tasSearchField] ([idfsSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasSearchFieldsWithRelatedValues] CHECK CONSTRAINT [FK_tasSearchFieldsWithRelatedValues_tasSearchField__idfsSearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotification]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotification_trtBaseReference__idfsTargetSiteType_R_1304] FOREIGN KEY([idfsTargetSiteType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstNotification] CHECK CONSTRAINT [FK_tstNotification_trtBaseReference__idfsTargetSiteType_R_1304]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRiverPolygon]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRiverPolygon_gisCountry] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[gisWKBRiverPolygon] CHECK CONSTRAINT [FK_gisWKBRiverPolygon_gisCountry]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ASPNetUserPreviousPasswords]  WITH NOCHECK ADD  CONSTRAINT [FK_ASPNetUserPreviousPasswords_AspNetUsers_Id] FOREIGN KEY([Id])
REFERENCES [dbo].[AspNetUsers] ([Id])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[ASPNetUserPreviousPasswords] CHECK CONSTRAINT [FK_ASPNetUserPreviousPasswords_AspNetUsers_Id]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionSummaryDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionSummaryDiagnosis_tlbMonitoringSessionSummary__idfMonitoringSessionSummary] FOREIGN KEY([idfMonitoringSessionSummary])
REFERENCES [dbo].[tlbMonitoringSessionSummary] ([idfMonitoringSessionSummary])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbMonitoringSessionSummaryDiagnosis] CHECK CONSTRAINT [FK_tlbMonitoringSessionSummaryDiagnosis_tlbMonitoringSessionSummary__idfMonitoringSessionSummary]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtReportDiagnosisGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_trtReportDiagnosisGroup_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtReportDiagnosisGroup] CHECK CONSTRAINT [FK_trtReportDiagnosisGroup_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionSummary]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionSummary_trtBaseReference__idfsAnimalSex] FOREIGN KEY([idfsAnimalSex])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbMonitoringSessionSummary] CHECK CONSTRAINT [FK_tlbMonitoringSessionSummary_trtBaseReference__idfsAnimalSex]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauTable]  WITH NOCHECK ADD  CONSTRAINT [FK_tauTable_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tauTable] CHECK CONSTRAINT [FK_tauTable_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbSpecies] FOREIGN KEY([idfSpecies])
REFERENCES [dbo].[tlbSpecies] ([idfSpecies])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbSpecies]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[EventSubscription]  WITH NOCHECK ADD  CONSTRAINT [FK_EventSubscription_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[EventSubscription] CHECK CONSTRAINT [FK_EventSubscription_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanCase_BaseRef_SpecificVaccinationAdministered] FOREIGN KEY([idfsYNSpecificVaccinationAdministered])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_HumanCase_BaseRef_SpecificVaccinationAdministered]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtBaseReference]  WITH NOCHECK ADD  CONSTRAINT [FK_trtBaseReference_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtBaseReference] CHECK CONSTRAINT [FK_trtBaseReference_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchObjectToSearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchObjectToSearchObject_tasSearchObject__idfsRelatedSearchObject_R_1713] FOREIGN KEY([idfsRelatedSearchObject])
REFERENCES [dbo].[tasSearchObject] ([idfsSearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasSearchObjectToSearchObject] CHECK CONSTRAINT [FK_tasSearchObjectToSearchObject_tasSearchObject__idfsRelatedSearchObject_R_1713]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotification]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotification_tstUserTable__idfUserID_R_793] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstNotification] CHECK CONSTRAINT [FK_tstNotification_tstUserTable__idfUserID_R_793]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[hmisDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_hmisDiagnosis_trtDiagnosis__idfsDiagnosis] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[hmisDiagnosis] CHECK CONSTRAINT [FK_hmisDiagnosis_trtDiagnosis__idfsDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRiverPolygon]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRiverPolygon_gisOtherBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisWKBRiverPolygon] CHECK CONSTRAINT [FK_gisWKBRiverPolygon_gisOtherBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AspNetUserRoles]  WITH NOCHECK ADD  CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId] FOREIGN KEY([RoleId])
REFERENCES [dbo].[AspNetRoles] ([Id])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[AspNetUserRoles] CHECK CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionSummaryDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionSummaryDiagnosis_trtDiagnosis__idfsDiagnosis] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbMonitoringSessionSummaryDiagnosis] CHECK CONSTRAINT [FK_tlbMonitoringSessionSummaryDiagnosis_trtDiagnosis__idfsDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtReportRows]  WITH NOCHECK ADD  CONSTRAINT [FK_trtReportRows_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtReportRows] CHECK CONSTRAINT [FK_trtReportRows_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_tlbFarm] FOREIGN KEY([idfFarm])
REFERENCES [dbo].[tlbFarm] ([idfFarm])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_tlbFarm]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AuditEventSystemLog]  WITH NOCHECK ADD  CONSTRAINT [FK_AuditEventSystemLog_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[AuditEventSystemLog] CHECK CONSTRAINT [FK_AuditEventSystemLog_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tdeDataExport]  WITH NOCHECK ADD  CONSTRAINT [FK_tdeDataExport_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tdeDataExport] CHECK CONSTRAINT [FK_tdeDataExport_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbMonitoringSession] FOREIGN KEY([idfMonitoringSession])
REFERENCES [dbo].[tlbMonitoringSession] ([idfMonitoringSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbMonitoringSession]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanCase_BaseRef_PreviouslySoughtCare] FOREIGN KEY([idfsYNPreviouslySoughtCare])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_HumanCase_BaseRef_PreviouslySoughtCare]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtBaseReference]  WITH NOCHECK ADD  CONSTRAINT [FK_trtBaseReference_trtReferenceType__idfsReferenceType_R_381] FOREIGN KEY([idfsReferenceType])
REFERENCES [dbo].[trtReferenceType] ([idfsReferenceType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtBaseReference] CHECK CONSTRAINT [FK_trtBaseReference_trtReferenceType__idfsReferenceType_R_381]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchObjectToSearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchObjectToSearchObject_tasSearchObject__idfsParentSearchObject_R_1714] FOREIGN KEY([idfsParentSearchObject])
REFERENCES [dbo].[tasSearchObject] ([idfsSearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasSearchObjectToSearchObject] CHECK CONSTRAINT [FK_tasSearchObjectToSearchObject_tasSearchObject__idfsParentSearchObject_R_1714]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotification]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotification_tstUserTable__idfTargetUserID_R_720] FOREIGN KEY([idfTargetUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstNotification] CHECK CONSTRAINT [FK_tstNotification_tstUserTable__idfTargetUserID_R_720]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[hmisLog]  WITH NOCHECK ADD  CONSTRAINT [FK_hmisLog_tlbHumanCase__idfsHumanCase] FOREIGN KEY([idfsHumanCase])
REFERENCES [dbo].[tlbHumanCase] ([idfHumanCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[hmisLog] CHECK CONSTRAINT [FK_hmisLog_tlbHumanCase__idfsHumanCase]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBSmallRiver]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBSmallRiver_gisCountry] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisWKBSmallRiver] CHECK CONSTRAINT [FK_gisWKBSmallRiver_gisCountry]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AspNetUserRoles]  WITH NOCHECK ADD  CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId] FOREIGN KEY([UserId])
REFERENCES [dbo].[AspNetUsers] ([Id])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[AspNetUserRoles] CHECK CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionSummarySample]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionSummarySample_tlbMonitoringSessionSummary__idfMonitoringSessionSummary] FOREIGN KEY([idfMonitoringSessionSummary])
REFERENCES [dbo].[tlbMonitoringSessionSummary] ([idfMonitoringSessionSummary])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbMonitoringSessionSummarySample] CHECK CONSTRAINT [FK_tlbMonitoringSessionSummarySample_tlbMonitoringSessionSummary__idfMonitoringSessionSummary]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDecorElementLine]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDecorElementLine_ffDecorElement__idfDecorElement_R_1401] FOREIGN KEY([idfDecorElement])
REFERENCES [dbo].[ffDecorElement] ([idfDecorElement])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[ffDecorElementLine] CHECK CONSTRAINT [FK_ffDecorElementLine_ffDecorElement__idfDecorElement_R_1401]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSampleType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSampleType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtSampleType] CHECK CONSTRAINT [FK_trtSampleType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_tlbMonitoringSession__idfParentMonitoringSession] FOREIGN KEY([idfParentMonitoringSession])
REFERENCES [dbo].[tlbMonitoringSession] ([idfMonitoringSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_tlbMonitoringSession__idfParentMonitoringSession]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tdeDataExportDetail]  WITH NOCHECK ADD  CONSTRAINT [FK_tdeDataExportDetail_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tdeDataExportDetail] CHECK CONSTRAINT [FK_tdeDataExportDetail_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbPerson__idfFieldCollectedByPerson_R_1529] FOREIGN KEY([idfFieldCollectedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbPerson__idfFieldCollectedByPerson_R_1529]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanCase_BaseRef_ExposureLocationKnown] FOREIGN KEY([idfsYNExposureLocationKnown])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_HumanCase_BaseRef_ExposureLocationKnown]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchObjectToSystemFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchObjectToSystemFunction_tasSearchObject_idfsSearchObject] FOREIGN KEY([idfsSearchObject])
REFERENCES [dbo].[tasSearchObject] ([idfsSearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasSearchObjectToSystemFunction] CHECK CONSTRAINT [FK_tasSearchObjectToSystemFunction_tasSearchObject_idfsSearchObject]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[hmisRayon]  WITH NOCHECK ADD  CONSTRAINT [FK_hmisRayon_trtRayon__idfsRayon] FOREIGN KEY([idfsRayon])
REFERENCES [dbo].[gisRayon] ([idfsRayon])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[hmisRayon] CHECK CONSTRAINT [FK_hmisRayon_trtRayon__idfsRayon]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBSmallRiver]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBSmallRiver_gisOtherBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[gisWKBSmallRiver] CHECK CONSTRAINT [FK_gisWKBSmallRiver_gisOtherBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AspNetUsers]  WITH NOCHECK ADD  CONSTRAINT [FK_AspNetUsers_tstUserTable_UserID] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[AspNetUsers] CHECK CONSTRAINT [FK_AspNetUsers_tstUserTable_UserID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionSummarySample]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionSummarySample_trtSampleType__idfsSampleType] FOREIGN KEY([idfsSampleType])
REFERENCES [dbo].[trtSampleType] ([idfsSampleType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbMonitoringSessionSummarySample] CHECK CONSTRAINT [FK_tlbMonitoringSessionSummarySample_trtSampleType__idfsSampleType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupSystemFunctionToOperation]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupSystemFunctionToOperation_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[LkupSystemFunctionToOperation] CHECK CONSTRAINT [FK_LkupSystemFunctionToOperation_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDecorElementText]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDecorElementText_ffDecorElement__idfDecorElement_R_1374] FOREIGN KEY([idfDecorElement])
REFERENCES [dbo].[ffDecorElement] ([idfDecorElement])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[ffDecorElementText] CHECK CONSTRAINT [FK_ffDecorElementText_ffDecorElement__idfDecorElement_R_1374]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSampleTypeForVectorType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSampleTypeForVectorType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtSampleTypeForVectorType] CHECK CONSTRAINT [FK_trtSampleTypeForVectorType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_tlbObservation__idfObservation_R_1447] FOREIGN KEY([idfObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_tlbObservation__idfObservation_R_1447]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AuditEventSystemLog]  WITH NOCHECK ADD  CONSTRAINT [FK_AuditEventSystemLog_BaseRef_AuditObjectID] FOREIGN KEY([AuditObjectID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[AuditEventSystemLog] CHECK CONSTRAINT [FK_AuditEventSystemLog_BaseRef_AuditObjectID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tdeDataExportDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tdeDataExportDiagnosis_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tdeDataExportDiagnosis] CHECK CONSTRAINT [FK_tdeDataExportDiagnosis_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbOffice__idfFieldCollectedByOffice_R_1530] FOREIGN KEY([idfFieldCollectedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbOffice__idfFieldCollectedByOffice_R_1530]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumaCase_BaseRef_DiseaseReportTypeID] FOREIGN KEY([DiseaseReportTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumaCase_BaseRef_DiseaseReportTypeID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchObjectToSystemFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchObjectToSystemFunction_trtSystemFunction_idfsSystemFunction] FOREIGN KEY([idfsSystemFunction])
REFERENCES [dbo].[trtSystemFunction] ([idfsSystemFunction])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasSearchObjectToSystemFunction] CHECK CONSTRAINT [FK_tasSearchObjectToSystemFunction_trtSystemFunction_idfsSystemFunction]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbxSiteDocumentMap]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbxSiteDocumentMap_LkupEIDSSMenu] FOREIGN KEY([EIDSSMenuId])
REFERENCES [dbo].[LkupEIDSSMenu] ([EIDSSMenuID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbxSiteDocumentMap] CHECK CONSTRAINT [FK_tlbxSiteDocumentMap_LkupEIDSSMenu]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[hmisRegion]  WITH NOCHECK ADD  CONSTRAINT [FK_hmisRegion_trtRegion__idfsRegion] FOREIGN KEY([idfsRegion])
REFERENCES [dbo].[gisRegion] ([idfsRegion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[hmisRegion] CHECK CONSTRAINT [FK_hmisRegion_trtRegion__idfsRegion]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocation_gisCountry__idfsCountry_R_972] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbGeoLocation] CHECK CONSTRAINT [FK_tlbGeoLocation_gisCountry__idfsCountry_R_972]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AspNetUserTokens]  WITH NOCHECK ADD  CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY([UserId])
REFERENCES [dbo].[AspNetUsers] ([Id])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[AspNetUserTokens] CHECK CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionToDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionToDiagnosis_trtDiagnosis__idfsDiagnosis_R_1757] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbMonitoringSessionToDiagnosis] CHECK CONSTRAINT [FK_tlbMonitoringSessionToDiagnosis_trtDiagnosis__idfsDiagnosis_R_1757]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupSystemFunctionToOperation]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupSystemFunctionToOperation_BaseReference_SystemFunction] FOREIGN KEY([SystemFunctionID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[LkupSystemFunctionToOperation] CHECK CONSTRAINT [FK_LkupSystemFunctionToOperation_BaseReference_SystemFunction]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDecorElementText]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDecorElementText_trtBaseReference__idfsBaseReference_R_1389] FOREIGN KEY([idfsBaseReference])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[ffDecorElementText] CHECK CONSTRAINT [FK_ffDecorElementText_trtBaseReference__idfsBaseReference_R_1389]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSampleTypeForVectorTypeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSampleTypeForVectorTypeToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtSampleTypeForVectorTypeToCP] CHECK CONSTRAINT [FK_trtSampleTypeForVectorTypeToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_tlbOffice__idfInvestigatedByOffice] FOREIGN KEY([idfInvestigatedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_tlbOffice__idfInvestigatedByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AuditEventSystemLog]  WITH NOCHECK ADD  CONSTRAINT [FK_AuditEventSystemLog_idfsModule] FOREIGN KEY([idfsModule])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[AuditEventSystemLog] CHECK CONSTRAINT [FK_AuditEventSystemLog_idfsModule]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tdeDataExportFFReference]  WITH NOCHECK ADD  CONSTRAINT [FK_tdeDataExportFFReference_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tdeDataExportFFReference] CHECK CONSTRAINT [FK_tdeDataExportFFReference_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbTesting__idfMainTest] FOREIGN KEY([idfMainTest])
REFERENCES [dbo].[tlbTesting] ([idfTesting])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbTesting__idfMainTest]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuerySearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuerySearchObject_tasSearchObject__idfsSearchObject_R_1328_1] FOREIGN KEY([idfsSearchObject])
REFERENCES [dbo].[tasSearchObject] ([idfsSearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasglQuerySearchObject] CHECK CONSTRAINT [FK_tasglQuerySearchObject_tasSearchObject__idfsSearchObject_R_1328_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotificationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotificationShared_trtBaseReference__idfsNotificationObjectType] FOREIGN KEY([idfsNotificationObjectType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstNotificationShared] CHECK CONSTRAINT [FK_tstNotificationShared_trtBaseReference__idfsNotificationObjectType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[hmisSettlement]  WITH NOCHECK ADD  CONSTRAINT [FK_hmisSettlement_trtSettlement__idfsSettlement] FOREIGN KEY([idfsSettlement])
REFERENCES [dbo].[gisSettlement] ([idfsSettlement])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[hmisSettlement] CHECK CONSTRAINT [FK_hmisSettlement_trtSettlement__idfsSettlement]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocation_gisRayon__idfsRayon_R_974] FOREIGN KEY([idfsRayon])
REFERENCES [dbo].[gisRayon] ([idfsRayon])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbGeoLocation] CHECK CONSTRAINT [FK_tlbGeoLocation_gisRayon__idfsRayon_R_974]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AuditEventSystemLog]  WITH NOCHECK ADD  CONSTRAINT [FK_AuditEventSystemLog_AppSessionLog] FOREIGN KEY([AppSessionLogID])
REFERENCES [dbo].[AppSessionLog] ([AppSessionLogUID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[AuditEventSystemLog] CHECK CONSTRAINT [FK_AuditEventSystemLog_AppSessionLog]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionToDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionToDiagnosis_tlbMonitoringSession__idfMonitoringSession_R_1750] FOREIGN KEY([idfMonitoringSession])
REFERENCES [dbo].[tlbMonitoringSession] ([idfMonitoringSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbMonitoringSessionToDiagnosis] CHECK CONSTRAINT [FK_tlbMonitoringSessionToDiagnosis_tlbMonitoringSession__idfMonitoringSession_R_1750]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupSystemFunctionToOperation]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupSystemFunctionToOperation_BaseReference_SysFunctionOperationID] FOREIGN KEY([SystemFunctionOperationID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[LkupSystemFunctionToOperation] CHECK CONSTRAINT [FK_LkupSystemFunctionToOperation_BaseReference_SysFunctionOperationID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDecorElement]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDecorElement_trtBaseReference__idfsDecorElementType_R_1376] FOREIGN KEY([idfsDecorElementType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[ffDecorElement] CHECK CONSTRAINT [FK_ffDecorElement_trtBaseReference__idfsDecorElementType_R_1376]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSanitaryAction]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSanitaryAction_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtSanitaryAction] CHECK CONSTRAINT [FK_trtSanitaryAction_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_tlbOffice__idfReportedByOffice] FOREIGN KEY([idfReportedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_tlbOffice__idfReportedByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tdeDataExportProblem]  WITH NOCHECK ADD  CONSTRAINT [FK_tdeDataExportProblem_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tdeDataExportProblem] CHECK CONSTRAINT [FK_tdeDataExportProblem_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbVectorSurveillanceSession_idfVectorSurveillanceSession] FOREIGN KEY([idfVectorSurveillanceSession])
REFERENCES [dbo].[tlbVectorSurveillanceSession] ([idfVectorSurveillanceSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbVectorSurveillanceSession_idfVectorSurveillanceSession]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtResourceSetHierarchy]  WITH NOCHECK ADD  CONSTRAINT [FK_trtResourceSetHierarchy_idfsResourceSet] FOREIGN KEY([idfsResourceSet])
REFERENCES [dbo].[trtResourceSet] ([idfsResourceSet])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtResourceSetHierarchy] CHECK CONSTRAINT [FK_trtResourceSetHierarchy_idfsResourceSet]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LOINCEidssMapping]  WITH NOCHECK ADD  CONSTRAINT [FK_LOINCEidssMapping_trtBaseReference__idfsBaseReference] FOREIGN KEY([idfsBaseReference])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[LOINCEidssMapping] CHECK CONSTRAINT [FK_LOINCEidssMapping_trtBaseReference__idfsBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuerySearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuerySearchObject_tasglQuerySearchObject__idfParentQuerySearchObject_R_1329_1] FOREIGN KEY([idfParentQuerySearchObject])
REFERENCES [dbo].[tasglQuerySearchObject] ([idfQuerySearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasglQuerySearchObject] CHECK CONSTRAINT [FK_tasglQuerySearchObject_tasglQuerySearchObject__idfParentQuerySearchObject_R_1329_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotificationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotificationShared_trtBaseReference__idfsNotificationType] FOREIGN KEY([idfsNotificationType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstNotificationShared] CHECK CONSTRAINT [FK_tstNotificationShared_trtBaseReference__idfsNotificationType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocation_gisRegion__idfsRegion_R_973] FOREIGN KEY([idfsRegion])
REFERENCES [dbo].[gisRegion] ([idfsRegion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbGeoLocation] CHECK CONSTRAINT [FK_tlbGeoLocation_gisRegion__idfsRegion_R_973]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AuditEventSystemLog]  WITH NOCHECK ADD  CONSTRAINT [FK_AuditEventSystemLog_tstSite_idfSiteID] FOREIGN KEY([idfSiteID])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[AuditEventSystemLog] CHECK CONSTRAINT [FK_AuditEventSystemLog_tstSite_idfSiteID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionToDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionToDiagnosis_trtSpeciesType__idfsSpeciesType] FOREIGN KEY([idfsSpeciesType])
REFERENCES [dbo].[trtSpeciesType] ([idfsSpeciesType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbMonitoringSessionToDiagnosis] CHECK CONSTRAINT [FK_tlbMonitoringSessionToDiagnosis_trtSpeciesType__idfsSpeciesType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDecorElement]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDecorElement_trtBaseReference__idfsLanguage_R_1375] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[ffDecorElement] CHECK CONSTRAINT [FK_ffDecorElement_trtBaseReference__idfsLanguage_R_1375]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesContentInCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesContentInCustomReport_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtSpeciesContentInCustomReport] CHECK CONSTRAINT [FK_trtSpeciesContentInCustomReport_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_tlbOutbreak__idfOutbreak] FOREIGN KEY([idfOutbreak])
REFERENCES [dbo].[tlbOutbreak] ([idfOutbreak])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_tlbOutbreak__idfOutbreak]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflAggrCaseFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflAggrCaseFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tflAggrCaseFiltered] CHECK CONSTRAINT [FK_tflAggrCaseFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbVector_idfVector] FOREIGN KEY([idfVector])
REFERENCES [dbo].[tlbVector] ([idfVector])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbVector_idfVector]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtResourceSetHierarchy]  WITH NOCHECK ADD  CONSTRAINT [FK_trtResourceSetHierarchy_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtResourceSetHierarchy] CHECK CONSTRAINT [FK_trtResourceSetHierarchy_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuerySearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuerySearchObject_tasglQuery__idfsQueryName_R_1327_1] FOREIGN KEY([idfsQuery])
REFERENCES [dbo].[tasglQuery] ([idfsQuery])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasglQuerySearchObject] CHECK CONSTRAINT [FK_tasglQuerySearchObject_tasglQuery__idfsQueryName_R_1327_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotificationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotificationShared_trtBaseReference__idfsTargetSiteType] FOREIGN KEY([idfsTargetSiteType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tstNotificationShared] CHECK CONSTRAINT [FK_tstNotificationShared_trtBaseReference__idfsTargetSiteType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocation_gisSettlement__idfsSettlement_R_1218] FOREIGN KEY([idfsSettlement])
REFERENCES [dbo].[gisSettlement] ([idfsSettlement])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbGeoLocation] CHECK CONSTRAINT [FK_tlbGeoLocation_gisSettlement__idfsSettlement_R_1218]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AuditEventSystemLog]  WITH NOCHECK ADD  CONSTRAINT [FK_AuditEventSystemLog_UserTable_idfAppUserID] FOREIGN KEY([idfAppUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[AuditEventSystemLog] CHECK CONSTRAINT [FK_AuditEventSystemLog_UserTable_idfAppUserID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionToDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionToDiagnosis_trtSampleType__idfsSampleType] FOREIGN KEY([idfsSampleType])
REFERENCES [dbo].[trtSampleType] ([idfsSampleType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbMonitoringSessionToDiagnosis] CHECK CONSTRAINT [FK_tlbMonitoringSessionToDiagnosis_trtSampleType__idfsSampleType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDecorElement]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDecorElement_ffFormTemplate__idfsFormTemplate_R_1373] FOREIGN KEY([idfsFormTemplate])
REFERENCES [dbo].[ffFormTemplate] ([idfsFormTemplate])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[ffDecorElement] CHECK CONSTRAINT [FK_ffDecorElement_ffFormTemplate__idfsFormTemplate_R_1373]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesGroup_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtSpeciesGroup] CHECK CONSTRAINT [FK_trtSpeciesGroup_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_tlbPerson__idfPersonEnteredBy_R_1507] FOREIGN KEY([idfPersonEnteredBy])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_tlbPerson__idfPersonEnteredBy_R_1507]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflBasicSyndromicSurveillanceAggregateHeaderFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflBasicSyndromicSurveillanceAggregateHeaderFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tflBasicSyndromicSurveillanceAggregateHeaderFiltered] CHECK CONSTRAINT [FK_tflBasicSyndromicSurveillanceAggregateHeaderFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_trtBaseReference_idfsSampleStatus] FOREIGN KEY([idfsSampleStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_trtBaseReference_idfsSampleStatus]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSession_trtBaseRef_SessionCategoryID] FOREIGN KEY([SessionCategoryID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbMonitoringSession] CHECK CONSTRAINT [FK_tlbMonitoringSession_trtBaseRef_SessionCategoryID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtResourceSetToResource]  WITH NOCHECK ADD  CONSTRAINT [FK_trtResourceSetToResource_idfsResourceSet] FOREIGN KEY([idfsResourceSet])
REFERENCES [dbo].[trtResourceSet] ([idfsResourceSet])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtResourceSetToResource] CHECK CONSTRAINT [FK_trtResourceSetToResource_idfsResourceSet]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LOINCEidssMapping]  WITH NOCHECK ADD  CONSTRAINT [FK_LOINCEidssMapping_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[LOINCEidssMapping] CHECK CONSTRAINT [FK_LOINCEidssMapping_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuerySearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuerySearchObject_trtBaseReference__idfsReportType] FOREIGN KEY([idfsReportType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasglQuerySearchObject] CHECK CONSTRAINT [FK_tasglQuerySearchObject_trtBaseReference__idfsReportType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotificationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotificationShared_tstUserTable__idfUserID] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstNotificationShared] CHECK CONSTRAINT [FK_tstNotificationShared_tstUserTable__idfUserID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocation_trtBaseReference__idfsResidentType_R_1277] FOREIGN KEY([idfsResidentType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbGeoLocation] CHECK CONSTRAINT [FK_tlbGeoLocation_trtBaseReference__idfsResidentType_R_1277]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AuditEventUserLog]  WITH NOCHECK ADD  CONSTRAINT [FK_AuditEventUserLog_AuditEventSystemLog_LogUID] FOREIGN KEY([AuditEventSystemLogUID])
REFERENCES [dbo].[AuditEventSystemLog] ([AuditEventSystemLogUID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[AuditEventUserLog] CHECK CONSTRAINT [FK_AuditEventUserLog_AuditEventSystemLog_LogUID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTestAmendmentHistory]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTestAmendmentHistory_tlbOffice__idfAmendByOffice] FOREIGN KEY([idfAmendByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbTestAmendmentHistory] CHECK CONSTRAINT [FK_tlbTestAmendmentHistory_tlbOffice__idfAmendByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDecorElement]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDecorElement_ffSection__idfsSection_R_1379] FOREIGN KEY([idfsSection])
REFERENCES [dbo].[ffSection] ([idfsSection])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[ffDecorElement] CHECK CONSTRAINT [FK_ffDecorElement_ffSection__idfsSection_R_1379]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesToGroupForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesToGroupForCustomReport_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtSpeciesToGroupForCustomReport] CHECK CONSTRAINT [FK_trtSpeciesToGroupForCustomReport_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_tlbPerson__idfPersonInvestigatedBy_R_1506] FOREIGN KEY([idfPersonInvestigatedBy])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_tlbPerson__idfPersonInvestigatedBy_R_1506]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflBasicSyndromicSurveillanceFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflBasicSyndromicSurveillanceFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tflBasicSyndromicSurveillanceFiltered] CHECK CONSTRAINT [FK_tflBasicSyndromicSurveillanceFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbPerson] FOREIGN KEY([idfDestroyedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AppSessionLog]  WITH NOCHECK ADD  CONSTRAINT [FK_AppSessionLog_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[AppSessionLog] CHECK CONSTRAINT [FK_AppSessionLog_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOffice]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOffice_BaseRef_] FOREIGN KEY([OrganizationTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbOffice] CHECK CONSTRAINT [FK_tlbOffice_BaseRef_]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchObject_trtBaseReference__idfsSearchObject_R_1357] FOREIGN KEY([idfsSearchObject])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasSearchObject] CHECK CONSTRAINT [FK_tasSearchObject_trtBaseReference__idfsSearchObject_R_1357]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotificationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotificationShared_tstUserTable__idfTargetUserID] FOREIGN KEY([idfTargetUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstNotificationShared] CHECK CONSTRAINT [FK_tstNotificationShared_tstUserTable__idfTargetUserID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocation_trtBaseReference__idfsGroundType_R_1239] FOREIGN KEY([idfsGroundType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbGeoLocation] CHECK CONSTRAINT [FK_tlbGeoLocation_trtBaseReference__idfsGroundType_R_1239]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AuditEventUserLog]  WITH NOCHECK ADD  CONSTRAINT [FK_AuditEventUserLog_tstSite_idfSiteID] FOREIGN KEY([idfSiteID])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[AuditEventUserLog] CHECK CONSTRAINT [FK_AuditEventUserLog_tstSite_idfSiteID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTestAmendmentHistory]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTestAmendmentHistory_tlbPerson__idfAmendByPerson] FOREIGN KEY([idfAmendByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbTestAmendmentHistory] CHECK CONSTRAINT [FK_tlbTestAmendmentHistory_tlbPerson__idfAmendByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDeterminantType]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDeterminantType_trtReferenceType__idfsReferenceType_R_950] FOREIGN KEY([idfsReferenceType])
REFERENCES [dbo].[trtReferenceType] ([idfsReferenceType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffDeterminantType] CHECK CONSTRAINT [FK_ffDeterminantType_trtReferenceType__idfsReferenceType_R_950]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtSpeciesType] CHECK CONSTRAINT [FK_trtSpeciesType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_tlbPerson__idfPersonReportedBy_R_1508] FOREIGN KEY([idfPersonReportedBy])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_tlbPerson__idfPersonReportedBy_R_1508]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflBatchTestFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflBatchTestFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tflBatchTestFiltered] CHECK CONSTRAINT [FK_tflBatchTestFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ArchiveSetting]  WITH NOCHECK ADD  CONSTRAINT [FK_ArchiveSetting_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[ArchiveSetting] CHECK CONSTRAINT [FK_ArchiveSetting_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchObject_trtBaseReference__idfsFormType_R_1657] FOREIGN KEY([idfsFormType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasSearchObject] CHECK CONSTRAINT [FK_tasSearchObject_trtBaseReference__idfsFormType_R_1657]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocation_trtBaseReference__idfsGeoLocationType_R_1238] FOREIGN KEY([idfsGeoLocationType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbGeoLocation] CHECK CONSTRAINT [FK_tlbGeoLocation_trtBaseReference__idfsGeoLocationType_R_1238]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AuditEventUserLog]  WITH NOCHECK ADD  CONSTRAINT [FK_AuditEventUserLog_UserTable_idfAppUserID] FOREIGN KEY([idfAppUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[AuditEventUserLog] CHECK CONSTRAINT [FK_AuditEventUserLog_UserTable_idfAppUserID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTestAmendmentHistory]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTestAmendmentHistory_tlbTesting__idfTesting] FOREIGN KEY([idfTesting])
REFERENCES [dbo].[tlbTesting] ([idfTesting])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbTestAmendmentHistory] CHECK CONSTRAINT [FK_tlbTestAmendmentHistory_tlbTesting__idfTesting]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDeterminantType]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDeterminantType_gisReferenceType__idfsGISReferenceType_R_1669] FOREIGN KEY([idfsGISReferenceType])
REFERENCES [dbo].[gisReferenceType] ([idfsGISReferenceType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[ffDeterminantType] CHECK CONSTRAINT [FK_ffDeterminantType_gisReferenceType__idfsGISReferenceType_R_1669]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesTypeToAnimalAge]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesTypeToAnimalAge_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtSpeciesTypeToAnimalAge] CHECK CONSTRAINT [FK_trtSpeciesTypeToAnimalAge_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_trtDiagnosis__idfsTentativeDiagnosis_R_1435] FOREIGN KEY([idfsTentativeDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_trtDiagnosis__idfsTentativeDiagnosis_R_1435]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflDataAuditEventFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflDataAuditEventFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tflDataAuditEventFiltered] CHECK CONSTRAINT [FK_tflDataAuditEventFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbOffice__idfSendToOffice] FOREIGN KEY([idfSendToOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbOffice__idfSendToOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtResourceSetTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_trtResourceSetTranslation__idfsLanguage] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtResourceSetTranslation] CHECK CONSTRAINT [FK_trtResourceSetTranslation__idfsLanguage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchTableJoinRule]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchTableJoinRule_tasSearchTable__idfMainSearchTable_R_1723] FOREIGN KEY([idfMainSearchTable])
REFERENCES [dbo].[tasSearchTable] ([idfSearchTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasSearchTableJoinRule] CHECK CONSTRAINT [FK_tasSearchTableJoinRule_tasSearchTable__idfMainSearchTable_R_1723]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[EmployeeToInstitution]  WITH NOCHECK ADD  CONSTRAINT [FK_EmployeeToInstitution_AspNetUserId] FOREIGN KEY([aspNetUserId])
REFERENCES [dbo].[AspNetUsers] ([Id])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[EmployeeToInstitution] CHECK CONSTRAINT [FK_EmployeeToInstitution_AspNetUserId]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTestAmendmentHistory]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTestAmendmentHistory_trtBaseReference__idfsOldTestResult] FOREIGN KEY([idfsOldTestResult])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbTestAmendmentHistory] CHECK CONSTRAINT [FK_tlbTestAmendmentHistory_trtBaseReference__idfsOldTestResult]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDeterminantType]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDeterminantType_trtBaseReference__idfsFormType_R_1660] FOREIGN KEY([idfsFormType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[ffDeterminantType] CHECK CONSTRAINT [FK_ffDeterminantType_trtBaseReference__idfsFormType_R_1660]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesTypeToAnimalAgeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesTypeToAnimalAgeToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtSpeciesTypeToAnimalAgeToCP] CHECK CONSTRAINT [FK_trtSpeciesTypeToAnimalAgeToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_trtDiagnosis__idfsTentativeDiagnosis1_R_1436] FOREIGN KEY([idfsTentativeDiagnosis1])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_trtDiagnosis__idfsTentativeDiagnosis1_R_1436]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflFarmFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflFarmFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tflFarmFiltered] CHECK CONSTRAINT [FK_tflFarmFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_trtBaseReference_idfsBirdStatus] FOREIGN KEY([idfsBirdStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_trtBaseReference_idfsBirdStatus]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AuditEventUserLog]  WITH NOCHECK ADD  CONSTRAINT [FK_AuditEventUserLog_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[AuditEventUserLog] CHECK CONSTRAINT [FK_AuditEventUserLog_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtResourceSetTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_trtResourceSetTranslation_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtResourceSetTranslation] CHECK CONSTRAINT [FK_trtResourceSetTranslation_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionToMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionToMaterial_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbMonitoringSessionToMaterial] CHECK CONSTRAINT [FK_tlbMonitoringSessionToMaterial_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchTableJoinRule]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchTableJoinRule_tasSearchTable__idfSearchTable_R_1701] FOREIGN KEY([idfSearchTable])
REFERENCES [dbo].[tasSearchTable] ([idfSearchTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasSearchTableJoinRule] CHECK CONSTRAINT [FK_tasSearchTableJoinRule_tasSearchTable__idfSearchTable_R_1701]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSecurityConfiguration]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSecurityConfiguration_trtBaseReference__idfsSecurityLevel_R_1759] FOREIGN KEY([idfsSecurityLevel])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstSecurityConfiguration] CHECK CONSTRAINT [FK_tstSecurityConfiguration_trtBaseReference__idfsSecurityLevel_R_1759]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationShared_gisCountry__idfsCountry_R_972] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbGeoLocationShared] CHECK CONSTRAINT [FK_tlbGeoLocationShared_gisCountry__idfsCountry_R_972]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[EmployeeToInstitution]  WITH NOCHECK ADD  CONSTRAINT [FK_EmployeeToInstitution_Office] FOREIGN KEY([idfInstitution])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[EmployeeToInstitution] CHECK CONSTRAINT [FK_EmployeeToInstitution_Office]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTestAmendmentHistory]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTestAmendmentHistory_trtBaseReference__idfsNewTestResult] FOREIGN KEY([idfsNewTestResult])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbTestAmendmentHistory] CHECK CONSTRAINT [FK_tlbTestAmendmentHistory_trtBaseReference__idfsNewTestResult]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDeterminantValue]  WITH NOCHECK ADD  CONSTRAINT [FK_FFormControlValue_FFormTemplate] FOREIGN KEY([idfsFormTemplate])
REFERENCES [dbo].[ffFormTemplate] ([idfsFormTemplate])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[ffDeterminantValue] CHECK CONSTRAINT [FK_FFormControlValue_FFormTemplate]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtStatisticDataType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtStatisticDataType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtStatisticDataType] CHECK CONSTRAINT [FK_trtStatisticDataType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_trtDiagnosis__idfsTentativeDiagnosis2_R_1437] FOREIGN KEY([idfsTentativeDiagnosis2])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_trtDiagnosis__idfsTentativeDiagnosis2_R_1437]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflGeoLocationFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflGeoLocationFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tflGeoLocationFiltered] CHECK CONSTRAINT [FK_tflGeoLocationFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbVetCase] FOREIGN KEY([idfVetCase])
REFERENCES [dbo].[tlbVetCase] ([idfVetCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbVetCase]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[CampaignToSampleType]  WITH NOCHECK ADD  CONSTRAINT [FK_CampaignToSampleType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[CampaignToSampleType] CHECK CONSTRAINT [FK_CampaignToSampleType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtResourceSetTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_trtResourceSetTranslation_trtResourceSet] FOREIGN KEY([idfsResourceSet])
REFERENCES [dbo].[trtResourceSet] ([idfsResourceSet])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtResourceSetTranslation] CHECK CONSTRAINT [FK_trtResourceSetTranslation_trtResourceSet]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchTableJoinRule]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchTableJoinRule_tasSearchTable__idfParentSearchTable_R_1700] FOREIGN KEY([idfParentSearchTable])
REFERENCES [dbo].[tasSearchTable] ([idfSearchTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasSearchTableJoinRule] CHECK CONSTRAINT [FK_tasSearchTableJoinRule_tasSearchTable__idfParentSearchTable_R_1700]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSecurityConfiguration]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSecurityConfiguration_tstSecurityConfiguration__idfParentSecurityConfiguration_R_1761] FOREIGN KEY([idfParentSecurityConfiguration])
REFERENCES [dbo].[tstSecurityConfiguration] ([idfSecurityConfiguration])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstSecurityConfiguration] CHECK CONSTRAINT [FK_tstSecurityConfiguration_tstSecurityConfiguration__idfParentSecurityConfiguration_R_1761]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationShared_gisRayon__idfsRayon_R_974] FOREIGN KEY([idfsRayon])
REFERENCES [dbo].[gisRayon] ([idfsRayon])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbGeoLocationShared] CHECK CONSTRAINT [FK_tlbGeoLocationShared_gisRayon__idfsRayon_R_974]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[EmployeeToInstitution]  WITH NOCHECK ADD  CONSTRAINT [FK_EmployeeToInstitution_UserId] FOREIGN KEY([idfUserId])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[EmployeeToInstitution] CHECK CONSTRAINT [FK_EmployeeToInstitution_UserId]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTestValidation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTestValidation_tlbOffice__idfInterpretedByOffice_R_1550] FOREIGN KEY([idfInterpretedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbTestValidation] CHECK CONSTRAINT [FK_tlbTestValidation_tlbOffice__idfInterpretedByOffice_R_1550]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDeterminantValue]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDeterminantValue_trtBaseReference__idfsBaseReference_R_949] FOREIGN KEY([idfsBaseReference])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[ffDeterminantValue] CHECK CONSTRAINT [FK_ffDeterminantValue_trtBaseReference__idfsBaseReference_R_949]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_trtDiagnosis__idfsFinalDiagnosis_R_1438] FOREIGN KEY([idfsFinalDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_trtDiagnosis__idfsFinalDiagnosis_R_1438]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflHumanCaseFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflHumanCaseFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tflHumanCaseFiltered] CHECK CONSTRAINT [FK_tflHumanCaseFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_trtBaseReference__idfsAccessionCondition] FOREIGN KEY([idfsAccessionCondition])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_trtBaseReference__idfsAccessionCondition]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[DiagnosisGroupToGender]  WITH NOCHECK ADD  CONSTRAINT [FK_DiagnosisGroupToGender_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[DiagnosisGroupToGender] CHECK CONSTRAINT [FK_DiagnosisGroupToGender_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchTableJoinRule]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchTableJoinRule_tasSearchTable__idfUnionSearchTable] FOREIGN KEY([idfUnionSearchTable])
REFERENCES [dbo].[tasSearchTable] ([idfSearchTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasSearchTableJoinRule] CHECK CONSTRAINT [FK_tasSearchTableJoinRule_tasSearchTable__idfUnionSearchTable]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationShared_gisRegion__idfsRegion_R_973] FOREIGN KEY([idfsRegion])
REFERENCES [dbo].[gisRegion] ([idfsRegion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbGeoLocationShared] CHECK CONSTRAINT [FK_tlbGeoLocationShared_gisRegion__idfsRegion_R_973]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[EventSubscription]  WITH NOCHECK ADD  CONSTRAINT [FK_EventSubscription_trtEventType_EventNameID] FOREIGN KEY([EventNameID])
REFERENCES [dbo].[trtEventType] ([idfsEventTypeID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[EventSubscription] CHECK CONSTRAINT [FK_EventSubscription_trtEventType_EventNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTestValidation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTestValidation_tlbOffice__idfValidatedByOffice_R_1548] FOREIGN KEY([idfValidatedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbTestValidation] CHECK CONSTRAINT [FK_tlbTestValidation_tlbOffice__idfValidatedByOffice_R_1548]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDeterminantValue]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDeterminantValue_gisBaseReference__idfsGISBaseReference_R_1670] FOREIGN KEY([idfsGISBaseReference])
REFERENCES [dbo].[gisBaseReference] ([idfsGISBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[ffDeterminantValue] CHECK CONSTRAINT [FK_ffDeterminantValue_gisBaseReference__idfsGISBaseReference_R_1670]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtStringNameTranslationToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtStringNameTranslationToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtStringNameTranslationToCP] CHECK CONSTRAINT [FK_trtStringNameTranslationToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflHumanFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflHumanFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tflHumanFiltered] CHECK CONSTRAINT [FK_tflHumanFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbPerson__idfAccesionByPerson] FOREIGN KEY([idfAccesionByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbPerson__idfAccesionByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayout_tasglLayoutFolder__idfsLayoutFolder_R_1698_1] FOREIGN KEY([idfsLayoutFolder])
REFERENCES [dbo].[tasglLayoutFolder] ([idfsLayoutFolder])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasglLayout] CHECK CONSTRAINT [FK_tasglLayout_tasglLayoutFolder__idfsLayoutFolder_R_1698_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtCollectionMethodForVectorTypeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtCollectionMethodForVectorTypeToCP_trtCollectionMethodForVectorType_idfCollectionMethodForVectorType] FOREIGN KEY([idfCollectionMethodForVectorType])
REFERENCES [dbo].[trtCollectionMethodForVectorType] ([idfCollectionMethodForVectorType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtCollectionMethodForVectorTypeToCP] CHECK CONSTRAINT [FK_trtCollectionMethodForVectorTypeToCP_trtCollectionMethodForVectorType_idfCollectionMethodForVectorType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationShared_gisSettlement__idfsSettlement_R_1218] FOREIGN KEY([idfsSettlement])
REFERENCES [dbo].[gisSettlement] ([idfsSettlement])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbGeoLocationShared] CHECK CONSTRAINT [FK_tlbGeoLocationShared_gisSettlement__idfsSettlement_R_1218]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[EventSubscription]  WITH NOCHECK ADD  CONSTRAINT [FK_EventSubscription_tstUserTable] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[EventSubscription] CHECK CONSTRAINT [FK_EventSubscription_tstUserTable]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTestValidation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTestValidation_tlbPerson__idfInterpretedByPerson_R_1551] FOREIGN KEY([idfInterpretedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbTestValidation] CHECK CONSTRAINT [FK_tlbTestValidation_tlbPerson__idfInterpretedByPerson_R_1551]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffFormTemplate]  WITH NOCHECK ADD  CONSTRAINT [FK_ffFormTemplate_trtBaseReference__idfsFormTemplate_R_1385] FOREIGN KEY([idfsFormTemplate])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[ffFormTemplate] CHECK CONSTRAINT [FK_ffFormTemplate_trtBaseReference__idfsFormTemplate_R_1385]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSystemFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSystemFunction_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtSystemFunction] CHECK CONSTRAINT [FK_trtSystemFunction_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_trtBaseReference__idfsYNTestsConducted] FOREIGN KEY([idfsYNTestsConducted])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_trtBaseReference__idfsYNTestsConducted]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflMonitoringSessionFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflMonitoringSessionFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tflMonitoringSessionFiltered] CHECK CONSTRAINT [FK_tflMonitoringSessionFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_trtBaseReference_idfsDestructionMethod] FOREIGN KEY([idfsDestructionMethod])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_trtBaseReference_idfsDestructionMethod]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPostalCode]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPostalCode_gisSettlement__idfsSettlement_R_17] FOREIGN KEY([idfsSettlement])
REFERENCES [dbo].[gisSettlement] ([idfsSettlement])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbPostalCode] CHECK CONSTRAINT [FK_tlbPostalCode_gisSettlement__idfsSettlement_R_17]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDecorElement]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDecorElement_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[ffDecorElement] CHECK CONSTRAINT [FK_ffDecorElement_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayout_trtBaseReference__idfsLayout_R_1708_1] FOREIGN KEY([idfsLayout])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasglLayout] CHECK CONSTRAINT [FK_tasglLayout_trtBaseReference__idfsLayout_R_1708_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtCollectionMethodForVectorTypeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtCollectionMethodForVectorTypeToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtCollectionMethodForVectorTypeToCP] CHECK CONSTRAINT [FK_trtCollectionMethodForVectorTypeToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationShared_trtBaseReference__idfsResidentType_R_1277] FOREIGN KEY([idfsResidentType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbGeoLocationShared] CHECK CONSTRAINT [FK_tlbGeoLocationShared_trtBaseReference__idfsResidentType_R_1277]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWHOMap]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWHOMap_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisWHOMap] CHECK CONSTRAINT [FK_gisWHOMap_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTestValidation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTestValidation_tlbPerson__idfValidatedByPerson_R_1549] FOREIGN KEY([idfValidatedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbTestValidation] CHECK CONSTRAINT [FK_tlbTestValidation_tlbPerson__idfValidatedByPerson_R_1549]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffFormTemplate]  WITH NOCHECK ADD  CONSTRAINT [FK_ffFormTemplate_trtBaseReference__idfsFormType_R_1656] FOREIGN KEY([idfsFormType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[ffFormTemplate] CHECK CONSTRAINT [FK_ffFormTemplate_trtBaseReference__idfsFormType_R_1656]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSystemFunctionOperation]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSystemFunctionOperation_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtSystemFunctionOperation] CHECK CONSTRAINT [FK_trtSystemFunctionOperation_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_trtBaseReference__idfsCaseReportType] FOREIGN KEY([idfsCaseReportType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_trtBaseReference__idfsCaseReportType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflNewID]  WITH NOCHECK ADD  CONSTRAINT [FK_tflNewID_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tflNewID] CHECK CONSTRAINT [FK_tflNewID_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[SecurityPolicyConfiguration]  WITH NOCHECK ADD  CONSTRAINT [FK_SecurityPolicyConfig_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[SecurityPolicyConfiguration] CHECK CONSTRAINT [FK_SecurityPolicyConfig_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDecorElementLine]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDecorElementLine_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffDecorElementLine] CHECK CONSTRAINT [FK_ffDecorElementLine_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtStringNameTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_trtStringNameTranslation_trtBaseReference__idfsBaseReference_R_385] FOREIGN KEY([idfsBaseReference])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtStringNameTranslation] CHECK CONSTRAINT [FK_trtStringNameTranslation_trtBaseReference__idfsBaseReference_R_385]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayout_tasglQuery__idfsQuery_R_1326_1] FOREIGN KEY([idfsQuery])
REFERENCES [dbo].[tasglQuery] ([idfsQuery])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasglLayout] CHECK CONSTRAINT [FK_tasglLayout_tasglQuery__idfsQuery_R_1326_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDerivativeForSampleTypeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDerivativeForSampleTypeToCP_trtDerivativeForSampleType__idfDerivativeForSampleType] FOREIGN KEY([idfDerivativeForSampleType])
REFERENCES [dbo].[trtDerivativeForSampleType] ([idfDerivativeForSampleType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtDerivativeForSampleTypeToCP] CHECK CONSTRAINT [FK_trtDerivativeForSampleTypeToCP_trtDerivativeForSampleType__idfDerivativeForSampleType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationShared_trtBaseReference__idfsGroundType_R_1239] FOREIGN KEY([idfsGroundType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbGeoLocationShared] CHECK CONSTRAINT [FK_tlbGeoLocationShared_trtBaseReference__idfsGroundType_R_1239]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWHOMap]  WITH NOCHECK ADD  CONSTRAINT [FK_idfsLocation_gisLocation] FOREIGN KEY([idfsLocation])
REFERENCES [dbo].[gisLocation] ([idfsLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisWHOMap] CHECK CONSTRAINT [FK_idfsLocation_gisLocation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTestValidation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTestValidation_trtDiagnosis__idfsDiagnosis_R_1547] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbTestValidation] CHECK CONSTRAINT [FK_tlbTestValidation_trtDiagnosis__idfsDiagnosis_R_1547]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterDesignOption]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterDesignOption_ffFormTemplate__idfsFormTemplate_R_1361] FOREIGN KEY([idfsFormTemplate])
REFERENCES [dbo].[ffFormTemplate] ([idfsFormTemplate])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[ffParameterDesignOption] CHECK CONSTRAINT [FK_ffParameterDesignOption_ffFormTemplate__idfsFormTemplate_R_1361]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestForDisease]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestForDisease_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtTestForDisease] CHECK CONSTRAINT [FK_trtTestForDisease_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_trtBaseReference__idfsCaseClassification] FOREIGN KEY([idfsCaseClassification])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_trtBaseReference__idfsCaseClassification]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflNotificationFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflNotificationFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tflNotificationFiltered] CHECK CONSTRAINT [FK_tflNotificationFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_trtBaseReference_idfsSampleKind] FOREIGN KEY([idfsSampleKind])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_trtBaseReference_idfsSampleKind]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDecorElementText]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDecorElementText_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffDecorElementText] CHECK CONSTRAINT [FK_ffDecorElementText_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtStringNameTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_trtStringNameTranslation_trtBaseReference__idfsLanguage_R_1584] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtStringNameTranslation] CHECK CONSTRAINT [FK_trtStringNameTranslation_trtBaseReference__idfsLanguage_R_1584]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayout_trtBaseReference__idfsDescription_R_1717_1] FOREIGN KEY([idfsDescription])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasglLayout] CHECK CONSTRAINT [FK_tasglLayout_trtBaseReference__idfsDescription_R_1717_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDerivativeForSampleTypeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDerivativeForSampleTypeToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtDerivativeForSampleTypeToCP] CHECK CONSTRAINT [FK_trtDerivativeForSampleTypeToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationShared_trtBaseReference__idfsGeoLocationType_R_1238] FOREIGN KEY([idfsGeoLocationType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbGeoLocationShared] CHECK CONSTRAINT [FK_tlbGeoLocationShared_trtBaseReference__idfsGeoLocationType_R_1238]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBDistrict]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBDistrict_gisBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisBaseReference] ([idfsGISBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[gisWKBDistrict] CHECK CONSTRAINT [FK_gisWKBDistrict_gisBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTestValidation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTestValidation_trtBaseReference__idfsInterpretedStatus_R_1552] FOREIGN KEY([idfsInterpretedStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbTestValidation] CHECK CONSTRAINT [FK_tlbTestValidation_trtBaseReference__idfsInterpretedStatus_R_1552]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterDesignOption]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterDesignOption_ffParameter__idfsParameter_R_1360] FOREIGN KEY([idfsParameter])
REFERENCES [dbo].[ffParameter] ([idfsParameter])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[ffParameterDesignOption] CHECK CONSTRAINT [FK_ffParameterDesignOption_ffParameter__idfsParameter_R_1360]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestForDiseaseToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestForDiseaseToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtTestForDiseaseToCP] CHECK CONSTRAINT [FK_trtTestForDiseaseToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_trtDiagnosis__idfsShowDiagnosis] FOREIGN KEY([idfsShowDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_trtDiagnosis__idfsShowDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflObservationFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflObservationFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tflObservationFiltered] CHECK CONSTRAINT [FK_tflObservationFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tlbPerson__idfMarkedForDispositionByPerson] FOREIGN KEY([idfMarkedForDispositionByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tlbPerson__idfMarkedForDispositionByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDeterminantType]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDeterminantType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[ffDeterminantType] CHECK CONSTRAINT [FK_ffDeterminantType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtStringNameTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_trtStringNameTranslation_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtStringNameTranslation] CHECK CONSTRAINT [FK_trtStringNameTranslation_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupRoleDashboardObject]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupRoleDashboardObject_AppObject_SashboardObjectID] FOREIGN KEY([DashboardObjectID])
REFERENCES [dbo].[LkupEIDSSAppObject] ([AppObjectNameID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[LkupRoleDashboardObject] CHECK CONSTRAINT [FK_LkupRoleDashboardObject_AppObject_SashboardObjectID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayout_trtBaseReference__idfsDefaultGroupDate] FOREIGN KEY([idfsDefaultGroupDate])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasglLayout] CHECK CONSTRAINT [FK_tasglLayout_trtBaseReference__idfsDefaultGroupDate]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToDiagnosisToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroupToDiagnosisToCP_tstPersonalDataGroup_idfDiagnosisAgeGroupToDiagnosis] FOREIGN KEY([idfDiagnosisAgeGroupToDiagnosis])
REFERENCES [dbo].[trtDiagnosisAgeGroupToDiagnosis] ([idfDiagnosisAgeGroupToDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToDiagnosisToCP] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroupToDiagnosisToCP_tstPersonalDataGroup_idfDiagnosisAgeGroupToDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRuralDistrict]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRuralDistrict_gisCountry] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisWKBRuralDistrict] CHECK CONSTRAINT [FK_gisWKBRuralDistrict_gisCountry]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTestValidation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTestValidation_tlbTesting__idfTesting_R_1546] FOREIGN KEY([idfTesting])
REFERENCES [dbo].[tlbTesting] ([idfTesting])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbTestValidation] CHECK CONSTRAINT [FK_tlbTestValidation_tlbTesting__idfTesting_R_1546]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterDesignOption]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterDesignOption_trtBaseReference__idfsLanguage_R_1381] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[ffParameterDesignOption] CHECK CONSTRAINT [FK_ffParameterDesignOption_trtBaseReference__idfsLanguage_R_1381]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestTypeForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestTypeForCustomReport_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtTestTypeForCustomReport] CHECK CONSTRAINT [FK_trtTestTypeForCustomReport_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_trtBaseReference__idfsCaseProgressStatus] FOREIGN KEY([idfsCaseProgressStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_trtBaseReference__idfsCaseProgressStatus]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflOutbreakFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflOutbreakFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tflOutbreakFiltered] CHECK CONSTRAINT [FK_tflOutbreakFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAnimal]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAnimal_trtBaseReference__idfsAnimalGender_R_1237] FOREIGN KEY([idfsAnimalGender])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbAnimal] CHECK CONSTRAINT [FK_tlbAnimal_trtBaseReference__idfsAnimalGender_R_1237]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffDeterminantValue]  WITH NOCHECK ADD  CONSTRAINT [FK_ffDeterminantValue_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffDeterminantValue] CHECK CONSTRAINT [FK_ffDeterminantValue_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayout_tlbPerson__idfPerson] FOREIGN KEY([idfPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasglLayout] CHECK CONSTRAINT [FK_tasglLayout_tlbPerson__idfPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToDiagnosisToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroupToDiagnosisToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToDiagnosisToCP] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroupToDiagnosisToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSession_gisCountry__idfsCountry_R_1741] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbMonitoringSession] CHECK CONSTRAINT [FK_tlbMonitoringSession_gisCountry__idfsCountry_R_1741]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRuralDistrict]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRuralDistrict_gisOtherBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[gisWKBRuralDistrict] CHECK CONSTRAINT [FK_gisWKBRuralDistrict_gisOtherBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTransferOUT]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTransferOUT_tlbOffice__idfSendFromOffice_R_1516] FOREIGN KEY([idfSendFromOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbTransferOUT] CHECK CONSTRAINT [FK_tlbTransferOUT_tlbOffice__idfSendFromOffice_R_1516]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterForTemplate]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterForTemplate_ffFormTemplate__idfsFormTemplate_R_91] FOREIGN KEY([idfsFormTemplate])
REFERENCES [dbo].[ffFormTemplate] ([idfsFormTemplate])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[ffParameterForTemplate] CHECK CONSTRAINT [FK_ffParameterForTemplate_ffFormTemplate__idfsFormTemplate_R_91]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestTypeToTestResult]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestTypeToTestResult_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtTestTypeToTestResult] CHECK CONSTRAINT [FK_trtTestTypeToTestResult_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_trtBaseReference__idfsCaseType] FOREIGN KEY([idfsCaseType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_trtBaseReference__idfsCaseType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflSite]  WITH NOCHECK ADD  CONSTRAINT [FK_tflSite_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tflSite] CHECK CONSTRAINT [FK_tflSite_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupEIDSSMenuToSystemFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupEIDSSMenuToSystemFunction_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[LkupEIDSSMenuToSystemFunction] CHECK CONSTRAINT [FK_LkupEIDSSMenuToSystemFunction_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAnimal]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAnimal_trtBaseReference__idfsAnimalCondition_R_1280] FOREIGN KEY([idfsAnimalCondition])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbAnimal] CHECK CONSTRAINT [FK_tlbAnimal_trtBaseReference__idfsAnimalCondition_R_1280]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffFormTemplate]  WITH NOCHECK ADD  CONSTRAINT [FK_ffFormTemplate_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[ffFormTemplate] CHECK CONSTRAINT [FK_ffFormTemplate_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupRoleMenuAccess]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupRoleMenuAccess_LkupEIDSSMenu_MenuID] FOREIGN KEY([EIDSSMenuID])
REFERENCES [dbo].[LkupEIDSSMenu] ([EIDSSMenuID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[LkupRoleMenuAccess] CHECK CONSTRAINT [FK_LkupRoleMenuAccess_LkupEIDSSMenu_MenuID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutFolder]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutFolder_tasglLayoutFolder__idfsParentLayoutFolder_R_1715_1] FOREIGN KEY([idfsParentLayoutFolder])
REFERENCES [dbo].[tasglLayoutFolder] ([idfsLayoutFolder])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasglLayoutFolder] CHECK CONSTRAINT [FK_tasglLayoutFolder_tasglLayoutFolder__idfsParentLayoutFolder_R_1715_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroupToDiagnosis_trtDiagnosis_idfsDiagnosis] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToDiagnosis] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroupToDiagnosis_trtDiagnosis_idfsDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSession_gisRayon__idfsRayon_R_1743] FOREIGN KEY([idfsRayon])
REFERENCES [dbo].[gisRayon] ([idfsRayon])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbMonitoringSession] CHECK CONSTRAINT [FK_tlbMonitoringSession_gisRayon__idfsRayon_R_1743]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanActualAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanActualAddlInfo_Human_UID] FOREIGN KEY([HumanActualAddlInfoUID])
REFERENCES [dbo].[tlbHumanActual] ([idfHumanActual])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[HumanActualAddlInfo] CHECK CONSTRAINT [FK_HumanActualAddlInfo_Human_UID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTransferOUT]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTransferOUT_tlbOffice__idfSendToOffice_R_1517] FOREIGN KEY([idfSendToOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbTransferOUT] CHECK CONSTRAINT [FK_tlbTransferOUT_tlbOffice__idfSendToOffice_R_1517]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterForTemplate]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterForTemplate_ffParameter__idfsParameter_R_2] FOREIGN KEY([idfsParameter])
REFERENCES [dbo].[ffParameter] ([idfsParameter])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[ffParameterForTemplate] CHECK CONSTRAINT [FK_ffParameterForTemplate_ffParameter__idfsParameter_R_2]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestTypeToTestResultToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestTypeToTestResultToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtTestTypeToTestResultToCP] CHECK CONSTRAINT [FK_trtTestTypeToTestResultToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFreezerSubdivision]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFreezerSubdivision_tlbFreezerSubdivision__idfParentSubdivision_R_904] FOREIGN KEY([idfParentSubdivision])
REFERENCES [dbo].[tlbFreezerSubdivision] ([idfSubdivision])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbFreezerSubdivision] CHECK CONSTRAINT [FK_tlbFreezerSubdivision_tlbFreezerSubdivision__idfParentSubdivision_R_904]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflSiteGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tflSiteGroup_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tflSiteGroup] CHECK CONSTRAINT [FK_tflSiteGroup_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupEIDSSMenuToSystemFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupEIDSSMenuToSystemFunction_BaseRef_MenuID] FOREIGN KEY([EIDSSMenuID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[LkupEIDSSMenuToSystemFunction] CHECK CONSTRAINT [FK_LkupEIDSSMenuToSystemFunction_BaseRef_MenuID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAnimal]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAnimal_trtBaseReference__idfsAnimalAge_R_1236] FOREIGN KEY([idfsAnimalAge])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbAnimal] CHECK CONSTRAINT [FK_tlbAnimal_trtBaseReference__idfsAnimalAge_R_1236]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameter_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffParameter] CHECK CONSTRAINT [FK_ffParameter_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutFolder]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutFolder_trtBaseReference__idfsLayoutFolder_R_1703_1] FOREIGN KEY([idfsLayoutFolder])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasglLayoutFolder] CHECK CONSTRAINT [FK_tasglLayoutFolder_trtBaseReference__idfsLayoutFolder_R_1703_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroupToDiagnosis_trtDiagnosisAgeGroup_idfsDiagnosisAgeGroup] FOREIGN KEY([idfsDiagnosisAgeGroup])
REFERENCES [dbo].[trtDiagnosisAgeGroup] ([idfsDiagnosisAgeGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToDiagnosis] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroupToDiagnosis_trtDiagnosisAgeGroup_idfsDiagnosisAgeGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSession_gisRegion__idfsRegion_R_1742] FOREIGN KEY([idfsRegion])
REFERENCES [dbo].[gisRegion] ([idfsRegion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbMonitoringSession] CHECK CONSTRAINT [FK_tlbMonitoringSession_gisRegion__idfsRegion_R_1742]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanActualAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanActualAddlInfo_tlbHUmanActual_idfHumanActual] FOREIGN KEY([DeduplicationResultHumanActualID])
REFERENCES [dbo].[tlbHumanActual] ([idfHumanActual])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[HumanActualAddlInfo] CHECK CONSTRAINT [FK_HumanActualAddlInfo_tlbHUmanActual_idfHumanActual]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTransferOUT]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTransferOUT_tlbPerson__idfSendByPerson_R_1518] FOREIGN KEY([idfSendByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbTransferOUT] CHECK CONSTRAINT [FK_tlbTransferOUT_tlbPerson__idfSendByPerson_R_1518]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterForTemplate]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterForTemplate_trtBaseReference__idfsEditMode_R_1388] FOREIGN KEY([idfsEditMode])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[ffParameterForTemplate] CHECK CONSTRAINT [FK_ffParameterForTemplate_trtBaseReference__idfsEditMode_R_1388]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtVectorSubType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtVectorSubType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtVectorSubType] CHECK CONSTRAINT [FK_trtVectorSubType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFreezerSubdivision]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFreezerSubdivision_trtBaseReference__idfsSubdivisionType_R_1257] FOREIGN KEY([idfsSubdivisionType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbFreezerSubdivision] CHECK CONSTRAINT [FK_tlbFreezerSubdivision_trtBaseReference__idfsSubdivisionType_R_1257]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflSiteGroupRelation]  WITH NOCHECK ADD  CONSTRAINT [FK_tflSiteGroupRelation_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tflSiteGroupRelation] CHECK CONSTRAINT [FK_tflSiteGroupRelation_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupEIDSSMenuToSystemFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupEIDSSMenuToSystemFunction_BaseRef_SystemFunctionID] FOREIGN KEY([SystemFunctionID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[LkupEIDSSMenuToSystemFunction] CHECK CONSTRAINT [FK_LkupEIDSSMenuToSystemFunction_BaseRef_SystemFunctionID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAnimal]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAnimal_tlbSpecies__idfSpecies_R_1478] FOREIGN KEY([idfSpecies])
REFERENCES [dbo].[tlbSpecies] ([idfSpecies])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbAnimal] CHECK CONSTRAINT [FK_tlbAnimal_tlbSpecies__idfSpecies_R_1478]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterDesignOption]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterDesignOption_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[ffParameterDesignOption] CHECK CONSTRAINT [FK_ffParameterDesignOption_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupRoleSystemFunctionAccess]  WITH NOCHECK ADD  CONSTRAINT [FK_lkupRoleSysFunctionAccess_BaseReference_SystemFunction] FOREIGN KEY([SystemFunctionID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[LkupRoleSystemFunctionAccess] CHECK CONSTRAINT [FK_lkupRoleSysFunctionAccess_BaseReference_SystemFunction]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutFolder]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutFolder_tasglQuery__idfsQuery_R_1697_1] FOREIGN KEY([idfsQuery])
REFERENCES [dbo].[tasglQuery] ([idfsQuery])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasglLayoutFolder] CHECK CONSTRAINT [FK_tasglLayoutFolder_tasglQuery__idfsQuery_R_1697_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroupToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroupToStatisticalAgeGroupToCP_trtDiagnosisAgeGroupToStatisticalAgeGroup] FOREIGN KEY([idfDiagnosisAgeGroupToStatisticalAgeGroup])
REFERENCES [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroup] ([idfDiagnosisAgeGroupToStatisticalAgeGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroupToCP] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroupToStatisticalAgeGroupToCP_trtDiagnosisAgeGroupToStatisticalAgeGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSession_gisSettlement__idfsSettlement_R_1744] FOREIGN KEY([idfsSettlement])
REFERENCES [dbo].[gisSettlement] ([idfsSettlement])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbMonitoringSession] CHECK CONSTRAINT [FK_tlbMonitoringSession_gisSettlement__idfsSettlement_R_1744]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanActualAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanActulaAddlIfo_GeoLocationShared_AtlAddressID] FOREIGN KEY([AltAddressID])
REFERENCES [dbo].[tlbGeoLocationShared] ([idfGeoLocationShared])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[HumanActualAddlInfo] CHECK CONSTRAINT [FK_HumanActulaAddlIfo_GeoLocationShared_AtlAddressID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTransferOUT]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTransferOUT_trtBaseReference__idfsTransferStatus_R_1671] FOREIGN KEY([idfsTransferStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbTransferOUT] CHECK CONSTRAINT [FK_tlbTransferOUT_trtBaseReference__idfsTransferStatus_R_1671]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffRule]  WITH NOCHECK ADD  CONSTRAINT [FK_FFRule_FFormTemplate] FOREIGN KEY([idfsFormTemplate])
REFERENCES [dbo].[ffFormTemplate] ([idfsFormTemplate])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[ffRule] CHECK CONSTRAINT [FK_FFRule_FFormTemplate]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtVectorType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtVectorType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtVectorType] CHECK CONSTRAINT [FK_trtVectorType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFreezerSubdivision]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFreezerSubdivision_tlbFreezer__idfFreezer_R_902] FOREIGN KEY([idfFreezer])
REFERENCES [dbo].[tlbFreezer] ([idfFreezer])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbFreezerSubdivision] CHECK CONSTRAINT [FK_tlbFreezerSubdivision_tlbFreezer__idfFreezer_R_902]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflSiteToSiteGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tflSiteToSiteGroup_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tflSiteToSiteGroup] CHECK CONSTRAINT [FK_tflSiteToSiteGroup_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAnimal]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAnimal_tlbObservation__idfObservation_R_1481] FOREIGN KEY([idfObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbAnimal] CHECK CONSTRAINT [FK_tlbAnimal_tlbObservation__idfObservation_R_1481]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterFixedPresetValue]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterFixedPresetValue_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[ffParameterFixedPresetValue] CHECK CONSTRAINT [FK_ffParameterFixedPresetValue_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupRoleSystemFunctionAccess]  WITH NOCHECK ADD  CONSTRAINT [FK_lkupRoleSysFunctionAccess_BaseReference_SysFunctionOperationID] FOREIGN KEY([SystemFunctionOperationID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[LkupRoleSystemFunctionAccess] CHECK CONSTRAINT [FK_lkupRoleSysFunctionAccess_BaseReference_SysFunctionOperationID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglViewBand]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglViewBand_tasglLayoutSearchField__idfLayoutSearchField] FOREIGN KEY([idfLayoutSearchField])
REFERENCES [dbo].[tasglLayoutSearchField] ([idfLayoutSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasglViewBand] CHECK CONSTRAINT [FK_tasglViewBand_tasglLayoutSearchField__idfLayoutSearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroupToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroupToStatisticalAgeGroupToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroupToCP] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroupToStatisticalAgeGroupToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSession_tlbCampaign__idfCampaign_R_1748] FOREIGN KEY([idfCampaign])
REFERENCES [dbo].[tlbCampaign] ([idfCampaign])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbMonitoringSession] CHECK CONSTRAINT [FK_tlbMonitoringSession_tlbCampaign__idfCampaign_R_1748]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanActualAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanActulaAddlIfo_GeosharedaddressID] FOREIGN KEY([SchoolAddressID])
REFERENCES [dbo].[tlbGeoLocationShared] ([idfGeoLocationShared])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[HumanActualAddlInfo] CHECK CONSTRAINT [FK_HumanActulaAddlIfo_GeosharedaddressID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffRule]  WITH NOCHECK ADD  CONSTRAINT [FK_ffRule_ffRuleFunction__idfsRuleFunction_R_1646] FOREIGN KEY([idfsRuleFunction])
REFERENCES [dbo].[ffRuleFunction] ([idfsRuleFunction])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffRule] CHECK CONSTRAINT [FK_ffRule_ffRuleFunction__idfsRuleFunction_R_1646]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflTransferOutFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflTransferOutFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tflTransferOutFiltered] CHECK CONSTRAINT [FK_tflTransferOutFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAntimicrobialTherapy]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAntimicrobialTherapy_tlbHumanCase__idfHumanCase_R_1422] FOREIGN KEY([idfHumanCase])
REFERENCES [dbo].[tlbHumanCase] ([idfHumanCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbAntimicrobialTherapy] CHECK CONSTRAINT [FK_tlbAntimicrobialTherapy_tlbHumanCase__idfHumanCase_R_1422]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterForAction]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterForAction_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[ffParameterForAction] CHECK CONSTRAINT [FK_ffParameterForAction_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglViewBand]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglViewBand_tasglViewBand__idfParentViewBand] FOREIGN KEY([idfParentViewBand])
REFERENCES [dbo].[tasglViewBand] ([idfViewBand])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasglViewBand] CHECK CONSTRAINT [FK_tasglViewBand_tasglViewBand__idfParentViewBand]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisToDiagnosisGroupToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisToDiagnosisGroupToCP_trtDiagnosisToDiagnosisGroup_idfDiagnosisToDiagnosisGroup] FOREIGN KEY([idfDiagnosisToDiagnosisGroup])
REFERENCES [dbo].[trtDiagnosisToDiagnosisGroup] ([idfDiagnosisToDiagnosisGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtDiagnosisToDiagnosisGroupToCP] CHECK CONSTRAINT [FK_trtDiagnosisToDiagnosisGroupToCP_trtDiagnosisToDiagnosisGroup_idfDiagnosisToDiagnosisGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSession_trtBaseReference__idfsMonitoringSessionStatus_R_1740] FOREIGN KEY([idfsMonitoringSessionStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbMonitoringSession] CHECK CONSTRAINT [FK_tlbMonitoringSession_trtBaseReference__idfsMonitoringSessionStatus_R_1740]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanAddlIfo_Geo_addressID] FOREIGN KEY([SchoolAddressID])
REFERENCES [dbo].[tlbGeoLocation] ([idfGeoLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[HumanAddlInfo] CHECK CONSTRAINT [FK_HumanAddlIfo_Geo_addressID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSite]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSite_tlbOffice__idfOffice_R_386] FOREIGN KEY([idfOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstSite] CHECK CONSTRAINT [FK_tstSite_tlbOffice__idfOffice_R_386]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffRule]  WITH NOCHECK ADD  CONSTRAINT [FK_ffRule_trtBaseReference__idfsRule_R_1394] FOREIGN KEY([idfsRule])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffRule] CHECK CONSTRAINT [FK_ffRule_trtBaseReference__idfsRule_R_1394]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstBarcodeLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tstBarcodeLayout_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstBarcodeLayout] CHECK CONSTRAINT [FK_tstBarcodeLayout_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFreezer]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFreezer_trtBaseReference__idfsStorageType_R_1256] FOREIGN KEY([idfsStorageType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbFreezer] CHECK CONSTRAINT [FK_tlbFreezer_trtBaseReference__idfsStorageType_R_1256]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflVectorSurveillanceSessionFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflVectorSurveillanceSessionFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tflVectorSurveillanceSessionFiltered] CHECK CONSTRAINT [FK_tflVectorSurveillanceSessionFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillanceAggregateDetail]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillanceAggregateDetail_tlbBasicSyndromicSurveillanceAggregateHeader__idfAggregateHeader] FOREIGN KEY([idfAggregateHeader])
REFERENCES [dbo].[tlbBasicSyndromicSurveillanceAggregateHeader] ([idfAggregateHeader])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillanceAggregateDetail] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillanceAggregateDetail_tlbBasicSyndromicSurveillanceAggregateHeader__idfAggregateHeader]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterForFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterForFunction_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[ffParameterForFunction] CHECK CONSTRAINT [FK_ffParameterForFunction_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionToMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionToMaterial_trtBaseRef_idfsSampleType] FOREIGN KEY([idfsSampleType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbMonitoringSessionToMaterial] CHECK CONSTRAINT [FK_tlbMonitoringSessionToMaterial_trtBaseRef_idfsSampleType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglViewBand]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglViewBand_tasglView__idfView_idfsLanguage] FOREIGN KEY([idfView], [idfsLanguage])
REFERENCES [dbo].[tasglView] ([idfView], [idfsLanguage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasglViewBand] CHECK CONSTRAINT [FK_tasglViewBand_tasglView__idfView_idfsLanguage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisToDiagnosisGroupToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisToDiagnosisGroupToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtDiagnosisToDiagnosisGroupToCP] CHECK CONSTRAINT [FK_trtDiagnosisToDiagnosisGroupToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSession_tlbPerson__idfPersonEnteredBy_R_1745] FOREIGN KEY([idfPersonEnteredBy])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbMonitoringSession] CHECK CONSTRAINT [FK_tlbMonitoringSession_tlbPerson__idfPersonEnteredBy_R_1745]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanAddlInfo_GeoLocation_AltAddress] FOREIGN KEY([AltAddressID])
REFERENCES [dbo].[tlbGeoLocation] ([idfGeoLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[HumanAddlInfo] CHECK CONSTRAINT [FK_HumanAddlInfo_GeoLocation_AltAddress]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSite]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSite_trtBaseReference__idfsSiteType_R_1305] FOREIGN KEY([idfsSiteType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstSite] CHECK CONSTRAINT [FK_tstSite_trtBaseReference__idfsSiteType_R_1305]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffRule]  WITH NOCHECK ADD  CONSTRAINT [FK_ffRule_trtBaseReference__idfsCheckPoint_R_1390] FOREIGN KEY([idfsCheckPoint])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[ffRule] CHECK CONSTRAINT [FK_ffRule_trtBaseReference__idfsCheckPoint_R_1390]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflVetCaseFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflVetCaseFiltered_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tflVetCaseFiltered] CHECK CONSTRAINT [FK_tflVetCaseFiltered_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbStreet]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbStreet_gisSettlement__idfsSettlement_R_16] FOREIGN KEY([idfsSettlement])
REFERENCES [dbo].[gisSettlement] ([idfsSettlement])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbStreet] CHECK CONSTRAINT [FK_tlbStreet_gisSettlement__idfsSettlement_R_16]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillanceAggregateDetail]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillanceAggregateDetail_tlbOffice__idfHospital] FOREIGN KEY([idfHospital])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillanceAggregateDetail] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillanceAggregateDetail_tlbOffice__idfHospital]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterForTemplate]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterForTemplate_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[ffParameterForTemplate] CHECK CONSTRAINT [FK_ffParameterForTemplate_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutToMapImage]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutToMapImage_tasglLayout__idfsLayout] FOREIGN KEY([idfsLayout])
REFERENCES [dbo].[tasglLayout] ([idfsLayout])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasglLayoutToMapImage] CHECK CONSTRAINT [FK_tasglLayoutToMapImage_tasglLayout__idfsLayout]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtFFObjectToDiagnosisForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtFFObjectToDiagnosisForCustomReport_trtDiagnosis] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtFFObjectToDiagnosisForCustomReport] CHECK CONSTRAINT [FK_trtFFObjectToDiagnosisForCustomReport_trtDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanAddlInfo_Human_idfhuman] FOREIGN KEY([HumanAdditionalInfo])
REFERENCES [dbo].[tlbHuman] ([idfHuman])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[HumanAddlInfo] CHECK CONSTRAINT [FK_HumanAddlInfo_Human_idfhuman]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSite]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSite_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstSite] CHECK CONSTRAINT [FK_tstSite_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffRule]  WITH NOCHECK ADD  CONSTRAINT [FK_ffRule_trtBaseReference__idfsRuleMessage_R_1391] FOREIGN KEY([idfsRuleMessage])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[ffRule] CHECK CONSTRAINT [FK_ffRule_trtBaseReference__idfsRuleMessage_R_1391]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstCheckTables]  WITH NOCHECK ADD  CONSTRAINT [FK_tstCheckTables_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstCheckTables] CHECK CONSTRAINT [FK_tstCheckTables_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationSharedTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationSharedTranslation_tlbGeoLocationShared__idfGeoLocationShared] FOREIGN KEY([idfGeoLocationShared])
REFERENCES [dbo].[tlbGeoLocationShared] ([idfGeoLocationShared])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbGeoLocationSharedTranslation] CHECK CONSTRAINT [FK_tlbGeoLocationSharedTranslation_tlbGeoLocationShared__idfGeoLocationShared]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbActivityParameters]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbActivityParameters_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbActivityParameters] CHECK CONSTRAINT [FK_tlbActivityParameters_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillanceAggregateHeader]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillanceAggregateHeader_tlbPerson__idfEnteredBy] FOREIGN KEY([idfEnteredBy])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillanceAggregateHeader] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillanceAggregateHeader_tlbPerson__idfEnteredBy]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterType]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[ffParameterType] CHECK CONSTRAINT [FK_ffParameterType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutToMapImage]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutToMapImage_tasglMapImage__idfMapImage] FOREIGN KEY([idfMapImage])
REFERENCES [dbo].[tasglMapImage] ([idfMapImage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasglLayoutToMapImage] CHECK CONSTRAINT [FK_tasglLayoutToMapImage_tasglMapImage__idfMapImage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtFFObjectToDiagnosisForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtFFParameterToDiagnosisForCustomReport_trtFFParameterForCustomReport] FOREIGN KEY([idfFFObjectForCustomReport])
REFERENCES [dbo].[trtFFObjectForCustomReport] ([idfFFObjectForCustomReport])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtFFObjectToDiagnosisForCustomReport] CHECK CONSTRAINT [FK_trtFFParameterToDiagnosisForCustomReport_trtFFParameterForCustomReport]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanDiseaseReportRelationship]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanDiseaseReportReln_tlbHumanCase_HumanDiseaseReportID] FOREIGN KEY([HumanDiseaseReportID])
REFERENCES [dbo].[tlbHumanCase] ([idfHumanCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[HumanDiseaseReportRelationship] CHECK CONSTRAINT [FK_HumanDiseaseReportReln_tlbHumanCase_HumanDiseaseReportID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSectionForTemplate]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSectionForTemplate_ffFormTemplate__idfsFormTemplate_R_1400] FOREIGN KEY([idfsFormTemplate])
REFERENCES [dbo].[ffFormTemplate] ([idfsFormTemplate])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffSectionForTemplate] CHECK CONSTRAINT [FK_ffSectionForTemplate_ffFormTemplate__idfsFormTemplate_R_1400]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstCustomizationPackage]  WITH NOCHECK ADD  CONSTRAINT [FK_tstCustomizationPackage_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstCustomizationPackage] CHECK CONSTRAINT [FK_tstCustomizationPackage_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationSharedTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationSharedTranslation_trtBaseReference__idfsLanguage] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbGeoLocationSharedTranslation] CHECK CONSTRAINT [FK_tlbGeoLocationSharedTranslation_trtBaseReference__idfsLanguage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffRule]  WITH NOCHECK ADD  CONSTRAINT [FK_ffRule_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[ffRule] CHECK CONSTRAINT [FK_ffRule_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglView]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglView_tasglLayout__idfsLayout] FOREIGN KEY([idfsLayout])
REFERENCES [dbo].[tasglLayout] ([idfsLayout])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasglView] CHECK CONSTRAINT [FK_tasglView_tasglLayout__idfsLayout]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtMaterialForDisease]  WITH NOCHECK ADD  CONSTRAINT [FK_trtMaterialForDisease_trtDiagnosis__idfsDiagnosis_R_891] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtMaterialForDisease] CHECK CONSTRAINT [FK_trtMaterialForDisease_trtDiagnosis__idfsDiagnosis_R_891]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanDiseaseReportRelationship]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanDiseaseReportReln_tlbHumanCase_RelatedToHumanDiseaseReportIdRoot] FOREIGN KEY([RelatedToHumanDiseaseReportIdRoot])
REFERENCES [dbo].[tlbHumanCase] ([idfHumanCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[HumanDiseaseReportRelationship] CHECK CONSTRAINT [FK_HumanDiseaseReportReln_tlbHumanCase_RelatedToHumanDiseaseReportIdRoot]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSectionForTemplate]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSectionForTemplate_ffSection__idfsSection_R_1399] FOREIGN KEY([idfsSection])
REFERENCES [dbo].[ffSection] ([idfsSection])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[ffSectionForTemplate] CHECK CONSTRAINT [FK_ffSectionForTemplate_ffSection__idfsSection_R_1399]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstCustomizationPackageSettings]  WITH NOCHECK ADD  CONSTRAINT [FK_tstCustomizationPackageSettings_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstCustomizationPackageSettings] CHECK CONSTRAINT [FK_tstCustomizationPackageSettings_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanActual_tlbGeoLocation__idfCurrentResidenceAddress_R_1424] FOREIGN KEY([idfCurrentResidenceAddress])
REFERENCES [dbo].[tlbGeoLocationShared] ([idfGeoLocationShared])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbHumanActual] CHECK CONSTRAINT [FK_tlbHumanActual_tlbGeoLocation__idfCurrentResidenceAddress_R_1424]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrDiagnosticActionMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrDiagnosticActionMTX_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbAggrDiagnosticActionMTX] CHECK CONSTRAINT [FK_tlbAggrDiagnosticActionMTX_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_tlbPerson__idfEnteredBy] FOREIGN KEY([idfEnteredBy])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_tlbPerson__idfEnteredBy]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffRuleConstant]  WITH NOCHECK ADD  CONSTRAINT [FK_ffRuleConstant_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[ffRuleConstant] CHECK CONSTRAINT [FK_ffRuleConstant_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglView]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglView_tasglViewColumn__idfChartXAxisViewColumn] FOREIGN KEY([idfChartXAxisViewColumn])
REFERENCES [dbo].[tasglViewColumn] ([idfViewColumn])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasglView] CHECK CONSTRAINT [FK_tasglView_tasglViewColumn__idfChartXAxisViewColumn]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtMaterialForDisease]  WITH NOCHECK ADD  CONSTRAINT [FK_trtMaterialForDisease_trtSampleType__idfsSampleType] FOREIGN KEY([idfsSampleType])
REFERENCES [dbo].[trtSampleType] ([idfsSampleType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtMaterialForDisease] CHECK CONSTRAINT [FK_trtMaterialForDisease_trtSampleType__idfsSampleType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisDistrictSubdistrict]  WITH NOCHECK ADD  CONSTRAINT [FK_gisDistrictSubdistrict_gisRayon__idfsGeoObject] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisRayon] ([idfsRayon])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisDistrictSubdistrict] CHECK CONSTRAINT [FK_gisDistrictSubdistrict_gisRayon__idfsGeoObject]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanDiseaseReportRelationship]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanDiseaseReportReln_tlbHumanCase_RelateToHumanDiseaseReportID] FOREIGN KEY([RelateToHumanDiseaseReportID])
REFERENCES [dbo].[tlbHumanCase] ([idfHumanCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[HumanDiseaseReportRelationship] CHECK CONSTRAINT [FK_HumanDiseaseReportReln_tlbHumanCase_RelateToHumanDiseaseReportID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbObservation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbObservation_ffFormTemplate__idfsFormTemplate_R_1405] FOREIGN KEY([idfsFormTemplate])
REFERENCES [dbo].[ffFormTemplate] ([idfsFormTemplate])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbObservation] CHECK CONSTRAINT [FK_tlbObservation_ffFormTemplate__idfsFormTemplate_R_1405]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEvent_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstEvent] CHECK CONSTRAINT [FK_tstEvent_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanActual_tlbGeoLocation__idfEmployerAddress_R_1425] FOREIGN KEY([idfEmployerAddress])
REFERENCES [dbo].[tlbGeoLocationShared] ([idfGeoLocationShared])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbHumanActual] CHECK CONSTRAINT [FK_tlbHumanActual_tlbGeoLocation__idfEmployerAddress_R_1425]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrHumanCaseMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrHumanCaseMTX_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbAggrHumanCaseMTX] CHECK CONSTRAINT [FK_tlbAggrHumanCaseMTX_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffRuleFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_ffRuleFunction_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[ffRuleFunction] CHECK CONSTRAINT [FK_ffRuleFunction_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglView]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglView_tasglViewColumn__idfMapAdminUnitViewColumn] FOREIGN KEY([idfMapAdminUnitViewColumn])
REFERENCES [dbo].[tasglViewColumn] ([idfViewColumn])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasglView] CHECK CONSTRAINT [FK_tasglView_tasglViewColumn__idfMapAdminUnitViewColumn]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEventSubscription]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEventSubscription_trtEventType__idfsEventTypeID_R_676] FOREIGN KEY([idfsEventTypeID])
REFERENCES [dbo].[trtEventType] ([idfsEventTypeID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstEventSubscription] CHECK CONSTRAINT [FK_tstEventSubscription_trtEventType__idfsEventTypeID_R_676]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisDistrictSubdistrict]  WITH NOCHECK ADD  CONSTRAINT [FK_gisDistrictSubdistrict_gisRayon__idfsParent] FOREIGN KEY([idfsParent])
REFERENCES [dbo].[gisRayon] ([idfsRayon])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisDistrictSubdistrict] CHECK CONSTRAINT [FK_gisDistrictSubdistrict_gisRayon__idfsParent]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanDiseaseReportVaccination]  WITH NOCHECK ADD  CONSTRAINT [R_1417] FOREIGN KEY([idfHumanCase])
REFERENCES [dbo].[tlbHumanCase] ([idfHumanCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[HumanDiseaseReportVaccination] CHECK CONSTRAINT [R_1417]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCaseLog]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCaseLog_tlbPerson__idfPerson_R_1501] FOREIGN KEY([idfPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbVetCaseLog] CHECK CONSTRAINT [FK_tlbVetCaseLog_tlbPerson__idfPerson_R_1501]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEventActive]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEventActive_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstEventActive] CHECK CONSTRAINT [FK_tstEventActive_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanActual_tlbGeoLocation__idfRegistrationAddress_R_1426] FOREIGN KEY([idfRegistrationAddress])
REFERENCES [dbo].[tlbGeoLocationShared] ([idfGeoLocationShared])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbHumanActual] CHECK CONSTRAINT [FK_tlbHumanActual_tlbGeoLocation__idfRegistrationAddress_R_1426]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrMatrixVersionHeader]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrMatrixVersionHeader_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbAggrMatrixVersionHeader] CHECK CONSTRAINT [FK_tlbAggrMatrixVersionHeader_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsBasicSyndromicSurveillanceType] FOREIGN KEY([idfsBasicSyndromicSurveillanceType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsBasicSyndromicSurveillanceType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSection]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSection_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffSection] CHECK CONSTRAINT [FK_ffSection_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglView]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglView_trtBaseReference__idfsLanguage] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasglView] CHECK CONSTRAINT [FK_tasglView_trtBaseReference__idfsLanguage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtMaterialForDiseaseToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtMaterialForDiseaseToCP_trtMaterialForDisease__idfMaterialForDisease_R_1876] FOREIGN KEY([idfMaterialForDisease])
REFERENCES [dbo].[trtMaterialForDisease] ([idfMaterialForDisease])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtMaterialForDiseaseToCP] CHECK CONSTRAINT [FK_trtMaterialForDiseaseToCP_trtMaterialForDisease__idfMaterialForDisease_R_1876]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBSea]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBSea_gisOtherBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisWKBSea] CHECK CONSTRAINT [FK_gisWKBSea_gisOtherBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCaseLog]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCaseLog_trtBaseReference__idfsCaseLogStatus_R_1490] FOREIGN KEY([idfsCaseLogStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbVetCaseLog] CHECK CONSTRAINT [FK_tlbVetCaseLog_trtBaseReference__idfsCaseLogStatus_R_1490]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterFixedPresetValue]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterFixedPresetValue_trtBaseReference__idfsParameterFixedPresetValue_R_1398] FOREIGN KEY([idfsParameterFixedPresetValue])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[ffParameterFixedPresetValue] CHECK CONSTRAINT [FK_ffParameterFixedPresetValue_trtBaseReference__idfsParameterFixedPresetValue_R_1398]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEventClient]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEventClient_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstEventClient] CHECK CONSTRAINT [FK_tstEventClient_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanActual_trtBaseReference__idfsOccupationType_R_1233] FOREIGN KEY([idfsOccupationType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbHumanActual] CHECK CONSTRAINT [FK_tlbHumanActual_trtBaseReference__idfsOccupationType_R_1233]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrProphylacticActionMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrProphylacticActionMTX_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbAggrProphylacticActionMTX] CHECK CONSTRAINT [FK_tlbAggrProphylacticActionMTX_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_tlbOffice__idfHospital] FOREIGN KEY([idfHospital])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_tlbOffice__idfHospital]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSectionDesignOption]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSectionDesignOption_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[ffSectionDesignOption] CHECK CONSTRAINT [FK_ffSectionDesignOption_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQueryConditionGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQueryConditionGroup_tasglQueryConditionGroup__idfParentQueryConditionGroup_R_1345_1] FOREIGN KEY([idfParentQueryConditionGroup])
REFERENCES [dbo].[tasglQueryConditionGroup] ([idfQueryConditionGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasglQueryConditionGroup] CHECK CONSTRAINT [FK_tasglQueryConditionGroup_tasglQueryConditionGroup__idfParentQueryConditionGroup_R_1345_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtMaterialForDiseaseToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtMaterialForDiseaseToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtMaterialForDiseaseToCP] CHECK CONSTRAINT [FK_trtMaterialForDiseaseToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ASPNetUserPreviousPasswords]  WITH NOCHECK ADD  CONSTRAINT [FK_ASPNetUserPreviousPasswords_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[ASPNetUserPreviousPasswords] CHECK CONSTRAINT [FK_ASPNetUserPreviousPasswords_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisOtherBaseReference]  WITH NOCHECK ADD  CONSTRAINT [FK_gisOtherBaseReference_gisReferenceType__idfsGISReferenceType_R_1678] FOREIGN KEY([idfsGISReferenceType])
REFERENCES [dbo].[gisReferenceType] ([idfsGISReferenceType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisOtherBaseReference] CHECK CONSTRAINT [FK_gisOtherBaseReference_gisReferenceType__idfsGISReferenceType_R_1678]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupEIDSSMenuToEventType]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupEIDSSMenuToEventType_BaseRef_MenuID] FOREIGN KEY([EIDSSMenuID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[LkupEIDSSMenuToEventType] CHECK CONSTRAINT [FK_LkupEIDSSMenuToEventType_BaseRef_MenuID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCaseLog]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCaseLog_tlbVetCase__idfVetCase_R_1489] FOREIGN KEY([idfVetCase])
REFERENCES [dbo].[tlbVetCase] ([idfVetCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbVetCaseLog] CHECK CONSTRAINT [FK_tlbVetCaseLog_tlbVetCase__idfVetCase_R_1489]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterFixedPresetValue]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterFixedPresetValue_ffParameterType__idfsParameterType_R_925] FOREIGN KEY([idfsParameterType])
REFERENCES [dbo].[ffParameterType] ([idfsParameterType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffParameterFixedPresetValue] CHECK CONSTRAINT [FK_ffParameterFixedPresetValue_ffParameterType__idfsParameterType_R_925]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEventSubscription]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEventSubscription_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstEventSubscription] CHECK CONSTRAINT [FK_tstEventSubscription_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanActual_trtBaseReference__idfsNationality_R_1278] FOREIGN KEY([idfsNationality])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbHumanActual] CHECK CONSTRAINT [FK_tlbHumanActual_trtBaseReference__idfsNationality_R_1278]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrSanitaryActionMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrSanitaryActionMTX_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbAggrSanitaryActionMTX] CHECK CONSTRAINT [FK_tlbAggrSanitaryActionMTX_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNPregnant] FOREIGN KEY([idfsYNPregnant])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNPregnant]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSectionForAction]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSectionForAction_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffSectionForAction] CHECK CONSTRAINT [FK_ffSectionForAction_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQueryConditionGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQueryConditionGroup_tasglQuerySearchObject__idfQuerySearchObject_R_1344_1] FOREIGN KEY([idfQuerySearchObject])
REFERENCES [dbo].[tasglQuerySearchObject] ([idfQuerySearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasglQueryConditionGroup] CHECK CONSTRAINT [FK_tasglQueryConditionGroup_tasglQuerySearchObject__idfQuerySearchObject_R_1344_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestForDiseaseToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestForDiseaseToCP_trtPensideTestForDisease__idfPensideTestForDisease] FOREIGN KEY([idfPensideTestForDisease])
REFERENCES [dbo].[trtPensideTestForDisease] ([idfPensideTestForDisease])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtPensideTestForDiseaseToCP] CHECK CONSTRAINT [FK_trtPensideTestForDiseaseToCP_trtPensideTestForDisease__idfPensideTestForDisease]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRayon]  WITH NOCHECK ADD  CONSTRAINT [FK__gisWKBRay__idfsG__35FE8BDA] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisRayon] ([idfsRayon])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisWKBRayon] CHECK CONSTRAINT [FK__gisWKBRay__idfsG__35FE8BDA]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupEIDSSMenuToEventType]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupEIDSSMenuToEventType_EventType_idfsEventTypeId] FOREIGN KEY([EventTypeID])
REFERENCES [dbo].[trtEventType] ([idfsEventTypeID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[LkupEIDSSMenuToEventType] CHECK CONSTRAINT [FK_LkupEIDSSMenuToEventType_EventType_idfsEventTypeId]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterForAction]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterForAction_ffParameterForTemplate__idfsParameter_idfsFormTemplate_R] FOREIGN KEY([idfsParameter], [idfsFormTemplate])
REFERENCES [dbo].[ffParameterForTemplate] ([idfsParameter], [idfsFormTemplate])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[ffParameterForAction] CHECK CONSTRAINT [FK_ffParameterForAction_ffParameterForTemplate__idfsParameter_idfsFormTemplate_R]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstGeoLocationFormat]  WITH NOCHECK ADD  CONSTRAINT [FK_tstGeoLocationFormat_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstGeoLocationFormat] CHECK CONSTRAINT [FK_tstGeoLocationFormat_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanActual_trtBaseReference__idfsHumanGender_R_1232] FOREIGN KEY([idfsHumanGender])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbHumanActual] CHECK CONSTRAINT [FK_tlbHumanActual_trtBaseReference__idfsHumanGender_R_1232]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrVetCaseMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrVetCaseMTX_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbAggrVetCaseMTX] CHECK CONSTRAINT [FK_tlbAggrVetCaseMTX_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNPostpartumPeriod] FOREIGN KEY([idfsYNPostpartumPeriod])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNPostpartumPeriod]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSectionForTemplate]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSectionForTemplate_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[ffSectionForTemplate] CHECK CONSTRAINT [FK_ffSectionForTemplate_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQueryConditionGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQueryConditionGroup_tasglQuerySearchObject__idfSubQuerySearchObject] FOREIGN KEY([idfSubQuerySearchObject])
REFERENCES [dbo].[tasglQuerySearchObject] ([idfQuerySearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasglQueryConditionGroup] CHECK CONSTRAINT [FK_tasglQueryConditionGroup_tasglQuerySearchObject__idfSubQuerySearchObject]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestForDiseaseToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestForDiseaseToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtPensideTestForDiseaseToCP] CHECK CONSTRAINT [FK_trtPensideTestForDiseaseToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflSiteGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tflSiteGroup_gisRayon_idfsRayon] FOREIGN KEY([idfsRayon])
REFERENCES [dbo].[gisRayon] ([idfsRayon])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tflSiteGroup] CHECK CONSTRAINT [FK_tflSiteGroup_gisRayon_idfsRayon]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupEIDSSMenuToEventType]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupEIDSSMenuToEventType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[LkupEIDSSMenuToEventType] CHECK CONSTRAINT [FK_LkupEIDSSMenuToEventType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterForAction]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterForAction_trtBaseReference__idfsRuleAction_R_1392] FOREIGN KEY([idfsRuleAction])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[ffParameterForAction] CHECK CONSTRAINT [FK_ffParameterForAction_trtBaseReference__idfsRuleAction_R_1392]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstGlobalSiteOptions]  WITH NOCHECK ADD  CONSTRAINT [FK_tstGlobalSiteOptions_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstGlobalSiteOptions] CHECK CONSTRAINT [FK_tstGlobalSiteOptions_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanActual_trtBaseReference_idfsPersonIDType] FOREIGN KEY([idfsPersonIDType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbHumanActual] CHECK CONSTRAINT [FK_tlbHumanActual_trtBaseReference_idfsPersonIDType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAnimal]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAnimal_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbAnimal] CHECK CONSTRAINT [FK_tlbAnimal_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNFever] FOREIGN KEY([idfsYNFever])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNFever]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisBaseReference]  WITH NOCHECK ADD  CONSTRAINT [FK_gisBaseReference_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[gisBaseReference] CHECK CONSTRAINT [FK_gisBaseReference_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuerySearchFieldCondition]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuerySearchFieldCondition_tasglQueryConditionGroup__idfQueryConditionGroup_R_1342_1] FOREIGN KEY([idfQueryConditionGroup])
REFERENCES [dbo].[tasglQueryConditionGroup] ([idfQueryConditionGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasglQuerySearchFieldCondition] CHECK CONSTRAINT [FK_tasglQuerySearchFieldCondition_tasglQueryConditionGroup__idfQueryConditionGroup_R_1342_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_trtBaseReference_PreviousSampleStatusID] FOREIGN KEY([PreviousSampleStatusID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_trtBaseReference_PreviousSampleStatusID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestTypeForVectorTypeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestTypeForVectorTypeToCP_trtPensideTestTypeForVectorType_idfPensideTestTypeForVectorType] FOREIGN KEY([idfPensideTestTypeForVectorType])
REFERENCES [dbo].[trtPensideTestTypeForVectorType] ([idfPensideTestTypeForVectorType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtPensideTestTypeForVectorTypeToCP] CHECK CONSTRAINT [FK_trtPensideTestTypeForVectorTypeToCP_trtPensideTestTypeForVectorType_idfPensideTestTypeForVectorType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupRoleDashboardObject]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupRoleDashboardObject_idfEmployee] FOREIGN KEY([idfEmployee])
REFERENCES [dbo].[tlbEmployee] ([idfEmployee])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[LkupRoleDashboardObject] CHECK CONSTRAINT [FK_LkupRoleDashboardObject_idfEmployee]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVaccination]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVaccination_tlbSpecies__idfSpecies_R_1654] FOREIGN KEY([idfSpecies])
REFERENCES [dbo].[tlbSpecies] ([idfSpecies])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbVaccination] CHECK CONSTRAINT [FK_tlbVaccination_tlbSpecies__idfSpecies_R_1654]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterForAction]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterForAction_ffRule__idfsRule_R_820] FOREIGN KEY([idfsRule])
REFERENCES [dbo].[ffRule] ([idfsRule])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[ffParameterForAction] CHECK CONSTRAINT [FK_ffParameterForAction_ffRule__idfsRule_R_820]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstInvalidObjects]  WITH NOCHECK ADD  CONSTRAINT [FK_tstInvalidObjects_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstInvalidObjects] CHECK CONSTRAINT [FK_tstInvalidObjects_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAntimicrobialTherapy]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAntimicrobialTherapy_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbAntimicrobialTherapy] CHECK CONSTRAINT [FK_tlbAntimicrobialTherapy_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsMethodOfMeasurement] FOREIGN KEY([idfsMethodOfMeasurement])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsMethodOfMeasurement]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisCountry]  WITH NOCHECK ADD  CONSTRAINT [FK_gisCountry_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisCountry] CHECK CONSTRAINT [FK_gisCountry_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuerySearchFieldCondition]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuerySearchFieldCondition_tasglQuerySearchField__idfQuerySearchField_R_1343_1] FOREIGN KEY([idfQuerySearchField])
REFERENCES [dbo].[tasglQuerySearchField] ([idfQuerySearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasglQuerySearchFieldCondition] CHECK CONSTRAINT [FK_tasglQuerySearchFieldCondition_tasglQuerySearchField__idfQuerySearchField_R_1343_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_trtBaseReference_PreviousTestStatusID] FOREIGN KEY([PreviousTestStatusID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_trtBaseReference_PreviousTestStatusID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestTypeForVectorTypeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestTypeForVectorTypeToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtPensideTestTypeForVectorTypeToCP] CHECK CONSTRAINT [FK_trtPensideTestTypeForVectorTypeToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AccessRule]  WITH NOCHECK ADD  CONSTRAINT [FK_AccessRule_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[AccessRule] CHECK CONSTRAINT [FK_AccessRule_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEvent_gisRayon__idfsRayon] FOREIGN KEY([idfsRayon])
REFERENCES [dbo].[gisRayon] ([idfsRayon])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstEvent] CHECK CONSTRAINT [FK_tstEvent_gisRayon__idfsRayon]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupRoleMenuAccess]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupRoleMenuAccess_idfEmployee] FOREIGN KEY([idfEmployee])
REFERENCES [dbo].[tlbEmployee] ([idfEmployee])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[LkupRoleMenuAccess] CHECK CONSTRAINT [FK_LkupRoleMenuAccess_idfEmployee]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVaccination]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVaccination_tlbVetCase__idfVetCase_R_1482] FOREIGN KEY([idfVetCase])
REFERENCES [dbo].[tlbVetCase] ([idfVetCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbVaccination] CHECK CONSTRAINT [FK_tlbVaccination_tlbVetCase__idfVetCase_R_1482]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterForFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterForFunction_ffParameterForTemplate__idfsParameter___________________________________________________idfsFormTempla] FOREIGN KEY([idfsParameter], [idfsFormTemplate])
REFERENCES [dbo].[ffParameterForTemplate] ([idfsParameter], [idfsFormTemplate])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[ffParameterForFunction] CHECK CONSTRAINT [FK_ffParameterForFunction_ffParameterForTemplate__idfsParameter___________________________________________________idfsFormTempla]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstInvisibleFields]  WITH NOCHECK ADD  CONSTRAINT [FK_tstInvisibleFields_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tstInvisibleFields] CHECK CONSTRAINT [FK_tstInvisibleFields_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOffice]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOffice_trtBaseReference__idfsOfficeName_R_703] FOREIGN KEY([idfsOfficeName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbOffice] CHECK CONSTRAINT [FK_tlbOffice_trtBaseReference__idfsOfficeName_R_703]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtStringNameTranslationToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtStringNameTranslationToCP_trtStringNameTranslation__idfsBaseReference_idfsLanguage] FOREIGN KEY([idfsBaseReference], [idfsLanguage])
REFERENCES [dbo].[trtStringNameTranslation] ([idfsBaseReference], [idfsLanguage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtStringNameTranslationToCP] CHECK CONSTRAINT [FK_trtStringNameTranslationToCP_trtStringNameTranslation__idfsBaseReference_idfsLanguage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNCough] FOREIGN KEY([idfsYNCough])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNCough]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisDistrictSubdistrict]  WITH NOCHECK ADD  CONSTRAINT [FK_gisDistrictSubdistrict_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisDistrictSubdistrict] CHECK CONSTRAINT [FK_gisDistrictSubdistrict_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreak]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreak_BaseRef_OutbreakTypeID] FOREIGN KEY([OutbreakTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbOutbreak] CHECK CONSTRAINT [FK_tlbOutbreak_BaseRef_OutbreakTypeID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuery]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuery_trtBaseReference__idfsQueryName_R_1709_1] FOREIGN KEY([idfsQuery])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasglQuery] CHECK CONSTRAINT [FK_tasglQuery_trtBaseReference__idfsQueryName_R_1709_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestTypeToTestResultToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestTypeToTestResultToCP_trtPensideTestTypeToTestResult__idfsPensideTestName_idfsPensideTestResult] FOREIGN KEY([idfsPensideTestName], [idfsPensideTestResult])
REFERENCES [dbo].[trtPensideTestTypeToTestResult] ([idfsPensideTestName], [idfsPensideTestResult])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtPensideTestTypeToTestResultToCP] CHECK CONSTRAINT [FK_trtPensideTestTypeToTestResultToCP_trtPensideTestTypeToTestResult__idfsPensideTestName_idfsPensideTestResult]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEvent_gisRegion__idfsRegion] FOREIGN KEY([idfsRegion])
REFERENCES [dbo].[gisRegion] ([idfsRegion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstEvent] CHECK CONSTRAINT [FK_tstEvent_gisRegion__idfsRegion]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupRoleSystemFunctionAccess]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupRoleSystemFunctionAccess_idfEmployee] FOREIGN KEY([idfEmployee])
REFERENCES [dbo].[tlbEmployee] ([idfEmployee])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[LkupRoleSystemFunctionAccess] CHECK CONSTRAINT [FK_LkupRoleSystemFunctionAccess_idfEmployee]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVaccination]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVaccination_trtBaseReference__idfsVaccinationType_R_1301] FOREIGN KEY([idfsVaccinationType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbVaccination] CHECK CONSTRAINT [FK_tlbVaccination_trtBaseReference__idfsVaccinationType_R_1301]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterForFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterForFunction_ffRule__idfsRule_R_1647] FOREIGN KEY([idfsRule])
REFERENCES [dbo].[ffRule] ([idfsRule])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[ffParameterForFunction] CHECK CONSTRAINT [FK_ffParameterForFunction_ffRule__idfsRule_R_1647]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstInvisibleFieldsToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_tstInvisibleFieldsToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstInvisibleFieldsToCP] CHECK CONSTRAINT [FK_tstInvisibleFieldsToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOffice]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOffice_trtBaseReference__idfsOfficeAbbreviation_R_704] FOREIGN KEY([idfsOfficeAbbreviation])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbOffice] CHECK CONSTRAINT [FK_tlbOffice_trtBaseReference__idfsOfficeAbbreviation_R_704]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillanceAggregateDetail]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillanceAggregateDetail_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillanceAggregateDetail] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillanceAggregateDetail_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbEmployee]  WITH NOCHECK ADD  CONSTRAINT [FK_Employee_Site] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbEmployee] CHECK CONSTRAINT [FK_Employee_Site]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNShortnessOfBreath] FOREIGN KEY([idfsYNShortnessOfBreath])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNShortnessOfBreath]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisLegendSymbol]  WITH NOCHECK ADD  CONSTRAINT [FK_gisLegendSymbol_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisLegendSymbol] CHECK CONSTRAINT [FK_gisLegendSymbol_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuery]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuery_trtBaseReference__idfsDescription_R_1718_1] FOREIGN KEY([idfsDescription])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasglQuery] CHECK CONSTRAINT [FK_tasglQuery_trtBaseReference__idfsDescription_R_1718_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestTypeToTestResultToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestTypeToTestResultToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtPensideTestTypeToTestResultToCP] CHECK CONSTRAINT [FK_trtPensideTestTypeToTestResultToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEvent_trtDiagnosis__idfsDiagnosis] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstEvent] CHECK CONSTRAINT [FK_tstEvent_trtDiagnosis__idfsDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LOINCEidssMapping]  WITH NOCHECK ADD  CONSTRAINT [FK_LOINCEidssMapping_trtReferenecType__idfsReferenceType] FOREIGN KEY([idfsReferenceType])
REFERENCES [dbo].[trtReferenceType] ([idfsReferenceType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[LOINCEidssMapping] CHECK CONSTRAINT [FK_LOINCEidssMapping_trtReferenecType__idfsReferenceType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVaccination]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVaccination_trtBaseReference__idfsVaccinationRoute_R_1302] FOREIGN KEY([idfsVaccinationRoute])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbVaccination] CHECK CONSTRAINT [FK_tlbVaccination_trtBaseReference__idfsVaccinationRoute_R_1302]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameter_ffParameterType__idfsParameterType_R_21] FOREIGN KEY([idfsParameterType])
REFERENCES [dbo].[ffParameterType] ([idfsParameterType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[ffParameter] CHECK CONSTRAINT [FK_ffParameter_ffParameterType__idfsParameterType_R_21]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstLocalClient]  WITH NOCHECK ADD  CONSTRAINT [FK_tstLocalClient_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstLocalClient] CHECK CONSTRAINT [FK_tstLocalClient_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOffice]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOffice_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbOffice] CHECK CONSTRAINT [FK_tlbOffice_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillanceAggregateHeader]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillanceAggregateHeader_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillanceAggregateHeader] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillanceAggregateHeader_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditEvent_tstSite__idfsSite_R_1021] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tauDataAuditEvent] CHECK CONSTRAINT [FK_tauDataAuditEvent_tstSite__idfsSite_R_1021]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNSeasonalFluVaccine] FOREIGN KEY([idfsYNSeasonalFluVaccine])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNSeasonalFluVaccine]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisMetadata]  WITH NOCHECK ADD  CONSTRAINT [FK_gisMetadata_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisMetadata] CHECK CONSTRAINT [FK_gisMetadata_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditDetailUpdate]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditDetailUpdate_tauColumn__idfColumn_R_1564] FOREIGN KEY([idfColumn])
REFERENCES [dbo].[tauColumn] ([idfColumn])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tauDataAuditDetailUpdate] CHECK CONSTRAINT [FK_tauDataAuditDetailUpdate_tauColumn__idfColumn_R_1564]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSampleTypeForVectorTypeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSampleTypeForVectorTypeToCP_trtSampleTypeForVectorType_idfSampleTypeForVectorType] FOREIGN KEY([idfSampleTypeForVectorType])
REFERENCES [dbo].[trtSampleTypeForVectorType] ([idfSampleTypeForVectorType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtSampleTypeForVectorTypeToCP] CHECK CONSTRAINT [FK_trtSampleTypeForVectorTypeToCP_trtSampleTypeForVectorType_idfSampleTypeForVectorType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEvent_trtEventType__idfsEventTypeID_R_664] FOREIGN KEY([idfsEventTypeID])
REFERENCES [dbo].[trtEventType] ([idfsEventTypeID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstEvent] CHECK CONSTRAINT [FK_tstEvent_trtEventType__idfsEventTypeID_R_664]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[MonitoringSessionToSampleType]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionToSampleType_tlbMonitoringSession_MonitoringSessionID] FOREIGN KEY([idfMonitoringSession])
REFERENCES [dbo].[tlbMonitoringSession] ([idfMonitoringSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[MonitoringSessionToSampleType] CHECK CONSTRAINT [FK_tlbMonitoringSessionToSampleType_tlbMonitoringSession_MonitoringSessionID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVaccination]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVaccination_trtDiagnosis__idfsDiagnosis_R_983] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbVaccination] CHECK CONSTRAINT [FK_tlbVaccination_trtDiagnosis__idfsDiagnosis_R_983]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameter_trtBaseReference__idfsParameter_R_1382] FOREIGN KEY([idfsParameter])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[ffParameter] CHECK CONSTRAINT [FK_ffParameter_trtBaseReference__idfsParameter_R_1382]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstLocalConnectionContext]  WITH NOCHECK ADD  CONSTRAINT [FK_tstLocalConnectionContext_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tstLocalConnectionContext] CHECK CONSTRAINT [FK_tstLocalConnectionContext_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBatchTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBatchTest_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbBatchTest] CHECK CONSTRAINT [FK_tlbBatchTest_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflSite]  WITH NOCHECK ADD  CONSTRAINT [FK_tflSite_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tflSite] CHECK CONSTRAINT [FK_tflSite_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNPatientWasHospitalized] FOREIGN KEY([idfsYNPatientWasHospitalized])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNPatientWasHospitalized]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisNewID]  WITH NOCHECK ADD  CONSTRAINT [FK_gisNewID_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[gisNewID] CHECK CONSTRAINT [FK_gisNewID_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditDetailUpdate]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditDetailUpdate_tauDataAuditEvent__idfDataAuditEvent_R_1557] FOREIGN KEY([idfDataAuditEvent])
REFERENCES [dbo].[tauDataAuditEvent] ([idfDataAuditEvent])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tauDataAuditDetailUpdate] CHECK CONSTRAINT [FK_tauDataAuditDetailUpdate_tauDataAuditEvent__idfDataAuditEvent_R_1557]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[DiagnosisGroupToGender]  WITH NOCHECK ADD  CONSTRAINT [FK_DiagnosisGroupToGender_trtBaseReference_DiagnosisGroupID] FOREIGN KEY([DisgnosisGroupID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[DiagnosisGroupToGender] CHECK CONSTRAINT [FK_DiagnosisGroupToGender_trtBaseReference_DiagnosisGroupID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSampleTypeForVectorTypeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSampleTypeForVectorTypeToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtSampleTypeForVectorTypeToCP] CHECK CONSTRAINT [FK_trtSampleTypeForVectorTypeToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[MonitoringSessionToSampleType]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionToSampleType_trtSampleType_SampleType] FOREIGN KEY([idfsSampleType])
REFERENCES [dbo].[trtSampleType] ([idfsSampleType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[MonitoringSessionToSampleType] CHECK CONSTRAINT [FK_tlbMonitoringSessionToSampleType_trtSampleType_SampleType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVectorSurveillanceSessionSummaryDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVectorSurveillanceSessionSummaryDiagnosis_tlbVectorSurveillanceSessionSummary__idfsVSSessionSummary] FOREIGN KEY([idfsVSSessionSummary])
REFERENCES [dbo].[tlbVectorSurveillanceSessionSummary] ([idfsVSSessionSummary])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbVectorSurveillanceSessionSummaryDiagnosis] CHECK CONSTRAINT [FK_tlbVectorSurveillanceSessionSummaryDiagnosis_tlbVectorSurveillanceSessionSummary__idfsVSSessionSummary]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameter_ffSection__idfsSection_R_1380] FOREIGN KEY([idfsSection])
REFERENCES [dbo].[ffSection] ([idfsSection])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[ffParameter] CHECK CONSTRAINT [FK_ffParameter_ffSection__idfsSection_R_1380]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstLocalSamplesTestsPreferences]  WITH NOCHECK ADD  CONSTRAINT [FK_tstLocalSamplesTestsPreferences_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstLocalSamplesTestsPreferences] CHECK CONSTRAINT [FK_tstLocalSamplesTestsPreferences_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationTranslation_tlbGeoLocation__idfGeoLocation] FOREIGN KEY([idfGeoLocation])
REFERENCES [dbo].[tlbGeoLocation] ([idfGeoLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbGeoLocationTranslation] CHECK CONSTRAINT [FK_tlbGeoLocationTranslation_tlbGeoLocation__idfGeoLocation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbCampaign]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbCampaign_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbCampaign] CHECK CONSTRAINT [FK_tlbCampaign_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflSiteGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tflSiteGroup_tstSite_idfsSite] FOREIGN KEY([idfsCentralSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tflSiteGroup] CHECK CONSTRAINT [FK_tflSiteGroup_tstSite_idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsOutcome] FOREIGN KEY([idfsOutcome])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsOutcome]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisOtherBaseReference]  WITH NOCHECK ADD  CONSTRAINT [FK_gisOtherBaseReference_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[gisOtherBaseReference] CHECK CONSTRAINT [FK_gisOtherBaseReference_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditDetailUpdate]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditDetailUpdate_tauTable__idfObjectTable_R_1562] FOREIGN KEY([idfObjectTable])
REFERENCES [dbo].[tauTable] ([idfTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tauDataAuditDetailUpdate] CHECK CONSTRAINT [FK_tauDataAuditDetailUpdate_tauTable__idfObjectTable_R_1562]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[DiagnosisGroupToGender]  WITH NOCHECK ADD  CONSTRAINT [FK_DiagnosisGroupToGender_trtBaseReference_GenderID] FOREIGN KEY([GenderID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[DiagnosisGroupToGender] CHECK CONSTRAINT [FK_DiagnosisGroupToGender_trtBaseReference_GenderID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSampleTypeForVectorType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSampleTypeForVectorType_trtSampleType_idfsSampleType] FOREIGN KEY([idfsSampleType])
REFERENCES [dbo].[trtSampleType] ([idfsSampleType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtSampleTypeForVectorType] CHECK CONSTRAINT [FK_trtSampleTypeForVectorType_trtSampleType_idfsSampleType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[MonitoringSessionToSampleType]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionToSampleType_trtSpeciesType_SpeciesType] FOREIGN KEY([idfsSpeciesType])
REFERENCES [dbo].[trtSpeciesType] ([idfsSpeciesType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[MonitoringSessionToSampleType] CHECK CONSTRAINT [FK_tlbMonitoringSessionToSampleType_trtSpeciesType_SpeciesType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVectorSurveillanceSessionSummaryDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVectorSurveillanceSessionSummaryDiagnosis_trtDiagnosis__idfsDiagnosis] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbVectorSurveillanceSessionSummaryDiagnosis] CHECK CONSTRAINT [FK_tlbVectorSurveillanceSessionSummaryDiagnosis_trtDiagnosis__idfsDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameter_trtBaseReference__idfsParameterCaption_R_1383] FOREIGN KEY([idfsParameterCaption])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[ffParameter] CHECK CONSTRAINT [FK_ffParameter_trtBaseReference__idfsParameterCaption_R_1383]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstLocalSiteOptions]  WITH NOCHECK ADD  CONSTRAINT [FK_tstLocalSiteOptions_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstLocalSiteOptions] CHECK CONSTRAINT [FK_tstLocalSiteOptions_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflSiteGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tflSiteGroup_trtBaseReference_idfsSiteGroupType] FOREIGN KEY([idfsSiteGroupType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tflSiteGroup] CHECK CONSTRAINT [FK_tflSiteGroup_trtBaseReference_idfsSiteGroupType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationTranslation_trtBaseReference__idfsLanguage] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbGeoLocationTranslation] CHECK CONSTRAINT [FK_tlbGeoLocationTranslation_trtBaseReference__idfsLanguage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbCampaignToDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbCampaignToDiagnosis_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbCampaignToDiagnosis] CHECK CONSTRAINT [FK_tlbCampaignToDiagnosis_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflSiteToSiteGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tflSiteToSiteGroup_tstSite_idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tflSiteToSiteGroup] CHECK CONSTRAINT [FK_tflSiteToSiteGroup_tstSite_idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNPatientWasInER] FOREIGN KEY([idfsYNPatientWasInER])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNPatientWasInER]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisOtherStringNameTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_gisOtherStringNameTranslation_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisOtherStringNameTranslation] CHECK CONSTRAINT [FK_gisOtherStringNameTranslation_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtBssAggregateColumns]  WITH NOCHECK ADD  CONSTRAINT [FK_trtBssAggregateColumns_tauColumn__idfColumn] FOREIGN KEY([idfColumn])
REFERENCES [dbo].[tauColumn] ([idfColumn])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtBssAggregateColumns] CHECK CONSTRAINT [FK_trtBssAggregateColumns_tauColumn__idfColumn]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSampleTypeForVectorType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSampleTypeForVectorType_trtVectorType_idfsVectorType] FOREIGN KEY([idfsVectorType])
REFERENCES [dbo].[trtVectorType] ([idfsVectorType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtSampleTypeForVectorType] CHECK CONSTRAINT [FK_trtSampleTypeForVectorType_trtVectorType_idfsVectorType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEventActive]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEventActive_gisRayon__idfsRayon] FOREIGN KEY([idfsRayon])
REFERENCES [dbo].[gisRayon] ([idfsRayon])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstEventActive] CHECK CONSTRAINT [FK_tstEventActive_gisRayon__idfsRayon]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakCaseContact]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakCaseContact_OutbreakCase_OutbreakCaseReportUID] FOREIGN KEY([OutBreakCaseReportUID])
REFERENCES [dbo].[OutbreakCaseReport] ([OutBreakCaseReportUID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[OutbreakCaseContact] CHECK CONSTRAINT [FK_OutbreakCaseContact_OutbreakCase_OutbreakCaseReportUID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCaseDisplayDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCaseDisplayDiagnosis_tlbVetCase_idfVetCase] FOREIGN KEY([idfVetCase])
REFERENCES [dbo].[tlbVetCase] ([idfVetCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbVetCaseDisplayDiagnosis] CHECK CONSTRAINT [FK_tlbVetCaseDisplayDiagnosis_tlbVetCase_idfVetCase]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameter_trtBaseReference__idfsFormType_R_1658] FOREIGN KEY([idfsFormType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffParameter] CHECK CONSTRAINT [FK_ffParameter_trtBaseReference__idfsFormType_R_1658]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstMandatoryFields]  WITH NOCHECK ADD  CONSTRAINT [FK_tstMandatoryFields_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tstMandatoryFields] CHECK CONSTRAINT [FK_tstMandatoryFields_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHuman]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHuman_tlbGeoLocation__idfCurrentResidenceAddress_R_1424] FOREIGN KEY([idfCurrentResidenceAddress])
REFERENCES [dbo].[tlbGeoLocation] ([idfGeoLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbHuman] CHECK CONSTRAINT [FK_tlbHuman_tlbGeoLocation__idfCurrentResidenceAddress_R_1424]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbChangeDiagnosisHistory]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbChangeDiagnosisHistory_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbChangeDiagnosisHistory] CHECK CONSTRAINT [FK_tlbChangeDiagnosisHistory_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNTreatment] FOREIGN KEY([idfsYNTreatment])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNTreatment]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisRayon]  WITH NOCHECK ADD  CONSTRAINT [FK_gisRayon_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[gisRayon] CHECK CONSTRAINT [FK_gisRayon_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtBssAggregateColumns]  WITH NOCHECK ADD  CONSTRAINT [FK_trtBssAggregateColumns_trtBaseReference__idfsBssAggregateColumn] FOREIGN KEY([idfsBssAggregateColumn])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtBssAggregateColumns] CHECK CONSTRAINT [FK_trtBssAggregateColumns_trtBaseReference__idfsBssAggregateColumn]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesTypeToAnimalAgeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesTypeToAnimalAgeToCP_trtSpeciesTypeToAnimalAge__idfSpeciesTypeToAnimalAge_R_1882] FOREIGN KEY([idfSpeciesTypeToAnimalAge])
REFERENCES [dbo].[trtSpeciesTypeToAnimalAge] ([idfSpeciesTypeToAnimalAge])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtSpeciesTypeToAnimalAgeToCP] CHECK CONSTRAINT [FK_trtSpeciesTypeToAnimalAgeToCP_trtSpeciesTypeToAnimalAge__idfSpeciesTypeToAnimalAge_R_1882]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEventActive]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEventActive_gisRegion__idfsRegion] FOREIGN KEY([idfsRegion])
REFERENCES [dbo].[gisRegion] ([idfsRegion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstEventActive] CHECK CONSTRAINT [FK_tstEventActive_gisRegion__idfsRegion]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakCaseContact]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakCaseContact_tlbContactedCasePerson_idfContactedCasePersonID] FOREIGN KEY([ContactedHumanCasePersonID])
REFERENCES [dbo].[tlbContactedCasePerson] ([idfContactedCasePerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[OutbreakCaseContact] CHECK CONSTRAINT [FK_OutbreakCaseContact_tlbContactedCasePerson_idfContactedCasePersonID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCaseDisplayDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCaseDisplayDiagnosis_trtBaseReference_idfsLanguage] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbVetCaseDisplayDiagnosis] CHECK CONSTRAINT [FK_tlbVetCaseDisplayDiagnosis_trtBaseReference_idfsLanguage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameter_trtBaseReference__idfsEditor_R_1387] FOREIGN KEY([idfsEditor])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[ffParameter] CHECK CONSTRAINT [FK_ffParameter_trtBaseReference__idfsEditor_R_1387]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstMandatoryFieldsToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_tstMandatoryFieldsToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstMandatoryFieldsToCP] CHECK CONSTRAINT [FK_tstMandatoryFieldsToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHuman]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHuman_tlbGeoLocation__idfEmployerAddress_R_1425] FOREIGN KEY([idfEmployerAddress])
REFERENCES [dbo].[tlbGeoLocation] ([idfGeoLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbHuman] CHECK CONSTRAINT [FK_tlbHuman_tlbGeoLocation__idfEmployerAddress_R_1425]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbContactedCasePerson]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbContactedCasePerson_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbContactedCasePerson] CHECK CONSTRAINT [FK_tlbContactedCasePerson_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNAdministratedAntiviralMedication] FOREIGN KEY([idfsYNAdministratedAntiviralMedication])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsYNAdministratedAntiviralMedication]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisReferenceType]  WITH NOCHECK ADD  CONSTRAINT [FK_gisReferenceType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[gisReferenceType] CHECK CONSTRAINT [FK_gisReferenceType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tauColumn_tauTable__idfTable_R_1559] FOREIGN KEY([idfTable])
REFERENCES [dbo].[tauTable] ([idfTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tauColumn] CHECK CONSTRAINT [FK_tauColumn_tauTable__idfTable_R_1559]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesTypeToAnimalAgeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesTypeToAnimalAgeToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtSpeciesTypeToAnimalAgeToCP] CHECK CONSTRAINT [FK_trtSpeciesTypeToAnimalAgeToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEventActive]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEventActive_trtDiagnosis__idfsDiagnosis] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstEventActive] CHECK CONSTRAINT [FK_tstEventActive_trtDiagnosis__idfsDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakCaseContact]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakCaseContact_tlbHuman_idfHuman] FOREIGN KEY([idfHuman])
REFERENCES [dbo].[tlbHuman] ([idfHuman])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[OutbreakCaseContact] CHECK CONSTRAINT [FK_OutbreakCaseContact_tlbHuman_idfHuman]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtBaseReferenceAttribute]  WITH NOCHECK ADD  CONSTRAINT [FK_trtBaseReferenceAttribute_trtAttributeType__idfAttributeType] FOREIGN KEY([idfAttributeType])
REFERENCES [dbo].[trtAttributeType] ([idfAttributeType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtBaseReferenceAttribute] CHECK CONSTRAINT [FK_trtBaseReferenceAttribute_trtAttributeType__idfAttributeType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterType]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterType_trtBaseReference__idfsParameterType_R_1395] FOREIGN KEY([idfsParameterType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffParameterType] CHECK CONSTRAINT [FK_ffParameterType_trtBaseReference__idfsParameterType_R_1395]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNewID]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNewID_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstNewID] CHECK CONSTRAINT [FK_tstNewID_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHuman]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHuman_tlbGeoLocation__idfRegistrationAddress_R_1426] FOREIGN KEY([idfRegistrationAddress])
REFERENCES [dbo].[tlbGeoLocation] ([idfGeoLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbHuman] CHECK CONSTRAINT [FK_tlbHuman_tlbGeoLocation__idfRegistrationAddress_R_1426]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbDepartment]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbDepartment_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbDepartment] CHECK CONSTRAINT [FK_tlbDepartment_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillanceAggregateHeader]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillanceAggregateHeader_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillanceAggregateHeader] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillanceAggregateHeader_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsTestResult] FOREIGN KEY([idfsTestResult])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_trtBaseReference__idfsTestResult]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisRegion]  WITH NOCHECK ADD  CONSTRAINT [FK_gisRegion_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisRegion] CHECK CONSTRAINT [FK_gisRegion_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditDetailCreate]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditDetailCreate_tauDataAuditEvent__idfDataAuditEvent_R_1024] FOREIGN KEY([idfDataAuditEvent])
REFERENCES [dbo].[tauDataAuditEvent] ([idfDataAuditEvent])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tauDataAuditDetailCreate] CHECK CONSTRAINT [FK_tauDataAuditDetailCreate_tauDataAuditEvent__idfDataAuditEvent_R_1024]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEventActive]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEventActive_trtEventType__idfsEventTypeID] FOREIGN KEY([idfsEventTypeID])
REFERENCES [dbo].[trtEventType] ([idfsEventTypeID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstEventActive] CHECK CONSTRAINT [FK_tstEventActive_trtEventType__idfsEventTypeID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_trtBaseReference_DiseaseID] FOREIGN KEY([DiseaseID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_trtBaseReference_DiseaseID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakCaseContact]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakCaseContact_tlbObservation_ContactTracingObservationID] FOREIGN KEY([ContactTracingObservationID])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[OutbreakCaseContact] CHECK CONSTRAINT [FK_OutbreakCaseContact_tlbObservation_ContactTracingObservationID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtBaseReferenceAttribute]  WITH NOCHECK ADD  CONSTRAINT [FK_trtBaseReferenceAttribute_trtBaseReference__idfsBaseReference] FOREIGN KEY([idfsBaseReference])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtBaseReferenceAttribute] CHECK CONSTRAINT [FK_trtBaseReferenceAttribute_trtBaseReference__idfsBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffParameterType]  WITH NOCHECK ADD  CONSTRAINT [FK_ffParameterType_trtReferenceType__idfsReferenceType_R_927] FOREIGN KEY([idfsReferenceType])
REFERENCES [dbo].[trtReferenceType] ([idfsReferenceType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[ffParameterType] CHECK CONSTRAINT [FK_ffParameterType_trtReferenceType__idfsReferenceType_R_927]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNextNumbers]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNextNumbers_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstNextNumbers] CHECK CONSTRAINT [FK_tstNextNumbers_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHuman]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHuman_tlbHumanActual] FOREIGN KEY([idfHumanActual])
REFERENCES [dbo].[tlbHumanActual] ([idfHumanActual])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbHuman] CHECK CONSTRAINT [FK_tlbHuman_tlbHumanActual]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbEmployee]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbEmployee_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbEmployee] CHECK CONSTRAINT [FK_tlbEmployee_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBatchTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBatchTest_tstSite__idfsSite_R_1653] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbBatchTest] CHECK CONSTRAINT [FK_tlbBatchTest_tstSite__idfsSite_R_1653]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBasicSyndromicSurveillance_tlbHuman__idfHuman] FOREIGN KEY([idfHuman])
REFERENCES [dbo].[tlbHuman] ([idfHuman])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbBasicSyndromicSurveillance] CHECK CONSTRAINT [FK_tlbBasicSyndromicSurveillance_tlbHuman__idfHuman]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisSettlement]  WITH NOCHECK ADD  CONSTRAINT [FK_gisSettlement_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[gisSettlement] CHECK CONSTRAINT [FK_gisSettlement_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditDetailCreate]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditDetailCreate_tauTable__idfObjectTable_R_1561] FOREIGN KEY([idfObjectTable])
REFERENCES [dbo].[tauTable] ([idfTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tauDataAuditDetailCreate] CHECK CONSTRAINT [FK_tauDataAuditDetailCreate_tauTable__idfObjectTable_R_1561]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtStringNameTranslationToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtStringNameTranslationToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtStringNameTranslationToCP] CHECK CONSTRAINT [FK_trtStringNameTranslationToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupEIDSSAppObject]  WITH NOCHECK ADD  CONSTRAINT [FK_AppObj_ObjName] FOREIGN KEY([AppObjectNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[LkupEIDSSAppObject] CHECK CONSTRAINT [FK_AppObj_ObjName]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakCaseReport]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakCase_tlbHUmanCase_idfHumanCaseID] FOREIGN KEY([idfHumanCase])
REFERENCES [dbo].[tlbHumanCase] ([idfHumanCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[OutbreakCaseReport] CHECK CONSTRAINT [FK_OutbreakCase_tlbHUmanCase_idfHumanCaseID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtBaseReferenceAttributeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtBaseReferenceAttributeToCP_trtBaseReferenceAttribute__idfsBaseReference] FOREIGN KEY([idfBaseReferenceAttribute])
REFERENCES [dbo].[trtBaseReferenceAttribute] ([idfBaseReferenceAttribute])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtBaseReferenceAttributeToCP] CHECK CONSTRAINT [FK_trtBaseReferenceAttributeToCP_trtBaseReferenceAttribute__idfsBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuerySearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuerySearchField_ffParameter__idfsParameter_R_1353_1] FOREIGN KEY([idfsParameter])
REFERENCES [dbo].[ffParameter] ([idfsParameter])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasglQuerySearchField] CHECK CONSTRAINT [FK_tasglQuerySearchField_ffParameter__idfsParameter_R_1353_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotification]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotification_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstNotification] CHECK CONSTRAINT [FK_tstNotification_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHuman]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHuman_trtBaseReference__idfsOccupationType_R_1233] FOREIGN KEY([idfsOccupationType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbHuman] CHECK CONSTRAINT [FK_tlbHuman_trtBaseReference__idfsOccupationType_R_1233]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbEmployeeGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbEmployeeGroup_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbEmployeeGroup] CHECK CONSTRAINT [FK_tlbEmployeeGroup_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbCampaign]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbCampaign_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbCampaign] CHECK CONSTRAINT [FK_tlbCampaign_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_tlbBatchTest__idfBatchTest_R_1534] FOREIGN KEY([idfBatchTest])
REFERENCES [dbo].[tlbBatchTest] ([idfBatchTest])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_tlbBatchTest__idfBatchTest_R_1534]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisStringNameTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_gisStringNameTranslation_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[gisStringNameTranslation] CHECK CONSTRAINT [FK_gisStringNameTranslation_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditDetailDelete]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditDetailDelete_tauDataAuditEvent__idfDataAuditEvent_R_1558] FOREIGN KEY([idfDataAuditEvent])
REFERENCES [dbo].[tauDataAuditEvent] ([idfDataAuditEvent])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tauDataAuditDetailDelete] CHECK CONSTRAINT [FK_tauDataAuditDetailDelete_tauDataAuditEvent__idfDataAuditEvent_R_1558]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestForDiseaseToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestForDiseaseToCP_trtTestForDisease__idfTestForDisease_R_1884] FOREIGN KEY([idfTestForDisease])
REFERENCES [dbo].[trtTestForDisease] ([idfTestForDisease])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtTestForDiseaseToCP] CHECK CONSTRAINT [FK_trtTestForDiseaseToCP_trtTestForDisease__idfTestForDisease_R_1884]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupEIDSSMenu]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupEIDSSMenu_BaseRef_MenuID] FOREIGN KEY([EIDSSMenuID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[LkupEIDSSMenu] CHECK CONSTRAINT [FK_LkupEIDSSMenu_BaseRef_MenuID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakCaseReport]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakCase_tlbObservation_CaseEPIObservationID] FOREIGN KEY([CaseEPIObservationID])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[OutbreakCaseReport] CHECK CONSTRAINT [FK_OutbreakCase_tlbObservation_CaseEPIObservationID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtBaseReferenceAttributeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtBaseReferenceAttributeToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtBaseReferenceAttributeToCP] CHECK CONSTRAINT [FK_trtBaseReferenceAttributeToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuerySearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuerySearchField_tasglSearchFieldList__idfsSearchField_R_1352_1] FOREIGN KEY([idfsSearchField])
REFERENCES [dbo].[tasSearchField] ([idfsSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasglQuerySearchField] CHECK CONSTRAINT [FK_tasglQuerySearchField_tasglSearchFieldList__idfsSearchField_R_1352_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotificationActivity]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotificationActivity_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstNotificationActivity] CHECK CONSTRAINT [FK_tstNotificationActivity_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHuman]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHuman_trtBaseReference__idfsNationality_R_1278] FOREIGN KEY([idfsNationality])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbHuman] CHECK CONSTRAINT [FK_tlbHuman_trtBaseReference__idfsNationality_R_1278]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbEmployeeGroupMember]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbEmployeeGroupMember_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbEmployeeGroupMember] CHECK CONSTRAINT [FK_tlbEmployeeGroupMember_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbEmployeeGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbEmployeeGroup_tstSite__idfsSite_R_1018] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbEmployeeGroup] CHECK CONSTRAINT [FK_tlbEmployeeGroup_tstSite__idfsSite_R_1018]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisImportedMap]  WITH NOCHECK ADD  CONSTRAINT [FK_gisImportedMap_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[gisImportedMap] CHECK CONSTRAINT [FK_gisImportedMap_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_tlbMaterial] FOREIGN KEY([idfMaterial])
REFERENCES [dbo].[tlbMaterial] ([idfMaterial])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_tlbMaterial]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisUserLayer]  WITH NOCHECK ADD  CONSTRAINT [FK_gisUserLayer_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisUserLayer] CHECK CONSTRAINT [FK_gisUserLayer_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditDetailDelete]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditDetailDelete_tauTable__idfObjectTable_R_1563] FOREIGN KEY([idfObjectTable])
REFERENCES [dbo].[tauTable] ([idfTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tauDataAuditDetailDelete] CHECK CONSTRAINT [FK_tauDataAuditDetailDelete_tauTable__idfObjectTable_R_1563]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestForDiseaseToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestForDiseaseToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtTestForDiseaseToCP] CHECK CONSTRAINT [FK_trtTestForDiseaseToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstRayonToReportSite]  WITH NOCHECK ADD  CONSTRAINT [FK_tstRayonToReportSite_gisRayon__idfsRayon] FOREIGN KEY([idfsRayon])
REFERENCES [dbo].[gisRayon] ([idfsRayon])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstRayonToReportSite] CHECK CONSTRAINT [FK_tstRayonToReportSite_gisRayon__idfsRayon]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakCaseReport]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakCase_tlbOutbreak_idfOutbreakID] FOREIGN KEY([idfOutbreak])
REFERENCES [dbo].[tlbOutbreak] ([idfOutbreak])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[OutbreakCaseReport] CHECK CONSTRAINT [FK_OutbreakCase_tlbOutbreak_idfOutbreakID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtBaseReferenceToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtBaseReferenceToCP_trtBaseReference__idfsBaseReference] FOREIGN KEY([idfsBaseReference])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtBaseReferenceToCP] CHECK CONSTRAINT [FK_trtBaseReferenceToCP_trtBaseReference__idfsBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuerySearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuerySearchField_tasglQuerySearchObject__idfQuerySearchObject_R_1351_1] FOREIGN KEY([idfQuerySearchObject])
REFERENCES [dbo].[tasglQuerySearchObject] ([idfQuerySearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasglQuerySearchField] CHECK CONSTRAINT [FK_tasglQuerySearchField_tasglQuerySearchObject__idfQuerySearchObject_R_1351_1]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotificationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotificationShared_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstNotificationShared] CHECK CONSTRAINT [FK_tstNotificationShared_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHuman]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHuman_trtBaseReference__idfsHumanGender_R_1232] FOREIGN KEY([idfsHumanGender])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbHuman] CHECK CONSTRAINT [FK_tlbHuman_trtBaseReference__idfsHumanGender_R_1232]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisImportedMap]  WITH NOCHECK ADD  CONSTRAINT [FK_gisImportedMap_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisImportedMap] CHECK CONSTRAINT [FK_gisImportedMap_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBCountry]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBCountry_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[gisWKBCountry] CHECK CONSTRAINT [FK_gisWKBCountry_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditDetailRestore]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditDetailRestore_tauDataAuditEvent__idfDataAuditEvent_R_1558] FOREIGN KEY([idfDataAuditEvent])
REFERENCES [dbo].[tauDataAuditEvent] ([idfDataAuditEvent])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tauDataAuditDetailRestore] CHECK CONSTRAINT [FK_tauDataAuditDetailRestore_tauDataAuditEvent__idfDataAuditEvent_R_1558]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestTypeToTestResultToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestTypeToTestResultToCountry_trtTestTypeToTestResult__idfsTestName_idfsTestResult] FOREIGN KEY([idfsTestName], [idfsTestResult])
REFERENCES [dbo].[trtTestTypeToTestResult] ([idfsTestName], [idfsTestResult])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtTestTypeToTestResultToCP] CHECK CONSTRAINT [FK_trtTestTypeToTestResultToCountry_trtTestTypeToTestResult__idfsTestName_idfsTestResult]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakCaseReport]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakCase_tlbVetCase_idfVetCaseID] FOREIGN KEY([idfVetCase])
REFERENCES [dbo].[tlbVetCase] ([idfVetCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[OutbreakCaseReport] CHECK CONSTRAINT [FK_OutbreakCase_tlbVetCase_idfVetCaseID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtBaseReferenceToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtBaseReferenceToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtBaseReferenceToCP] CHECK CONSTRAINT [FK_trtBaseReferenceToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuerySearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuerySearchField_ffParameter__idfsParameter_R_1353] FOREIGN KEY([idfsParameter])
REFERENCES [dbo].[ffParameter] ([idfsParameter])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasQuerySearchField] CHECK CONSTRAINT [FK_tasQuerySearchField_ffParameter__idfsParameter_R_1353]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotificationStatus]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotificationStatus_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstNotificationStatus] CHECK CONSTRAINT [FK_tstNotificationStatus_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHuman]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHuman_trtBaseReference_idfsPersonIDType] FOREIGN KEY([idfsPersonIDType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbHuman] CHECK CONSTRAINT [FK_tlbHuman_trtBaseReference_idfsPersonIDType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarmActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarmActual_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbFarmActual] CHECK CONSTRAINT [FK_tlbFarmActual_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFreezer]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFreezer_tstSite__idfsSite_R_236] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbFreezer] CHECK CONSTRAINT [FK_tlbFreezer_tstSite__idfsSite_R_236]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_tlbOffice__idfPerformedByOffice] FOREIGN KEY([idfPerformedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_tlbOffice__idfPerformedByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBDistrict]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBDistrict_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[gisWKBDistrict] CHECK CONSTRAINT [FK_gisWKBDistrict_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditDetailRestore]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditDetailRestore_tauTable__idfObjectTable_R_1563] FOREIGN KEY([idfObjectTable])
REFERENCES [dbo].[tauTable] ([idfTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tauDataAuditDetailRestore] CHECK CONSTRAINT [FK_tauDataAuditDetailRestore_tauTable__idfObjectTable_R_1563]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestTypeToTestResultToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestTypeToTestResultToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtTestTypeToTestResultToCP] CHECK CONSTRAINT [FK_trtTestTypeToTestResultToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchField_gisReferenceType__idfsGISReferenceType_R_1720] FOREIGN KEY([idfsGISReferenceType])
REFERENCES [dbo].[gisReferenceType] ([idfsGISReferenceType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasSearchField] CHECK CONSTRAINT [FK_tasSearchField_gisReferenceType__idfsGISReferenceType_R_1720]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakCaseReport]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreatkCase_Observation_OutbreakCaseObservationID] FOREIGN KEY([OutbreakCaseObservationID])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[OutbreakCaseReport] CHECK CONSTRAINT [FK_OutbreatkCase_Observation_OutbreakCaseObservationID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtCaseClassification]  WITH NOCHECK ADD  CONSTRAINT [FK_trtCaseClassification_trtBaseReference__idfsCaseClassification] FOREIGN KEY([idfsCaseClassification])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtCaseClassification] CHECK CONSTRAINT [FK_trtCaseClassification_trtBaseReference__idfsCaseClassification]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuerySearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuerySearchField_tasQuerySearchObject__idfQuerySearchObject_R_1351] FOREIGN KEY([idfQuerySearchObject])
REFERENCES [dbo].[tasQuerySearchObject] ([idfQuerySearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasQuerySearchField] CHECK CONSTRAINT [FK_tasQuerySearchField_tasQuerySearchObject__idfQuerySearchObject_R_1351]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstObjectAccess]  WITH NOCHECK ADD  CONSTRAINT [FK_tstObjectAccess_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstObjectAccess] CHECK CONSTRAINT [FK_tstObjectAccess_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[UserPreference]  WITH NOCHECK ADD  CONSTRAINT [FK_UserPreference_BAseRef_ModuleConstantID] FOREIGN KEY([ModuleConstantID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[UserPreference] CHECK CONSTRAINT [FK_UserPreference_BAseRef_ModuleConstantID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFreezer]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFreezer_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbFreezer] CHECK CONSTRAINT [FK_tlbFreezer_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFreezerSubdivision]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFreezerSubdivision_tstSite__idfsSite_R_908] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbFreezerSubdivision] CHECK CONSTRAINT [FK_tlbFreezerSubdivision_tstSite__idfsSite_R_908]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_tlbOffice__idfResultEnteredByOffice] FOREIGN KEY([idfResultEnteredByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_tlbOffice__idfResultEnteredByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflDataAuditEventFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflDataAuditEventFiltered_tauDataAuditEvent__idfDataAuditEvent_R_1830] FOREIGN KEY([idfDataAuditEvent])
REFERENCES [dbo].[tauDataAuditEvent] ([idfDataAuditEvent])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tflDataAuditEventFiltered] CHECK CONSTRAINT [FK_tflDataAuditEventFiltered_tauDataAuditEvent__idfDataAuditEvent_R_1830]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbEmployee]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbEmployee_trtBaseReference_idfsEmployeeCategory] FOREIGN KEY([idfsEmployeeCategory])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbEmployee] CHECK CONSTRAINT [FK_tlbEmployee_trtBaseReference_idfsEmployeeCategory]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstBarcodeLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tstBarcodeLayout_tstNextNumbers__idfsNumberName_R_1677] FOREIGN KEY([idfsNumberName])
REFERENCES [dbo].[tstNextNumbers] ([idfsNumberName])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstBarcodeLayout] CHECK CONSTRAINT [FK_tstBarcodeLayout_tstNextNumbers__idfsNumberName_R_1677]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchField_tasAggregateFunction__idfsDefaultAggregateFunction] FOREIGN KEY([idfsDefaultAggregateFunction])
REFERENCES [dbo].[tasAggregateFunction] ([idfsAggregateFunction])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasSearchField] CHECK CONSTRAINT [FK_tasSearchField_tasAggregateFunction__idfsDefaultAggregateFunction]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakSpeciesParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_outbreakSpeciesParameter_tlbOutbreak_OutbreakID] FOREIGN KEY([idfOutbreak])
REFERENCES [dbo].[tlbOutbreak] ([idfOutbreak])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[OutbreakSpeciesParameter] CHECK CONSTRAINT [FK_outbreakSpeciesParameter_tlbOutbreak_OutbreakID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtCollectionMethodForVectorType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtCollectionMethodForVectorType_trtBaseReference_idfsCollectionMethod] FOREIGN KEY([idfsCollectionMethod])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtCollectionMethodForVectorType] CHECK CONSTRAINT [FK_trtCollectionMethodForVectorType_trtBaseReference_idfsCollectionMethod]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuerySearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuerySearchField_tasSearchFieldList__idfsSearchField_R_1352] FOREIGN KEY([idfsSearchField])
REFERENCES [dbo].[tasSearchField] ([idfsSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasQuerySearchField] CHECK CONSTRAINT [FK_tasQuerySearchField_tasSearchFieldList__idfsSearchField_R_1352]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstPersonalDataGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tstPersonalDataGroup_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstPersonalDataGroup] CHECK CONSTRAINT [FK_tstPersonalDataGroup_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbGeoLocation__idfPointGeoLocation_R_1421] FOREIGN KEY([idfPointGeoLocation])
REFERENCES [dbo].[tlbGeoLocation] ([idfGeoLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbGeoLocation__idfPointGeoLocation_R_1421]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFreezerSubdivision]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFreezerSubdivision_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbFreezerSubdivision] CHECK CONSTRAINT [FK_tlbFreezerSubdivision_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocation_tstSite__idfsSite_R_1028] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbGeoLocation] CHECK CONSTRAINT [FK_tlbGeoLocation_tstSite__idfsSite_R_1028]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_tlbOffice__idfTestedByOffice] FOREIGN KEY([idfTestedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_tlbOffice__idfTestedByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBEarthRoad]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBEarthRoad_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisWKBEarthRoad] CHECK CONSTRAINT [FK_gisWKBEarthRoad_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflDataAuditEventFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflDataAuditEventFiltered_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tflDataAuditEventFiltered] CHECK CONSTRAINT [FK_tflDataAuditEventFiltered_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchField_trtBaseReference__idfsSearchField_R_1355] FOREIGN KEY([idfsSearchField])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasSearchField] CHECK CONSTRAINT [FK_tasSearchField_trtBaseReference__idfsSearchField_R_1355]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakSpeciesParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakSpeciesParm_FormTemplate_CaseMonitoringTemplateID] FOREIGN KEY([CaseMonitoringTemplateID])
REFERENCES [dbo].[ffFormTemplate] ([idfsFormTemplate])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[OutbreakSpeciesParameter] CHECK CONSTRAINT [FK_OutbreakSpeciesParm_FormTemplate_CaseMonitoringTemplateID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtCollectionMethodForVectorType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtCollectionMethodForVectorType_trtVectorType_idfsVectorType] FOREIGN KEY([idfsVectorType])
REFERENCES [dbo].[trtVectorType] ([idfsVectorType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtCollectionMethodForVectorType] CHECK CONSTRAINT [FK_trtCollectionMethodForVectorType_trtVectorType_idfsVectorType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchFieldToFFParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchFieldToFFParameter_ffParameter_idfsParameter] FOREIGN KEY([idfsParameter])
REFERENCES [dbo].[ffParameter] ([idfsParameter])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasSearchFieldToFFParameter] CHECK CONSTRAINT [FK_tasSearchFieldToFFParameter_ffParameter_idfsParameter]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstPersonalDataGroupToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_tstPersonalDataGroupToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstPersonalDataGroupToCP] CHECK CONSTRAINT [FK_tstPersonalDataGroupToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbHumanCase__idfDeduplicationResultCase_R_1444] FOREIGN KEY([idfDeduplicationResultCase])
REFERENCES [dbo].[tlbHumanCase] ([idfHumanCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbHumanCase__idfDeduplicationResultCase_R_1444]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocation_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbGeoLocation] CHECK CONSTRAINT [FK_tlbGeoLocation_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationShared_tstSite__idfsSite_R_1028] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbGeoLocationShared] CHECK CONSTRAINT [FK_tlbGeoLocationShared_tstSite__idfsSite_R_1028]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_tlbOffice__idfValidatedByOffice] FOREIGN KEY([idfValidatedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_tlbOffice__idfValidatedByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBForest]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBForest_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisWKBForest] CHECK CONSTRAINT [FK_gisWKBForest_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstLocalConnectionContext]  WITH NOCHECK ADD  CONSTRAINT [FK_tstLocalConnectionContext_tauDataAuditEvent__idfDataAuditEvent_R_1043] FOREIGN KEY([idfDataAuditEvent])
REFERENCES [dbo].[tauDataAuditEvent] ([idfDataAuditEvent])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstLocalConnectionContext] CHECK CONSTRAINT [FK_tstLocalConnectionContext_tauDataAuditEvent__idfDataAuditEvent_R_1043]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstUserTable]  WITH NOCHECK ADD  CONSTRAINT [FK_tstUserTable_trtBaseReference_idfsBaseReference] FOREIGN KEY([PreferredLanguageID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstUserTable] CHECK CONSTRAINT [FK_tstUserTable_trtBaseReference_idfsBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstInvisibleFieldsToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_tstInvisibleFieldsToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tstInvisibleFieldsToCP] CHECK CONSTRAINT [FK_tstInvisibleFieldsToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchField_trtBaseReference__idfsSearchFieldType_R_1587] FOREIGN KEY([idfsSearchFieldType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasSearchField] CHECK CONSTRAINT [FK_tasSearchField_trtBaseReference__idfsSearchFieldType_R_1587]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakSpeciesParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakSpeciesParm_FormTemplate_CaseQuestionaireTemplateID] FOREIGN KEY([CaseQuestionaireTemplateID])
REFERENCES [dbo].[ffFormTemplate] ([idfsFormTemplate])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[OutbreakSpeciesParameter] CHECK CONSTRAINT [FK_OutbreakSpeciesParm_FormTemplate_CaseQuestionaireTemplateID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDerivativeForSampleType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDerivativeForSampleType_trtBaseReference__idfsDerivativeType_R_1863] FOREIGN KEY([idfsDerivativeType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtDerivativeForSampleType] CHECK CONSTRAINT [FK_trtDerivativeForSampleType_trtBaseReference__idfsDerivativeType_R_1863]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchFieldToFFParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchFieldToFFParameter_tasSearchField_idfsSearchField] FOREIGN KEY([idfsSearchField])
REFERENCES [dbo].[tasSearchField] ([idfsSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasSearchFieldToFFParameter] CHECK CONSTRAINT [FK_tasSearchFieldToFFParameter_tasSearchField_idfsSearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstRayonToReportSite]  WITH NOCHECK ADD  CONSTRAINT [FK_tstRayonToReportSite_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstRayonToReportSite] CHECK CONSTRAINT [FK_tstRayonToReportSite_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbHuman] FOREIGN KEY([idfHuman])
REFERENCES [dbo].[tlbHuman] ([idfHuman])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbHuman]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationShared_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbGeoLocationShared] CHECK CONSTRAINT [FK_tlbGeoLocationShared_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHuman]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHuman_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbHuman] CHECK CONSTRAINT [FK_tlbHuman_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_tlbPerson__idfResultEnteredByPerson] FOREIGN KEY([idfResultEnteredByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_tlbPerson__idfResultEnteredByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBHighway]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBHighway_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[gisWKBHighway] CHECK CONSTRAINT [FK_gisWKBHighway_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstLocalConnectionContext]  WITH NOCHECK ADD  CONSTRAINT [FK_tstLocalConnectionContext_tstEvent__idfEventID_R_1044] FOREIGN KEY([idfEventID])
REFERENCES [dbo].[tstEvent] ([idfEventID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstLocalConnectionContext] CHECK CONSTRAINT [FK_tstLocalConnectionContext_tstEvent__idfEventID_R_1044]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstUserTable]  WITH NOCHECK ADD  CONSTRAINT [FK_tstUserTable_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstUserTable] CHECK CONSTRAINT [FK_tstUserTable_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstInvisibleFieldsToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_tstInvisibleFieldsToCP_tstInvisibleFields_idfInvisibleField] FOREIGN KEY([idfInvisibleField])
REFERENCES [dbo].[tstInvisibleFields] ([idfInvisibleField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstInvisibleFieldsToCP] CHECK CONSTRAINT [FK_tstInvisibleFieldsToCP_tstInvisibleFields_idfInvisibleField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchField_tasSearchObject__idfsSearchObject_R_1346] FOREIGN KEY([idfsSearchObject])
REFERENCES [dbo].[tasSearchObject] ([idfsSearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasSearchField] CHECK CONSTRAINT [FK_tasSearchField_tasSearchObject__idfsSearchObject_R_1346]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakSpeciesParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakSpeciesParm_FormTemplate_ContactTracingTemplateID] FOREIGN KEY([ContactTracingTemplateID])
REFERENCES [dbo].[ffFormTemplate] ([idfsFormTemplate])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[OutbreakSpeciesParameter] CHECK CONSTRAINT [FK_OutbreakSpeciesParm_FormTemplate_ContactTracingTemplateID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDerivativeForSampleType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDerivativeForSampleType_trtSampleType__idfsSampleType_R_1862] FOREIGN KEY([idfsSampleType])
REFERENCES [dbo].[trtSampleType] ([idfsSampleType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtDerivativeForSampleType] CHECK CONSTRAINT [FK_trtDerivativeForSampleType_trtSampleType__idfsSampleType_R_1862]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tdeDataExportFFReference]  WITH NOCHECK ADD  CONSTRAINT [FK_tdeDataExportFFReference_ffParameter__idfsParameter] FOREIGN KEY([idfsParameter])
REFERENCES [dbo].[ffParameter] ([idfsParameter])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tdeDataExportFFReference] CHECK CONSTRAINT [FK_tdeDataExportFFReference_ffParameter__idfsParameter]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSecurityAudit]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSecurityAudit_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstSecurityAudit] CHECK CONSTRAINT [FK_tstSecurityAudit_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbCampaign]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbCampaign_trtBaseReference_idfsCampaignStatus] FOREIGN KEY([idfsCampaignStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbCampaign] CHECK CONSTRAINT [FK_tlbCampaign_trtBaseReference_idfsCampaignStatus]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsFinalState_R_1292] FOREIGN KEY([idfsFinalState])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsFinalState_R_1292]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationSharedTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationSharedTranslation_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbGeoLocationSharedTranslation] CHECK CONSTRAINT [FK_tlbGeoLocationSharedTranslation_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_tlbPerson__idfTestedByPerson] FOREIGN KEY([idfTestedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_tlbPerson__idfTestedByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBInlandWater]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBInlandWater_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[gisWKBInlandWater] CHECK CONSTRAINT [FK_gisWKBInlandWater_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstLocalConnectionContext]  WITH NOCHECK ADD  CONSTRAINT [FK_tstLocalConnectionContext_tstUserTable__idfUserID_R_1042] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstLocalConnectionContext] CHECK CONSTRAINT [FK_tstLocalConnectionContext_tstUserTable__idfUserID_R_1042]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstMandatoryFieldsToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_tstMandatoryFieldsToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tstMandatoryFieldsToCP] CHECK CONSTRAINT [FK_tstMandatoryFieldsToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchFieldList_trtReferenceType__idfsReferenceType_R_1349] FOREIGN KEY([idfsReferenceType])
REFERENCES [dbo].[trtReferenceType] ([idfsReferenceType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasSearchField] CHECK CONSTRAINT [FK_tasSearchFieldList_trtReferenceType__idfsReferenceType_R_1349]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosis_trtBaseReference__idfsDiagnosis_R_624] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtDiagnosis] CHECK CONSTRAINT [FK_trtDiagnosis_trtBaseReference__idfsDiagnosis_R_624]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tdeDataExportFFReference]  WITH NOCHECK ADD  CONSTRAINT [FK_tdeDataExportFFReference_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tdeDataExportFFReference] CHECK CONSTRAINT [FK_tdeDataExportFFReference_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSecurityConfiguration]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSecurityConfiguration_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstSecurityConfiguration] CHECK CONSTRAINT [FK_tstSecurityConfiguration_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsHospitalizationStatus_R_1269] FOREIGN KEY([idfsHospitalizationStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsHospitalizationStatus_R_1269]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationTranslation_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbGeoLocationTranslation] CHECK CONSTRAINT [FK_tlbGeoLocationTranslation_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tstSite__idfsCurrentSite] FOREIGN KEY([idfsCurrentSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tstSite__idfsCurrentSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_tlbPerson__idfValidatedByPerson] FOREIGN KEY([idfValidatedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_tlbPerson__idfValidatedByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBLake]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBLake_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisWKBLake] CHECK CONSTRAINT [FK_gisWKBLake_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstMandatoryFieldsToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_tstMandatoryFieldsToCP_tstMandatoryFields_idfMandatoryField] FOREIGN KEY([idfMandatoryField])
REFERENCES [dbo].[tstMandatoryFields] ([idfMandatoryField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstMandatoryFieldsToCP] CHECK CONSTRAINT [FK_tstMandatoryFieldsToCP_tstMandatoryFields_idfMandatoryField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRegion]  WITH NOCHECK ADD  CONSTRAINT [FK__gisWKBReg__idfsG__34164368] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisRegion] ([idfsRegion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[gisWKBRegion] CHECK CONSTRAINT [FK__gisWKBReg__idfsG__34164368]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosis_trtBaseReference__idfsUsingType_R_1600] FOREIGN KEY([idfsUsingType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtDiagnosis] CHECK CONSTRAINT [FK_trtDiagnosis_trtBaseReference__idfsUsingType_R_1600]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbActivityParameters]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbActivityParameters_ffParameter__idfsParameter_R_222] FOREIGN KEY([idfsParameter])
REFERENCES [dbo].[ffParameter] ([idfsParameter])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbActivityParameters] CHECK CONSTRAINT [FK_tlbActivityParameters_ffParameter__idfsParameter_R_222]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSecurityConfigurationAlphabet]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSecurityConfigurationAlphabet_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstSecurityConfigurationAlphabet] CHECK CONSTRAINT [FK_tstSecurityConfigurationAlphabet_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsHumanAgeType_R_1247] FOREIGN KEY([idfsHumanAgeType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsHumanAgeType_R_1247]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHerd]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHerd_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbHerd] CHECK CONSTRAINT [FK_tlbHerd_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_tstSite__idfsSite_R_1066] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_tstSite__idfsSite_R_1066]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_trtBaseReference__idfsTestName] FOREIGN KEY([idfsTestName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_trtBaseReference__idfsTestName]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBLanduse]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBLanduse_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[gisWKBLanduse] CHECK CONSTRAINT [FK_gisWKBLanduse_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSecurityAudit]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSecurityAudit_tauDataAuditEvent__idfDataAuditEvent_R_1731] FOREIGN KEY([idfDataAuditEvent])
REFERENCES [dbo].[tauDataAuditEvent] ([idfDataAuditEvent])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstSecurityAudit] CHECK CONSTRAINT [FK_tstSecurityAudit_tauDataAuditEvent__idfDataAuditEvent_R_1731]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstPersonalDataGroupToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_tstPersonalDataGroupToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tstPersonalDataGroupToCP] CHECK CONSTRAINT [FK_tstPersonalDataGroupToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBSettlement]  WITH NOCHECK ADD  CONSTRAINT [FK__gisWKBSet__idfsG__322DFAF6] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisSettlement] ([idfsSettlement])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[gisWKBSettlement] CHECK CONSTRAINT [FK__gisWKBSet__idfsG__322DFAF6]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauPINAuditEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tauPINAuditEvent_tstUserTable] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tauPINAuditEvent] CHECK CONSTRAINT [FK_tauPINAuditEvent_tstUserTable]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroup_trtBaseReference_idfsAgeType] FOREIGN KEY([idfsAgeType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtDiagnosisAgeGroup] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroup_trtBaseReference_idfsAgeType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbActivityParameters]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbActivityParameters_tlbObservation__idfObservation_R_1423] FOREIGN KEY([idfObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbActivityParameters] CHECK CONSTRAINT [FK_tlbActivityParameters_tlbObservation__idfObservation_R_1423]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSecurityConfigurationAlphabetParticipation]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSecurityConfigurationAlphabetParticipation_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstSecurityConfigurationAlphabetParticipation] CHECK CONSTRAINT [FK_tstSecurityConfigurationAlphabetParticipation_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsYNAntimicrobialTherapy_R_1409] FOREIGN KEY([idfsYNAntimicrobialTherapy])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsYNAntimicrobialTherapy_R_1409]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHerdActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHerdActual_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbHerdActual] CHECK CONSTRAINT [FK_tlbHerdActual_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSession_tstSite__idfsSite_R_1746] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbMonitoringSession] CHECK CONSTRAINT [FK_tlbMonitoringSession_tstSite__idfsSite_R_1746]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_trtBaseReference__idfsTestCategory] FOREIGN KEY([idfsTestCategory])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_trtBaseReference__idfsTestCategory]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBMainRiver]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBMainRiver_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisWKBMainRiver] CHECK CONSTRAINT [FK_gisWKBMainRiver_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSecurityAudit]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSecurityAudit_trtBaseReference__idfsAction_R_1727] FOREIGN KEY([idfsAction])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstSecurityAudit] CHECK CONSTRAINT [FK_tstSecurityAudit_trtBaseReference__idfsAction_R_1727]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstPersonalDataGroupToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_tstPersonalDataGroupToCP_tstPersonalDataGroup_idfPersonalDataGroup] FOREIGN KEY([idfPersonalDataGroup])
REFERENCES [dbo].[tstPersonalDataGroup] ([idfPersonalDataGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstPersonalDataGroupToCP] CHECK CONSTRAINT [FK_tstPersonalDataGroupToCP_tstPersonalDataGroup_idfPersonalDataGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflSiteGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tflSiteGroup_gisLocation_idfsLocation] FOREIGN KEY([idfsLocation])
REFERENCES [dbo].[gisLocation] ([idfsLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tflSiteGroup] CHECK CONSTRAINT [FK_tflSiteGroup_gisLocation_idfsLocation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroup_trtBaseReference_idfsDiagnosisAgeGroup] FOREIGN KEY([idfsDiagnosisAgeGroup])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtDiagnosisAgeGroup] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroup_trtBaseReference_idfsDiagnosisAgeGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffRuleConstant]  WITH NOCHECK ADD  CONSTRAINT [FK_ffRuleConstant_ffRule__idfsRule_R_1648] FOREIGN KEY([idfsRule])
REFERENCES [dbo].[ffRule] ([idfsRule])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[ffRuleConstant] CHECK CONSTRAINT [FK_ffRuleConstant_ffRule__idfsRule_R_1648]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSite]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSite_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstSite] CHECK CONSTRAINT [FK_tstSite_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsYNHospitalization_R_1410] FOREIGN KEY([idfsYNHospitalization])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsYNHospitalization_R_1410]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHuman]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHuman_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbHuman] CHECK CONSTRAINT [FK_tlbHuman_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbObservation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbObservation_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbObservation] CHECK CONSTRAINT [FK_tlbObservation_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_trtBaseReference__idfsTestResult_R_1243] FOREIGN KEY([idfsTestResult])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_trtBaseReference__idfsTestResult_R_1243]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBMajorRoad]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBMajorRoad_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisWKBMajorRoad] CHECK CONSTRAINT [FK_gisWKBMajorRoad_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSecurityAudit]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSecurityAudit_trtBaseReference__idfsProcessType_R_1729] FOREIGN KEY([idfsProcessType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstSecurityAudit] CHECK CONSTRAINT [FK_tstSecurityAudit_trtBaseReference__idfsProcessType_R_1729]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroupToStatisticalAgeGroup_trtBaseReference_idfsStatisticalAgeGroup] FOREIGN KEY([idfsStatisticalAgeGroup])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroup] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroupToStatisticalAgeGroup_trtBaseReference_idfsStatisticalAgeGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffRuleFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_ffRuleFunction_trtBaseReference__idfsRuleFunction_R_1393] FOREIGN KEY([idfsRuleFunction])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[ffRuleFunction] CHECK CONSTRAINT [FK_ffRuleFunction_trtBaseReference__idfsRuleFunction_R_1393]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsYNSpecimenCollected_R_1411] FOREIGN KEY([idfsYNSpecimenCollected])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsYNSpecimenCollected_R_1411]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanActual_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbHumanActual] CHECK CONSTRAINT [FK_tlbHumanActual_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOffice]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOffice_tstSite__idfsSite_R_1030] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbOffice] CHECK CONSTRAINT [FK_tlbOffice_tstSite__idfsSite_R_1030]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_trtBaseReference__idfsTestStatus_R_1754] FOREIGN KEY([idfsTestStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_trtBaseReference__idfsTestStatus_R_1754]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBPath]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBPath_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisWKBPath] CHECK CONSTRAINT [FK_gisWKBPath_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[dotNetAppenderLog]  WITH NOCHECK ADD  CONSTRAINT [FK_dotNetAppenderLog_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[dotNetAppenderLog] CHECK CONSTRAINT [FK_dotNetAppenderLog_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSecurityAudit]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSecurityAudit_trtBaseReference__idfsResult_R_1728] FOREIGN KEY([idfsResult])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstSecurityAudit] CHECK CONSTRAINT [FK_tstSecurityAudit_trtBaseReference__idfsResult_R_1728]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSecurityConfigurationAlphabetParticipation]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSecurityConfigurationAlphabetParticipation_tstSecurityConfiguration__idfSecurityConfiguration_R_1763] FOREIGN KEY([idfSecurityConfiguration])
REFERENCES [dbo].[tstSecurityConfiguration] ([idfSecurityConfiguration])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstSecurityConfigurationAlphabetParticipation] CHECK CONSTRAINT [FK_tstSecurityConfigurationAlphabetParticipation_tstSecurityConfiguration__idfSecurityConfiguration_R_1763]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisUserLayer]  WITH NOCHECK ADD  CONSTRAINT [FK_gisUserLayer_tstUserTable] FOREIGN KEY([idfUser])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[gisUserLayer] CHECK CONSTRAINT [FK_gisUserLayer_tstUserTable]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbOffice__idfOffice] FOREIGN KEY([idfOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbOffice__idfOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroupToStatisticalAgeGroup_trtDiagnosisAgeGroup_idfsDiagnosisAgeGroup] FOREIGN KEY([idfsDiagnosisAgeGroup])
REFERENCES [dbo].[trtDiagnosisAgeGroup] ([idfsDiagnosisAgeGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroup] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroupToStatisticalAgeGroup_trtDiagnosisAgeGroup_idfsDiagnosisAgeGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSectionForAction]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSectionForAction_ffRule__idfsRule_R_1403] FOREIGN KEY([idfsRule])
REFERENCES [dbo].[ffRule] ([idfsRule])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[ffSectionForAction] CHECK CONSTRAINT [FK_ffSectionForAction_ffRule__idfsRule_R_1403]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstUserTableLocal]  WITH NOCHECK ADD  CONSTRAINT [FK_tstUserTableLocal_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstUserTableLocal] CHECK CONSTRAINT [FK_tstUserTableLocal_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsYNRelatedToOutbreak_R_1413] FOREIGN KEY([idfsYNRelatedToOutbreak])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsYNRelatedToOutbreak_R_1413]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreak]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreak_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbOutbreak] CHECK CONSTRAINT [FK_tlbOutbreak_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_trtDiagnosis] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_trtDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRailroad]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRailroad_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[gisWKBRailroad] CHECK CONSTRAINT [FK_gisWKBRailroad_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBDistrictReady]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBDistrictReady_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisWKBDistrictReady] CHECK CONSTRAINT [FK_gisWKBDistrictReady_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSecurityAudit]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSecurityAudit_tstUserTable__idfUserID_R_1726] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstSecurityAudit] CHECK CONSTRAINT [FK_tstSecurityAudit_tstUserTable__idfUserID_R_1726]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSecurityConfigurationAlphabetParticipation]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSecurityConfigurationAlphabetParticipation_tstSecurityConfigurationAlphabet__idfsSecurityConfigurationAlphabet_R_1762] FOREIGN KEY([idfsSecurityConfigurationAlphabet])
REFERENCES [dbo].[tstSecurityConfigurationAlphabet] ([idfsSecurityConfigurationAlphabet])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstSecurityConfigurationAlphabetParticipation] CHECK CONSTRAINT [FK_tstSecurityConfigurationAlphabetParticipation_tstSecurityConfigurationAlphabet__idfsSecurityConfigurationAlphabet_R_1762]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[locStringNameTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_locStringNameTranslation_locBaseReference__idflBaseReference_R_1702] FOREIGN KEY([idflBaseReference])
REFERENCES [dbo].[locBaseReference] ([idflBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[locStringNameTranslation] CHECK CONSTRAINT [FK_locStringNameTranslation_locBaseReference__idflBaseReference_R_1702]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocation_gisLocation_idfsLocation] FOREIGN KEY([idfsLocation])
REFERENCES [dbo].[gisLocation] ([idfsLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbGeoLocation] CHECK CONSTRAINT [FK_tlbGeoLocation_gisLocation_idfsLocation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisToDiagnosisGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisToDiagnosisGroup_trtBaseReference__idfsDiagnosisGroup] FOREIGN KEY([idfsDiagnosisGroup])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtDiagnosisToDiagnosisGroup] CHECK CONSTRAINT [FK_trtDiagnosisToDiagnosisGroup_trtBaseReference__idfsDiagnosisGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSectionForAction]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSectionForAction_ffSectionForTemplate__idfsFormTemplate_____________________________________________idfsSection_R_1402] FOREIGN KEY([idfsFormTemplate], [idfsSection])
REFERENCES [dbo].[ffSectionForTemplate] ([idfsFormTemplate], [idfsSection])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[ffSectionForAction] CHECK CONSTRAINT [FK_ffSectionForAction_ffSectionForTemplate__idfsFormTemplate_____________________________________________idfsSection_R_1402]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstUserTableOldPassword]  WITH NOCHECK ADD  CONSTRAINT [FK_tstUserTableOldPassword_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstUserTableOldPassword] CHECK CONSTRAINT [FK_tstUserTableOldPassword_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsOutcome_R_1414] FOREIGN KEY([idfsOutcome])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsOutcome_R_1414]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMaterial_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbMaterial] CHECK CONSTRAINT [FK_tlbMaterial_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTransferOUT]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTransferOUT_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbTransferOUT] CHECK CONSTRAINT [FK_tlbTransferOUT_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBatchTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBatchTest_trtBaseReference__idfsTestName] FOREIGN KEY([idfsTestName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbBatchTest] CHECK CONSTRAINT [FK_tlbBatchTest_trtBaseReference__idfsTestName]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRayon]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRayon_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisWKBRayon] CHECK CONSTRAINT [FK_gisWKBRayon_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRayonReady]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRayonReady_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[gisWKBRayonReady] CHECK CONSTRAINT [FK_gisWKBRayonReady_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstUserTableLocal]  WITH NOCHECK ADD  CONSTRAINT [FK_tstUserTableLocal_tstUserTable_idfUserID] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tstUserTableLocal] CHECK CONSTRAINT [FK_tstUserTableLocal_tstUserTable_idfUserID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[locStringNameTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_locStringNameTranslation_trtBaseReference__idfsLanguage_R_1692] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[locStringNameTranslation] CHECK CONSTRAINT [FK_locStringNameTranslation_trtBaseReference__idfsLanguage_R_1692]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGeoLocationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGeoLocationShared_gisLocation_idfsLocation] FOREIGN KEY([idfsLocation])
REFERENCES [dbo].[gisLocation] ([idfsLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbGeoLocationShared] CHECK CONSTRAINT [FK_tlbGeoLocationShared_gisLocation_idfsLocation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisToDiagnosisGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisToDiagnosisGroup_trtDiagnosis__idfsDiagnosis] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtDiagnosisToDiagnosisGroup] CHECK CONSTRAINT [FK_trtDiagnosisToDiagnosisGroup_trtDiagnosis__idfsDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSectionForAction]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSectionForAction_trtBaseReference__idfsRuleAction_R_1404] FOREIGN KEY([idfsRuleAction])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffSectionForAction] CHECK CONSTRAINT [FK_ffSectionForAction_trtBaseReference__idfsRuleAction_R_1404]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstUserTicket]  WITH NOCHECK ADD  CONSTRAINT [FK_tstUserTicket_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstUserTicket] CHECK CONSTRAINT [FK_tstUserTicket_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtDiagnosis__idfsTentativeDiagnosis_R_1428] FOREIGN KEY([idfsTentativeDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtDiagnosis__idfsTentativeDiagnosis_R_1428]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSession_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbMonitoringSession] CHECK CONSTRAINT [FK_tlbMonitoringSession_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVectorSurveillanceSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVectorSurveillanceSession_tstSite_idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbVectorSurveillanceSession] CHECK CONSTRAINT [FK_tlbVectorSurveillanceSession_tstSite_idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBatchTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBatchTest_trtBaseReference__idfsBatchStatus_R_1544] FOREIGN KEY([idfsBatchStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbBatchTest] CHECK CONSTRAINT [FK_tlbBatchTest_trtBaseReference__idfsBatchStatus_R_1544]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRegionReady]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRegionReady_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[gisWKBRegionReady] CHECK CONSTRAINT [FK_gisWKBRegionReady_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditEvent_trtBaseReference__idfsDataAuditObjectType_R_1555] FOREIGN KEY([idfsDataAuditObjectType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tauDataAuditEvent] CHECK CONSTRAINT [FK_tauDataAuditEvent_trtBaseReference__idfsDataAuditObjectType_R_1555]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstUserTableOldPassword]  WITH NOCHECK ADD  CONSTRAINT [FK_tstUserTableOldPassword_tstUserTable__idfUserID_R_1730] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstUserTableOldPassword] CHECK CONSTRAINT [FK_tstUserTableOldPassword_tstUserTable__idfUserID_R_1730]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayout_locBaseReference__idflDescription_R_1717] FOREIGN KEY([idflDescription])
REFERENCES [dbo].[locBaseReference] ([idflBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasLayout] CHECK CONSTRAINT [FK_tasLayout_locBaseReference__idflDescription_R_1717]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGridDefinition]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGridDefinition_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbGridDefinition] CHECK CONSTRAINT [FK_tlbGridDefinition_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisToGroupForReportType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisToGroupForReportType_trtBaseReference__idfsCustomReportType_R_1871] FOREIGN KEY([idfsCustomReportType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtDiagnosisToGroupForReportType] CHECK CONSTRAINT [FK_trtDiagnosisToGroupForReportType_trtBaseReference__idfsCustomReportType_R_1871]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSectionDesignOption]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSectionDesignOption_trtBaseReference__idfsLanguage_R_1377] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[ffSectionDesignOption] CHECK CONSTRAINT [FK_ffSectionDesignOption_trtBaseReference__idfsLanguage_R_1377]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstVersionCompare]  WITH NOCHECK ADD  CONSTRAINT [FK_tstVersionCompare_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstVersionCompare] CHECK CONSTRAINT [FK_tstVersionCompare_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtDiagnosis__idfsFinalDiagnosis_R_1427] FOREIGN KEY([idfsFinalDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtDiagnosis__idfsFinalDiagnosis_R_1427]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionAction]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionAction_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbMonitoringSessionAction] CHECK CONSTRAINT [FK_tlbMonitoringSessionAction_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_tstSite__idfsSite_R_1588] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_tstSite__idfsSite_R_1588]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBatchTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBatchTest_tlbOffice__idfPerformedByOffice_R_1539] FOREIGN KEY([idfPerformedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbBatchTest] CHECK CONSTRAINT [FK_tlbBatchTest_tlbOffice__idfPerformedByOffice_R_1539]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRegion]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRegion_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisWKBRegion] CHECK CONSTRAINT [FK_gisWKBRegion_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBSettlementReady]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBSettlementReady_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[gisWKBSettlementReady] CHECK CONSTRAINT [FK_gisWKBSettlementReady_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditEvent_trtBaseReference__idfsDataAuditEventType_R_1556] FOREIGN KEY([idfsDataAuditEventType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tauDataAuditEvent] CHECK CONSTRAINT [FK_tauDataAuditEvent_trtBaseReference__idfsDataAuditEventType_R_1556]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstUserTicket]  WITH NOCHECK ADD  CONSTRAINT [FK_tstUserTicket_tstUserTable__idfUserID] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tstUserTicket] CHECK CONSTRAINT [FK_tstUserTicket_tstUserTable__idfUserID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayout_locBaseReference__idflLayout_R_1708] FOREIGN KEY([idflLayout])
REFERENCES [dbo].[locBaseReference] ([idflBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasLayout] CHECK CONSTRAINT [FK_tasLayout_locBaseReference__idflLayout_R_1708]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGridDefinition]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGridDefinition_tstSite_idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbGridDefinition] CHECK CONSTRAINT [FK_tlbGridDefinition_tstSite_idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisToGroupForReportType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisToGroupForReportType_trtReportDiagnosisGroup__idfsReportDiagnosisGroup] FOREIGN KEY([idfsReportDiagnosisGroup])
REFERENCES [dbo].[trtReportDiagnosisGroup] ([idfsReportDiagnosisGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtDiagnosisToGroupForReportType] CHECK CONSTRAINT [FK_trtDiagnosisToGroupForReportType_trtReportDiagnosisGroup__idfsReportDiagnosisGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSectionDesignOption]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSectionDesignOption_ffSectionForTemplate__idfsFormTemplate________________________________________________idfsSection_R_163] FOREIGN KEY([idfsFormTemplate], [idfsSection])
REFERENCES [dbo].[ffSectionForTemplate] ([idfsFormTemplate], [idfsSection])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[ffSectionDesignOption] CHECK CONSTRAINT [FK_ffSectionDesignOption_ffSectionForTemplate__idfsFormTemplate________________________________________________idfsSection_R_163]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[updRunningApps]  WITH NOCHECK ADD  CONSTRAINT [FK_updRunningApps_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[updRunningApps] CHECK CONSTRAINT [FK_updRunningApps_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsInitialCaseStatus_R_1439] FOREIGN KEY([idfsInitialCaseStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsInitialCaseStatus_R_1439]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionSummary]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionSummary_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbMonitoringSessionSummary] CHECK CONSTRAINT [FK_tlbMonitoringSessionSummary_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEvent_tstSite__idfsLoginSite] FOREIGN KEY([idfsLoginSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstEvent] CHECK CONSTRAINT [FK_tstEvent_tstSite__idfsLoginSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBatchTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBatchTest_tlbPerson__idfPerformedByPerson_R_1540] FOREIGN KEY([idfPerformedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbBatchTest] CHECK CONSTRAINT [FK_tlbBatchTest_tlbPerson__idfPerformedByPerson_R_1540]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditEvent_tauTable__idfMainObjectTable_R_1560] FOREIGN KEY([idfMainObjectTable])
REFERENCES [dbo].[tauTable] ([idfTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tauDataAuditEvent] CHECK CONSTRAINT [FK_tauDataAuditEvent_tauTable__idfMainObjectTable_R_1560]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayout_tasLayoutFolder__idflLayoutFolder_R_1698] FOREIGN KEY([idflLayoutFolder])
REFERENCES [dbo].[tasLayoutFolder] ([idflLayoutFolder])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasLayout] CHECK CONSTRAINT [FK_tasLayout_tasLayoutFolder__idflLayoutFolder_R_1698]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbGridDefinition]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbGridDefinition_tstUserTable_idfUserID] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbGridDefinition] CHECK CONSTRAINT [FK_tlbGridDefinition_tstUserTable_idfUserID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisToGroupForReportType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisToGroupForReportType_trtDiagnosis__idfsDiagnosis_R_1873] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtDiagnosisToGroupForReportType] CHECK CONSTRAINT [FK_trtDiagnosisToGroupForReportType_trtDiagnosis__idfsDiagnosis_R_1873]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSection]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSection_ffSection__idfsParentSection_R_1362] FOREIGN KEY([idfsParentSection])
REFERENCES [dbo].[ffSection] ([idfsSection])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[ffSection] CHECK CONSTRAINT [FK_ffSection_ffSection__idfsParentSection_R_1362]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[updUpdateBlock]  WITH NOCHECK ADD  CONSTRAINT [FK_updUpdateBlock_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[updUpdateBlock] CHECK CONSTRAINT [FK_updUpdateBlock_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsFinalCaseStatus_R_1676] FOREIGN KEY([idfsFinalCaseStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsFinalCaseStatus_R_1676]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionSummaryDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionSummaryDiagnosis_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbMonitoringSessionSummaryDiagnosis] CHECK CONSTRAINT [FK_tlbMonitoringSessionSummaryDiagnosis_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEvent_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstEvent] CHECK CONSTRAINT [FK_tstEvent_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBatchTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBatchTest_tlbOffice__idfValidatedByOffice_R_1542] FOREIGN KEY([idfValidatedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbBatchTest] CHECK CONSTRAINT [FK_tlbBatchTest_tlbOffice__idfValidatedByOffice_R_1542]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRiver]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRiver_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisWKBRiver] CHECK CONSTRAINT [FK_gisWKBRiver_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tauDataAuditEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tauDataAuditEvent_tstUserTable__idfUserID_R_1022] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tauDataAuditEvent] CHECK CONSTRAINT [FK_tauDataAuditEvent_tstUserTable__idfUserID_R_1022]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayout_tasglLayout__idfsGlobalLayout_R_1794] FOREIGN KEY([idfsGlobalLayout])
REFERENCES [dbo].[tasglLayout] ([idfsLayout])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasLayout] CHECK CONSTRAINT [FK_tasLayout_tasglLayout__idfsGlobalLayout_R_1794]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreakCaseMonitoring]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreakCaseMonitoring_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbOutbreakCaseMonitoring] CHECK CONSTRAINT [FK_tlbOutbreakCaseMonitoring_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHuman]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHuman_tlbMonitoringSession_MontoringSessionID] FOREIGN KEY([idfMonitoringSession])
REFERENCES [dbo].[tlbMonitoringSession] ([idfMonitoringSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbHuman] CHECK CONSTRAINT [FK_tlbHuman_tlbMonitoringSession_MontoringSessionID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtEventType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtEventType_trtBaseReference__idfsEventSubscription] FOREIGN KEY([idfsEventSubscription])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtEventType] CHECK CONSTRAINT [FK_trtEventType_trtBaseReference__idfsEventSubscription]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSection]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSection_trtBaseReference__idfsSection_R_1378] FOREIGN KEY([idfsSection])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[ffSection] CHECK CONSTRAINT [FK_ffSection_trtBaseReference__idfsSection_R_1378]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[SystemPreference]  WITH NOCHECK ADD  CONSTRAINT [FK_SystemPreference_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[SystemPreference] CHECK CONSTRAINT [FK_SystemPreference_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbOffice__idfSentByOffice_R_1418] FOREIGN KEY([idfSentByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbOffice__idfSentByOffice_R_1418]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionSummarySample]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionSummarySample_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbMonitoringSessionSummarySample] CHECK CONSTRAINT [FK_tlbMonitoringSessionSummarySample_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEventActive]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEventActive_tstSite__idfsLoginSite] FOREIGN KEY([idfsLoginSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstEventActive] CHECK CONSTRAINT [FK_tstEventActive_tstSite__idfsLoginSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBatchTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBatchTest_tlbPerson__idfValidatedByPerson_R_1543] FOREIGN KEY([idfValidatedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbBatchTest] CHECK CONSTRAINT [FK_tlbBatchTest_tlbPerson__idfValidatedByPerson_R_1543]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRiverPolygon]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRiverPolygon_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisWKBRiverPolygon] CHECK CONSTRAINT [FK_gisWKBRiverPolygon_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayout_tasQuery__idflQuery_R_1326] FOREIGN KEY([idflQuery])
REFERENCES [dbo].[tasQuery] ([idflQuery])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasLayout] CHECK CONSTRAINT [FK_tasLayout_tasQuery__idflQuery_R_1326]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_tlbVectorSurveillanceSession_idfVectorSurveillanceSession] FOREIGN KEY([idfVectorSurveillanceSession])
REFERENCES [dbo].[tlbVectorSurveillanceSession] ([idfVectorSurveillanceSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_tlbVectorSurveillanceSession_idfVectorSurveillanceSession]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbMonitoringSession_ParentMonitoringSession] FOREIGN KEY([idfParentMonitoringSession])
REFERENCES [dbo].[tlbMonitoringSession] ([idfMonitoringSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbMonitoringSession_ParentMonitoringSession]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtEventType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtEventType_trtBaseReference__idfsEventTypeID_R_663] FOREIGN KEY([idfsEventTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtEventType] CHECK CONSTRAINT [FK_trtEventType_trtBaseReference__idfsEventTypeID_R_663]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSection]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSection_trtBaseReference__idfsFormType_R_1659] FOREIGN KEY([idfsFormType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[ffSection] CHECK CONSTRAINT [FK_ffSection_trtBaseReference__idfsFormType_R_1659]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[UserPreference]  WITH NOCHECK ADD  CONSTRAINT [FK_UserPreference_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[UserPreference] CHECK CONSTRAINT [FK_UserPreference_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtEventToNotification]  WITH NOCHECK ADD  CONSTRAINT [FK_trtEventToNotification_idfsEventType] FOREIGN KEY([idfsEventType])
REFERENCES [dbo].[trtEventType] ([idfsEventTypeID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtEventToNotification] CHECK CONSTRAINT [FK_trtEventToNotification_idfsEventType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbOffice__idfReceivedByOffice_R_1419] FOREIGN KEY([idfReceivedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbOffice__idfReceivedByOffice_R_1419]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionToDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionToDiagnosis_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbMonitoringSessionToDiagnosis] CHECK CONSTRAINT [FK_tlbMonitoringSessionToDiagnosis_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEventActive]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEventActive_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tstEventActive] CHECK CONSTRAINT [FK_tstEventActive_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBatchTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBatchTest_tlbObservation__idfObservation_R_1541] FOREIGN KEY([idfObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbBatchTest] CHECK CONSTRAINT [FK_tlbBatchTest_tlbObservation__idfObservation_R_1541]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBSea]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBSea_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisWKBSea] CHECK CONSTRAINT [FK_gisWKBSea_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tdeDataExportDetail]  WITH NOCHECK ADD  CONSTRAINT [FK_tdeDataExportDetail_trtBaseReference__idfsDataExportDetailStatus_R_1582] FOREIGN KEY([idfsDataExportDetailStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tdeDataExportDetail] CHECK CONSTRAINT [FK_tdeDataExportDetail_trtBaseReference__idfsDataExportDetailStatus_R_1582]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayout_trtBaseReference__idfsDefaultGroupDate] FOREIGN KEY([idfsDefaultGroupDate])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasLayout] CHECK CONSTRAINT [FK_tasLayout_trtBaseReference__idfsDefaultGroupDate]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSession_gisLocation_idfsLocation] FOREIGN KEY([idfsLocation])
REFERENCES [dbo].[gisLocation] ([idfsLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbMonitoringSession] CHECK CONSTRAINT [FK_tlbMonitoringSession_gisLocation_idfsLocation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtFFObjectForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtFFObjectForCustomReport_trtBaseReference] FOREIGN KEY([idfsCustomReportType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtFFObjectForCustomReport] CHECK CONSTRAINT [FK_trtFFObjectForCustomReport_trtBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[ffSection]  WITH NOCHECK ADD  CONSTRAINT [FK_ffSection_trtMatrixType__idfsMatrixType] FOREIGN KEY([idfsMatrixType])
REFERENCES [dbo].[trtMatrixType] ([idfsMatrixType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[ffSection] CHECK CONSTRAINT [FK_ffSection_trtMatrixType__idfsMatrixType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[VetDiseaseReportRelationship]  WITH NOCHECK ADD  CONSTRAINT [FK_VetDiseaseReportRelationship_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[VetDiseaseReportRelationship] CHECK CONSTRAINT [FK_VetDiseaseReportRelationship_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtEventToNotification]  WITH NOCHECK ADD  CONSTRAINT [FK_trtEventToNotification_idfsNotificationType] FOREIGN KEY([idfsNotificationType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtEventToNotification] CHECK CONSTRAINT [FK_trtEventToNotification_idfsNotificationType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbOffice__idfInvestigatedByOffice_R_1420] FOREIGN KEY([idfInvestigatedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbOffice__idfInvestigatedByOffice_R_1420]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbObservation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbObservation_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbObservation] CHECK CONSTRAINT [FK_tlbObservation_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstGlobalSiteOptions]  WITH NOCHECK ADD  CONSTRAINT [FK_tstGlobalSiteOptions_tstSite__idfsSite_R_1753] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstGlobalSiteOptions] CHECK CONSTRAINT [FK_tstGlobalSiteOptions_tstSite__idfsSite_R_1753]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBSettlement]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBSettlement_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[gisWKBSettlement] CHECK CONSTRAINT [FK_gisWKBSettlement_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tdeDataExportDetail]  WITH NOCHECK ADD  CONSTRAINT [FK_tdeDataExportDetail_trtDiagnosis__idfsDiagnosis_R_1003] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tdeDataExportDetail] CHECK CONSTRAINT [FK_tdeDataExportDetail_trtDiagnosis__idfsDiagnosis_R_1003]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayout_tlbPerson__idfPerson] FOREIGN KEY([idfPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasLayout] CHECK CONSTRAINT [FK_tasLayout_tlbPerson__idfPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSession_idfsMonitoringSessionSpeciesType] FOREIGN KEY([idfsMonitoringSessionSpeciesType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbMonitoringSession] CHECK CONSTRAINT [FK_tlbMonitoringSession_idfsMonitoringSessionSpeciesType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtHACodeList]  WITH NOCHECK ADD  CONSTRAINT [FK_trtHACodeList_trtBaseReference__idfsCodeName_R_674] FOREIGN KEY([idfsCodeName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtHACodeList] CHECK CONSTRAINT [FK_trtHACodeList_trtBaseReference__idfsCodeName_R_674]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisCountry]  WITH NOCHECK ADD  CONSTRAINT [FK_gisCountry_gisBaseReference__idfsCountry_R_1634] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisBaseReference] ([idfsGISBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[gisCountry] CHECK CONSTRAINT [FK_gisCountry_gisBaseReference__idfsCountry_R_1634]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtEventToNotification]  WITH NOCHECK ADD  CONSTRAINT [FK_trtEventToNotification_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtEventToNotification] CHECK CONSTRAINT [FK_trtEventToNotification_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbObservation__idfEpiObservation_R_1415] FOREIGN KEY([idfEpiObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbObservation__idfEpiObservation_R_1415]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOffice]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOffice_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbOffice] CHECK CONSTRAINT [FK_tlbOffice_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstLocalConnectionContext]  WITH NOCHECK ADD  CONSTRAINT [FK_tstLocalConnectionContext_tstSite__idfsSite_R_1858] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tstLocalConnectionContext] CHECK CONSTRAINT [FK_tstLocalConnectionContext_tstSite__idfsSite_R_1858]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBatchTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBatchTest_tlbPerson__idfResultEnteredByPerson] FOREIGN KEY([idfResultEnteredByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbBatchTest] CHECK CONSTRAINT [FK_tlbBatchTest_tlbPerson__idfResultEnteredByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tdeDataExportDetail]  WITH NOCHECK ADD  CONSTRAINT [FK_tdeDataExportDetail_tdeDataExport__idfDataExport_R_1001] FOREIGN KEY([idfDataExport])
REFERENCES [dbo].[tdeDataExport] ([idfDataExport])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tdeDataExportDetail] CHECK CONSTRAINT [FK_tdeDataExportDetail_tdeDataExport__idfDataExport_R_1001]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutFolder]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutFolder_locBaseReference__idflLayoutFolder_R_1703] FOREIGN KEY([idflLayoutFolder])
REFERENCES [dbo].[locBaseReference] ([idflBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasLayoutFolder] CHECK CONSTRAINT [FK_tasLayoutFolder_locBaseReference__idflLayoutFolder_R_1703]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionToMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionToMaterial_tlbMaterial] FOREIGN KEY([idfMaterial])
REFERENCES [dbo].[tlbMaterial] ([idfMaterial])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbMonitoringSessionToMaterial] CHECK CONSTRAINT [FK_tlbMonitoringSessionToMaterial_tlbMaterial]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtLanguageToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtLanguageToCP_trtBaseReference__idfsLanguage_idfsBaseReference] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtLanguageToCP] CHECK CONSTRAINT [FK_trtLanguageToCP_trtBaseReference__idfsLanguage_idfsBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisOtherStringNameTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_gisOtherStringNameTranslation_gisBaseReference__idfsLanguage_R_1680] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[gisBaseReference] ([idfsGISBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisOtherStringNameTranslation] CHECK CONSTRAINT [FK_gisOtherStringNameTranslation_gisBaseReference__idfsLanguage_R_1680]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbObservation__idfCSObservation_R_1416] FOREIGN KEY([idfCSObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbObservation__idfCSObservation_R_1416]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreak]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreak_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbOutbreak] CHECK CONSTRAINT [FK_tlbOutbreak_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotification]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotification_tstSite__idfsSite_R_1035] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstNotification] CHECK CONSTRAINT [FK_tstNotification_tstSite__idfsSite_R_1035]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbBatchTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbBatchTest_tlbOffice__idfResultEnteredByOffice] FOREIGN KEY([idfResultEnteredByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbBatchTest] CHECK CONSTRAINT [FK_tlbBatchTest_tlbOffice__idfResultEnteredByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupRoleSystemFunctionAccess]  WITH NOCHECK ADD  CONSTRAINT [FK_lkupRoleSysFunctionAccess_trtBaseRef_AccessPermissionID] FOREIGN KEY([AccessPermissionID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[LkupRoleSystemFunctionAccess] CHECK CONSTRAINT [FK_lkupRoleSysFunctionAccess_trtBaseRef_AccessPermissionID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBSmallRiver]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBSmallRiver_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[gisWKBSmallRiver] CHECK CONSTRAINT [FK_gisWKBSmallRiver_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tdeDataExportDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tdeDataExportDiagnosis_trtDiagnosis__idfsDiagnosis_R_999] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tdeDataExportDiagnosis] CHECK CONSTRAINT [FK_tdeDataExportDiagnosis_trtDiagnosis__idfsDiagnosis_R_999]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutFolder]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutFolder_tasLayoutFolder__idflParentLayoutFolder_R_1715] FOREIGN KEY([idflParentLayoutFolder])
REFERENCES [dbo].[tasLayoutFolder] ([idflLayoutFolder])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasLayoutFolder] CHECK CONSTRAINT [FK_tasLayoutFolder_tasLayoutFolder__idflParentLayoutFolder_R_1715]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAnimal]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAnimal_trtBaseReference__idfsYNClinicalSigns_R_1409] FOREIGN KEY([idfsYNClinicalSigns])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbAnimal] CHECK CONSTRAINT [FK_tlbAnimal_trtBaseReference__idfsYNClinicalSigns_R_1409]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbMonitoringSessionToMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbMonitoringSessionToMaterial_trtBaseReference] FOREIGN KEY([idfsDisease])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbMonitoringSessionToMaterial] CHECK CONSTRAINT [FK_tlbMonitoringSessionToMaterial_trtBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtLanguageToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtLanguageToCP_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtLanguageToCP] CHECK CONSTRAINT [FK_trtLanguageToCP_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisOtherStringNameTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_gisOtherStringNameTranslation_gisOtherBaseReference__idfsGISOtherBaseReference_R_1679] FOREIGN KEY([idfsGISOtherBaseReference])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[gisOtherStringNameTranslation] CHECK CONSTRAINT [FK_gisOtherStringNameTranslation_gisOtherBaseReference__idfsGISOtherBaseReference_R_1679]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbPerson_idfPersonEnteredBy] FOREIGN KEY([idfPersonEnteredBy])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbPerson_idfPersonEnteredBy]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreakNote]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreakNote_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbOutbreakNote] CHECK CONSTRAINT [FK_tlbOutbreakNote_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotification]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotification_tstSite__idfsTargetSite_R_688] FOREIGN KEY([idfsTargetSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstNotification] CHECK CONSTRAINT [FK_tstNotification_tstSite__idfsTargetSite_R_688]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbCampaignToDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbCampaignToDiagnosis_tlbCampaign__idfCampaign_R_1738] FOREIGN KEY([idfCampaign])
REFERENCES [dbo].[tlbCampaign] ([idfCampaign])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbCampaignToDiagnosis] CHECK CONSTRAINT [FK_tlbCampaignToDiagnosis_tlbCampaign__idfCampaign_R_1738]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbReportForm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbReportForm_idfsReportFormType] FOREIGN KEY([idfsReportFormType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbReportForm] CHECK CONSTRAINT [FK_tlbReportForm_idfsReportFormType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanActualAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanActualAddlInfo_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[HumanActualAddlInfo] CHECK CONSTRAINT [FK_HumanActualAddlInfo_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tdeDataExportDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tdeDataExportDiagnosis_tdeDataExport__idfDataExport_R_1000] FOREIGN KEY([idfDataExport])
REFERENCES [dbo].[tdeDataExport] ([idfDataExport])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tdeDataExportDiagnosis] CHECK CONSTRAINT [FK_tdeDataExportDiagnosis_tdeDataExport__idfDataExport_R_1000]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AppSessionLog]  WITH NOCHECK ADD  CONSTRAINT [FK_SesionLog_BaseRef_AppModuleGroupID] FOREIGN KEY([AppModuleGroupID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[AppSessionLog] CHECK CONSTRAINT [FK_SesionLog_BaseRef_AppModuleGroupID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutFolder]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutFolder_tasglLayoutFolder__idfsGlobalLayoutFolder_R_1796] FOREIGN KEY([idfsGlobalLayoutFolder])
REFERENCES [dbo].[tasglLayoutFolder] ([idfsLayoutFolder])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasLayoutFolder] CHECK CONSTRAINT [FK_tasLayoutFolder_tasglLayoutFolder__idfsGlobalLayoutFolder_R_1796]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOffice]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOffice_tlbGeoLocationShared] FOREIGN KEY([idfLocation])
REFERENCES [dbo].[tlbGeoLocationShared] ([idfGeoLocationShared])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbOffice] CHECK CONSTRAINT [FK_tlbOffice_tlbGeoLocationShared]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtMatrixColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_trtMatrixColumn_trtBaseReference__idfsEditor] FOREIGN KEY([idfsEditor])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtMatrixColumn] CHECK CONSTRAINT [FK_trtMatrixColumn_trtBaseReference__idfsEditor]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisRayon]  WITH NOCHECK ADD  CONSTRAINT [FK_gisRayon_gisBaseReference__idfsRayon_R_1636] FOREIGN KEY([idfsRayon])
REFERENCES [dbo].[gisBaseReference] ([idfsGISBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[gisRayon] CHECK CONSTRAINT [FK_gisRayon_gisBaseReference__idfsRayon_R_1636]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbPerson__idfSentByPerson] FOREIGN KEY([idfSentByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbPerson__idfSentByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPensideTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPensideTest_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbPensideTest] CHECK CONSTRAINT [FK_tlbPensideTest_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotificationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotificationShared_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstNotificationShared] CHECK CONSTRAINT [FK_tstNotificationShared_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbCampaignToDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbCampaignToDiagnosis_trtDiagnosis__idfsDiagnosis_R_1739] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbCampaignToDiagnosis] CHECK CONSTRAINT [FK_tlbCampaignToDiagnosis_trtDiagnosis__idfsDiagnosis_R_1739]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanAddlInfo_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[HumanAddlInfo] CHECK CONSTRAINT [FK_HumanAddlInfo_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tdeDataExportProblem]  WITH NOCHECK ADD  CONSTRAINT [FK_tdeDataExportProblem_tdeDataExport__idfDataExport_R_1008] FOREIGN KEY([idfDataExport])
REFERENCES [dbo].[tdeDataExport] ([idfDataExport])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tdeDataExportProblem] CHECK CONSTRAINT [FK_tdeDataExportProblem_tdeDataExport__idfDataExport_R_1008]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AppSessionLog]  WITH NOCHECK ADD  CONSTRAINT [FK_SessionLog_BaseRef_ModuleConstantID] FOREIGN KEY([ModuleConstantID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[AppSessionLog] CHECK CONSTRAINT [FK_SessionLog_BaseRef_ModuleConstantID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutFolder]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutFolder_tasQuery__idflQuery_R_1697] FOREIGN KEY([idflQuery])
REFERENCES [dbo].[tasQuery] ([idflQuery])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasLayoutFolder] CHECK CONSTRAINT [FK_tasLayoutFolder_tasQuery__idflQuery_R_1697]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreak]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutBreak_idfsLocation_gisLocation] FOREIGN KEY([idfsLocation])
REFERENCES [dbo].[gisLocation] ([idfsLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbOutbreak] CHECK CONSTRAINT [FK_tlbOutBreak_idfsLocation_gisLocation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtMatrixColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_trtMatrixColumn_trtBaseReference__idfsMatrixColumn] FOREIGN KEY([idfsMatrixColumn])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtMatrixColumn] CHECK CONSTRAINT [FK_trtMatrixColumn_trtBaseReference__idfsMatrixColumn]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisRayon]  WITH NOCHECK ADD  CONSTRAINT [FK_gisRayon_gisCountry__idfsCountry_R_233] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[gisRayon] CHECK CONSTRAINT [FK_gisRayon_gisCountry__idfsCountry_R_233]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPerson]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPerson_trtBaseReference_PersonalIDTypeID] FOREIGN KEY([PersonalIDTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbPerson] CHECK CONSTRAINT [FK_tlbPerson_trtBaseReference_PersonalIDTypeID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbPerson__idfReceivedByPerson] FOREIGN KEY([idfReceivedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbPerson__idfReceivedByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPerson]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPerson_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbPerson] CHECK CONSTRAINT [FK_tlbPerson_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstNotificationShared]  WITH NOCHECK ADD  CONSTRAINT [FK_tstNotificationShared_tstSite__idfsTargetSite] FOREIGN KEY([idfsTargetSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstNotificationShared] CHECK CONSTRAINT [FK_tstNotificationShared_tstSite__idfsTargetSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbCampaignToDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbCampaignToDiagnosis_trtSpeciesType__idfsSpeciesType] FOREIGN KEY([idfsSpeciesType])
REFERENCES [dbo].[trtSpeciesType] ([idfsSpeciesType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbCampaignToDiagnosis] CHECK CONSTRAINT [FK_tlbCampaignToDiagnosis_trtSpeciesType__idfsSpeciesType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanDiseaseReportRelationship]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanDiseaseReportRelationship_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[HumanDiseaseReportRelationship] CHECK CONSTRAINT [FK_HumanDiseaseReportRelationship_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tdeDataExport]  WITH NOCHECK ADD  CONSTRAINT [FK_tdeDataExport_tstUserTable__idfUserID_R_1004] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tdeDataExport] CHECK CONSTRAINT [FK_tdeDataExport_tstUserTable__idfUserID_R_1004]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutSearchField_locBaseReference_idflLayoutSearchFieldName] FOREIGN KEY([idflLayoutSearchFieldName])
REFERENCES [dbo].[locBaseReference] ([idflBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasLayoutSearchField] CHECK CONSTRAINT [FK_tasLayoutSearchField_locBaseReference_idflLayoutSearchFieldName]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreakCaseMonitoring]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreakCaseMonitoring_tlbHumanCase__idfHumanCase] FOREIGN KEY([idfHumanCase])
REFERENCES [dbo].[tlbHumanCase] ([idfHumanCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbOutbreakCaseMonitoring] CHECK CONSTRAINT [FK_tlbOutbreakCaseMonitoring_tlbHumanCase__idfHumanCase]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtMatrixColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_trtMatrixColumn_trtBaseReference__idfsParameterType] FOREIGN KEY([idfsParameterType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtMatrixColumn] CHECK CONSTRAINT [FK_trtMatrixColumn_trtBaseReference__idfsParameterType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisRayon]  WITH NOCHECK ADD  CONSTRAINT [FK_gisRayon_gisRegion__idfsRegion_R_121] FOREIGN KEY([idfsRegion])
REFERENCES [dbo].[gisRegion] ([idfsRegion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisRayon] CHECK CONSTRAINT [FK_gisRayon_gisRegion__idfsRegion_R_121]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOffice]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOffice_trtBaseReference_OwnershipFormID] FOREIGN KEY([OwnershipFormID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbOffice] CHECK CONSTRAINT [FK_tlbOffice_trtBaseReference_OwnershipFormID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbPerson__idfInvestigatedByPerson] FOREIGN KEY([idfInvestigatedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbPerson__idfInvestigatedByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPostalCode]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPostalCode_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbPostalCode] CHECK CONSTRAINT [FK_tlbPostalCode_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstObjectAccess]  WITH NOCHECK ADD  CONSTRAINT [FK_tstObjectAccess_tstSite__idfsOnSite_R_951] FOREIGN KEY([idfsOnSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstObjectAccess] CHECK CONSTRAINT [FK_tstObjectAccess_tstSite__idfsOnSite_R_951]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbCampaignToDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbCampaignToDiagnosis_trtSampleType__idfsSampleType] FOREIGN KEY([idfsSampleType])
REFERENCES [dbo].[trtSampleType] ([idfsSampleType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbCampaignToDiagnosis] CHECK CONSTRAINT [FK_tlbCampaignToDiagnosis_trtSampleType__idfsSampleType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanDiseaseReportVaccination]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanDiseaseReportVaccination_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[HumanDiseaseReportVaccination] CHECK CONSTRAINT [FK_HumanDiseaseReportVaccination_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflAggrCaseFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflAggrCaseFiltered_tlbAggrCase__idfAggrCase] FOREIGN KEY([idfAggrCase])
REFERENCES [dbo].[tlbAggrCase] ([idfAggrCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tflAggrCaseFiltered] CHECK CONSTRAINT [FK_tflAggrCaseFiltered_tlbAggrCase__idfAggrCase]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AuditEventUserLog]  WITH NOCHECK ADD  CONSTRAINT [FK_AuditEventUserLog_BaseRef_AuditObjectTypeID] FOREIGN KEY([AuditObjectTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[AuditEventUserLog] CHECK CONSTRAINT [FK_AuditEventUserLog_BaseRef_AuditObjectTypeID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutSearchField_tasAggregateFunction__idfsAggregateFunction] FOREIGN KEY([idfsAggregateFunction])
REFERENCES [dbo].[tasAggregateFunction] ([idfsAggregateFunction])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasLayoutSearchField] CHECK CONSTRAINT [FK_tasLayoutSearchField_tasAggregateFunction__idfsAggregateFunction]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreakCaseMonitoring]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreakCaseMonitoring_tlbObservation__idfInvestigatedByOffice] FOREIGN KEY([idfInvestigatedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbOutbreakCaseMonitoring] CHECK CONSTRAINT [FK_tlbOutbreakCaseMonitoring_tlbObservation__idfInvestigatedByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtMatrixColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_trtMatrixColumn_trtMatrixType__idfsMatrixType] FOREIGN KEY([idfsMatrixType])
REFERENCES [dbo].[trtMatrixType] ([idfsMatrixType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtMatrixColumn] CHECK CONSTRAINT [FK_trtMatrixColumn_trtMatrixType__idfsMatrixType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisRegion]  WITH NOCHECK ADD  CONSTRAINT [FK_gisRegion_gisBaseReference__idfsRegion_R_1635] FOREIGN KEY([idfsRegion])
REFERENCES [dbo].[gisBaseReference] ([idfsGISBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisRegion] CHECK CONSTRAINT [FK_gisRegion_gisBaseReference__idfsRegion_R_1635]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOffice]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOffice_trtBaseReference_LegalFormID] FOREIGN KEY([LegalFormID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbOffice] CHECK CONSTRAINT [FK_tlbOffice_trtBaseReference_LegalFormID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsYNTestsConducted] FOREIGN KEY([idfsYNTestsConducted])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsYNTestsConducted]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbSpecies]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbSpecies_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbSpecies] CHECK CONSTRAINT [FK_tlbSpecies_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstRayonToReportSite]  WITH NOCHECK ADD  CONSTRAINT [FK_tstRayonToReportSite_tstSite__idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstRayonToReportSite] CHECK CONSTRAINT [FK_tstRayonToReportSite_tstSite__idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbCampaign]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbCampaign_trtBaseReference__idfsCampaignType_R_1736] FOREIGN KEY([idfsCampaignType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbCampaign] CHECK CONSTRAINT [FK_tlbCampaign_trtBaseReference__idfsCampaignType_R_1736]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstAggrSetting]  WITH NOCHECK ADD  CONSTRAINT [FK_tstAggrSetting_trtBaseReference__idfsAggrCaseType_R_941] FOREIGN KEY([idfsAggrCaseType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstAggrSetting] CHECK CONSTRAINT [FK_tstAggrSetting_trtBaseReference__idfsAggrCaseType_R_941]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflAggrCaseFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflAggrCaseFiltered_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tflAggrCaseFiltered] CHECK CONSTRAINT [FK_tflAggrCaseFiltered_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AuditEventUserLog]  WITH NOCHECK ADD  CONSTRAINT [FK_AuditEventUserLog_BaseRef_AuditEventTypeID] FOREIGN KEY([AuditEventTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[AuditEventUserLog] CHECK CONSTRAINT [FK_AuditEventUserLog_BaseRef_AuditEventTypeID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutSearchField_tasLayoutSearchField__idfDateLayoutSearchField] FOREIGN KEY([idfDateLayoutSearchField])
REFERENCES [dbo].[tasLayoutSearchField] ([idfLayoutSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasLayoutSearchField] CHECK CONSTRAINT [FK_tasLayoutSearchField_tasLayoutSearchField__idfDateLayoutSearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreakCaseMonitoring]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreakCaseMonitoring_tlbObservation__idfInvestigatedByPerson] FOREIGN KEY([idfInvestigatedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbOutbreakCaseMonitoring] CHECK CONSTRAINT [FK_tlbOutbreakCaseMonitoring_tlbObservation__idfInvestigatedByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtMatrixType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtMatrixType_trtBaseReference__idfsFormType] FOREIGN KEY([idfsFormType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtMatrixType] CHECK CONSTRAINT [FK_trtMatrixType_trtBaseReference__idfsFormType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AccessRuleActor]  WITH NOCHECK ADD  CONSTRAINT [FK_AccessRuleActor_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[AccessRuleActor] CHECK CONSTRAINT [FK_AccessRuleActor_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisRegion]  WITH NOCHECK ADD  CONSTRAINT [FK_gisRegion_gisCountry__idfsCountry_R_232] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisRegion] CHECK CONSTRAINT [FK_gisRegion_gisCountry__idfsCountry_R_232]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOffice]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOffice_trtBaseReference_MainFormOfActivityID] FOREIGN KEY([MainFormOfActivityID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbOffice] CHECK CONSTRAINT [FK_tlbOffice_trtBaseReference_MainFormOfActivityID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbOffice_idfSoughtCareFacility] FOREIGN KEY([idfSoughtCareFacility])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbOffice_idfSoughtCareFacility]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbSpeciesActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbSpeciesActual_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbSpeciesActual] CHECK CONSTRAINT [FK_tlbSpeciesActual_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSecurityAudit]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSecurityAudit_tstSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstSecurityAudit] CHECK CONSTRAINT [FK_tstSecurityAudit_tstSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupEIDSSAppObject]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupEIDSSAppObject_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[LkupEIDSSAppObject] CHECK CONSTRAINT [FK_LkupEIDSSAppObject_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstAggrSetting]  WITH NOCHECK ADD  CONSTRAINT [FK_tstAggrSetting_trtBaseReference__idfsStatisticAreaType_R_1612] FOREIGN KEY([idfsStatisticAreaType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstAggrSetting] CHECK CONSTRAINT [FK_tstAggrSetting_trtBaseReference__idfsStatisticAreaType_R_1612]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflBasicSyndromicSurveillanceAggregateHeaderFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflBasicSyndromicSurveillanceAggregateHeaderFiltered_tlbBasicSyndromicSurveillanceAggregateHeader__idfAggregateHeader] FOREIGN KEY([idfAggregateHeader])
REFERENCES [dbo].[tlbBasicSyndromicSurveillanceAggregateHeader] ([idfAggregateHeader])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tflBasicSyndromicSurveillanceAggregateHeaderFiltered] CHECK CONSTRAINT [FK_tflBasicSyndromicSurveillanceAggregateHeaderFiltered_tlbBasicSyndromicSurveillanceAggregateHeader__idfAggregateHeader]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutSearchField_tasLayoutSearchField__idfUnitLayoutSearchField] FOREIGN KEY([idfUnitLayoutSearchField])
REFERENCES [dbo].[tasLayoutSearchField] ([idfLayoutSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasLayoutSearchField] CHECK CONSTRAINT [FK_tasLayoutSearchField_tasLayoutSearchField__idfUnitLayoutSearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreakCaseMonitoring]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreakCaseMonitoring_tlbObservation__idfObservation] FOREIGN KEY([idfObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbOutbreakCaseMonitoring] CHECK CONSTRAINT [FK_tlbOutbreakCaseMonitoring_tlbObservation__idfObservation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtMatrixType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtMatrixType_trtBaseReference__idfsMatrixType] FOREIGN KEY([idfsMatrixType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtMatrixType] CHECK CONSTRAINT [FK_trtMatrixType_trtBaseReference__idfsMatrixType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisSettlement]  WITH NOCHECK ADD  CONSTRAINT [FK_gisSettlement_gisBaseReference__idfsSettlement_R_1637] FOREIGN KEY([idfsSettlement])
REFERENCES [dbo].[gisBaseReference] ([idfsGISBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisSettlement] CHECK CONSTRAINT [FK_gisSettlement_gisBaseReference__idfsSettlement_R_1637]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference_idfsNonNotifiableDiagnosis] FOREIGN KEY([idfsNonNotifiableDiagnosis])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference_idfsNonNotifiableDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbStatistic]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbStatistic_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbStatistic] CHECK CONSTRAINT [FK_tlbStatistic_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstSite]  WITH NOCHECK ADD  CONSTRAINT [FK_tstSite_tstSite__idfsParentSite] FOREIGN KEY([idfsParentSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstSite] CHECK CONSTRAINT [FK_tstSite_tstSite__idfsParentSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupEIDSSMenu]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupEIDSSMenu_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[LkupEIDSSMenu] CHECK CONSTRAINT [FK_LkupEIDSSMenu_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstAggrSetting]  WITH NOCHECK ADD  CONSTRAINT [FK_tstAggrSetting_trtBaseReference__idfsStatisticPeriodType_R_1613] FOREIGN KEY([idfsStatisticPeriodType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstAggrSetting] CHECK CONSTRAINT [FK_tstAggrSetting_trtBaseReference__idfsStatisticPeriodType_R_1613]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflBasicSyndromicSurveillanceAggregateHeaderFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflBasicSyndromicSurveillanceAggregateHeaderFiltered_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tflBasicSyndromicSurveillanceAggregateHeaderFiltered] CHECK CONSTRAINT [FK_tflBasicSyndromicSurveillanceAggregateHeaderFiltered_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutSearchField_tasLayout_idflLayout] FOREIGN KEY([idflLayout])
REFERENCES [dbo].[tasLayout] ([idflLayout])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasLayoutSearchField] CHECK CONSTRAINT [FK_tasLayoutSearchField_tasLayout_idflLayout]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreakCaseMonitoring]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreakCaseMonitoring_tlbVetCase__idfVetCase] FOREIGN KEY([idfVetCase])
REFERENCES [dbo].[tlbVetCase] ([idfVetCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbOutbreakCaseMonitoring] CHECK CONSTRAINT [FK_tlbOutbreakCaseMonitoring_tlbVetCase__idfVetCase]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtObjectTypeToObjectOperation]  WITH NOCHECK ADD  CONSTRAINT [FK_trtObjectTypeToObjectOperation_trtBaseReference__idfsObjectOperation_R_1620] FOREIGN KEY([idfsObjectOperation])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtObjectTypeToObjectOperation] CHECK CONSTRAINT [FK_trtObjectTypeToObjectOperation_trtBaseReference__idfsObjectOperation_R_1620]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisSettlement]  WITH NOCHECK ADD  CONSTRAINT [FK_gisSettlement_gisBaseReference__idfsSettlementType_R_1638] FOREIGN KEY([idfsSettlementType])
REFERENCES [dbo].[gisBaseReference] ([idfsGISBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisSettlement] CHECK CONSTRAINT [FK_gisSettlement_gisBaseReference__idfsSettlementType_R_1638]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference_idfsNotCollectedReason] FOREIGN KEY([idfsNotCollectedReason])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference_idfsNotCollectedReason]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbStreet]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbStreet_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbStreet] CHECK CONSTRAINT [FK_tlbStreet_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbChangeDiagnosisHistory]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbChangeDiagnosisHistory_tlbHumanCase__idfHumanCase_R_1797] FOREIGN KEY([idfHumanCase])
REFERENCES [dbo].[tlbHumanCase] ([idfHumanCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbChangeDiagnosisHistory] CHECK CONSTRAINT [FK_tlbChangeDiagnosisHistory_tlbHumanCase__idfHumanCase_R_1797]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LKUPNextKey]  WITH NOCHECK ADD  CONSTRAINT [FK_LKUPNextKey_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[LKUPNextKey] CHECK CONSTRAINT [FK_LKUPNextKey_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstAggrSetting]  WITH NOCHECK ADD  CONSTRAINT [FK_tstAggrSetting_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstAggrSetting] CHECK CONSTRAINT [FK_tstAggrSetting_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflBasicSyndromicSurveillanceFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflBasicSyndromicSurveillanceFiltered_tlbBasicSyndromicSurveillance__idfBasicSyndromicSurveillance_R_1831] FOREIGN KEY([idfBasicSyndromicSurveillance])
REFERENCES [dbo].[tlbBasicSyndromicSurveillance] ([idfBasicSyndromicSurveillance])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tflBasicSyndromicSurveillanceFiltered] CHECK CONSTRAINT [FK_tflBasicSyndromicSurveillanceFiltered_tlbBasicSyndromicSurveillance__idfBasicSyndromicSurveillance_R_1831]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[CampaignToSampleType]  WITH NOCHECK ADD  CONSTRAINT [FK_CampaignToSampleType_tlbCampaign] FOREIGN KEY([idfCampaign])
REFERENCES [dbo].[tlbCampaign] ([idfCampaign])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[CampaignToSampleType] CHECK CONSTRAINT [FK_CampaignToSampleType_tlbCampaign]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutSearchField_tasQuerySearchField__idfQuerySearchField] FOREIGN KEY([idfQuerySearchField])
REFERENCES [dbo].[tasQuerySearchField] ([idfQuerySearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasLayoutSearchField] CHECK CONSTRAINT [FK_tasLayoutSearchField_tasQuerySearchField__idfQuerySearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreakNote]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreakNote_tlbOutbreak__idfOutbreak] FOREIGN KEY([idfOutbreak])
REFERENCES [dbo].[tlbOutbreak] ([idfOutbreak])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbOutbreakNote] CHECK CONSTRAINT [FK_tlbOutbreakNote_tlbOutbreak__idfOutbreak]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtObjectTypeToObjectOperation]  WITH NOCHECK ADD  CONSTRAINT [FK_trtObjectTypeToObjectOperation_trtBaseReference__idfsObjectType_R_1619] FOREIGN KEY([idfsObjectType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtObjectTypeToObjectOperation] CHECK CONSTRAINT [FK_trtObjectTypeToObjectOperation_trtBaseReference__idfsObjectType_R_1619]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisSettlement]  WITH NOCHECK ADD  CONSTRAINT [FK_gisSettlement_gisCountry__idfsCountry_R_7] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[gisSettlement] CHECK CONSTRAINT [FK_gisSettlement_gisCountry__idfsCountry_R_7]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbOutbreak__idfOutbreak] FOREIGN KEY([idfOutbreak])
REFERENCES [dbo].[tlbOutbreak] ([idfOutbreak])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbOutbreak__idfOutbreak]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTestAmendmentHistory]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTestAmendmentHistory_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbTestAmendmentHistory] CHECK CONSTRAINT [FK_tlbTestAmendmentHistory_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbChangeDiagnosisHistory]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbChangeDiagnosisHistory_trtDiagnosis__idfsPreviousDiagnosis_R_1798] FOREIGN KEY([idfsPreviousDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbChangeDiagnosisHistory] CHECK CONSTRAINT [FK_tlbChangeDiagnosisHistory_trtDiagnosis__idfsPreviousDiagnosis_R_1798]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupRoleDashboardObject]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupRoleDashboardObject_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[LkupRoleDashboardObject] CHECK CONSTRAINT [FK_LkupRoleDashboardObject_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstAggrSetting]  WITH NOCHECK ADD  CONSTRAINT [FK_tstAggrSetting_tstCustomizationPackage__idfCustomizationPackage] FOREIGN KEY([idfCustomizationPackage])
REFERENCES [dbo].[tstCustomizationPackage] ([idfCustomizationPackage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstAggrSetting] CHECK CONSTRAINT [FK_tstAggrSetting_tstCustomizationPackage__idfCustomizationPackage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflBasicSyndromicSurveillanceFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflBasicSyndromicSurveillanceFiltered_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tflBasicSyndromicSurveillanceFiltered] CHECK CONSTRAINT [FK_tflBasicSyndromicSurveillanceFiltered_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[CampaignToSampleType]  WITH NOCHECK ADD  CONSTRAINT [FK_ampaignToSampleType_trtSpeciesType] FOREIGN KEY([idfsSpeciesType])
REFERENCES [dbo].[trtSpeciesType] ([idfsSpeciesType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[CampaignToSampleType] CHECK CONSTRAINT [FK_ampaignToSampleType_trtSpeciesType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutSearchField_trtBaseReference__idfsGroupDate] FOREIGN KEY([idfsGroupDate])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasLayoutSearchField] CHECK CONSTRAINT [FK_tasLayoutSearchField_trtBaseReference__idfsGroupDate]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreakNote]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreakNote_tlbPerson__idfPerson] FOREIGN KEY([idfPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbOutbreakNote] CHECK CONSTRAINT [FK_tlbOutbreakNote_tlbPerson__idfPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtObjectTypeToObjectType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtObjectTypeToObjectType_trtBaseReference__idfsParentObjectType_R_1621] FOREIGN KEY([idfsParentObjectType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtObjectTypeToObjectType] CHECK CONSTRAINT [FK_trtObjectTypeToObjectType_trtBaseReference__idfsParentObjectType_R_1621]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisSettlement]  WITH NOCHECK ADD  CONSTRAINT [FK_gisSettlement_gisRayon__idfsRayon_R_9] FOREIGN KEY([idfsRayon])
REFERENCES [dbo].[gisRayon] ([idfsRayon])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[gisSettlement] CHECK CONSTRAINT [FK_gisSettlement_gisRayon__idfsRayon_R_9]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsCaseProgressStatus] FOREIGN KEY([idfsCaseProgressStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_trtBaseReference__idfsCaseProgressStatus]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbChangeDiagnosisHistory]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbChangeDiagnosisHistory_trtDiagnosis__idfsCurrentDiagnosis_R_1799] FOREIGN KEY([idfsCurrentDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbChangeDiagnosisHistory] CHECK CONSTRAINT [FK_tlbChangeDiagnosisHistory_trtDiagnosis__idfsCurrentDiagnosis_R_1799]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupRoleMenuAccess]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupRoleMenuAccess_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[LkupRoleMenuAccess] CHECK CONSTRAINT [FK_LkupRoleMenuAccess_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflBatchTestFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflBatchTestFiltered_tlbBatchTest] FOREIGN KEY([idfBatchTest])
REFERENCES [dbo].[tlbBatchTest] ([idfBatchTest])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tflBatchTestFiltered] CHECK CONSTRAINT [FK_tflBatchTestFiltered_tlbBatchTest]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[CampaignToSampleType]  WITH NOCHECK ADD  CONSTRAINT [FK_ampaignToSampleType_trtSampleType] FOREIGN KEY([idfsSampleType])
REFERENCES [dbo].[trtSampleType] ([idfsSampleType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[CampaignToSampleType] CHECK CONSTRAINT [FK_ampaignToSampleType_trtSampleType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuery]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuery_locBaseReference__idflDescription_R_1718] FOREIGN KEY([idflDescription])
REFERENCES [dbo].[locBaseReference] ([idflBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasQuery] CHECK CONSTRAINT [FK_tasQuery_locBaseReference__idflDescription_R_1718]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPostalCode]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPostalCode_gisLocation_idfsLocation] FOREIGN KEY([idfsLocation])
REFERENCES [dbo].[gisLocation] ([idfsLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbPostalCode] CHECK CONSTRAINT [FK_tlbPostalCode_gisLocation_idfsLocation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtObjectTypeToObjectType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtObjectTypeToObjectType_trtBaseReference__idfsRelatedObjectType_R_1622] FOREIGN KEY([idfsRelatedObjectType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtObjectTypeToObjectType] CHECK CONSTRAINT [FK_trtObjectTypeToObjectType_trtBaseReference__idfsRelatedObjectType_R_1622]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisSettlement]  WITH NOCHECK ADD  CONSTRAINT [FK_gisSettlement_gisRegion__idfsRegion_R_8] FOREIGN KEY([idfsRegion])
REFERENCES [dbo].[gisRegion] ([idfsRegion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisSettlement] CHECK CONSTRAINT [FK_gisSettlement_gisRegion__idfsRegion_R_8]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTestValidation]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTestValidation_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbTestValidation] CHECK CONSTRAINT [FK_tlbTestValidation_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbChangeDiagnosisHistory]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbChangeDiagnosisHistory_trtBaseReference_idfsChangeDiagnosisReason] FOREIGN KEY([idfsChangeDiagnosisReason])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbChangeDiagnosisHistory] CHECK CONSTRAINT [FK_tlbChangeDiagnosisHistory_trtBaseReference_idfsChangeDiagnosisReason]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupRoleSystemFunctionAccess]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupRoleSystemFunctionAccess_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[LkupRoleSystemFunctionAccess] CHECK CONSTRAINT [FK_LkupRoleSystemFunctionAccess_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflBatchTestFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflBatchTestFiltered_tflSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tflBatchTestFiltered] CHECK CONSTRAINT [FK_tflBatchTestFiltered_tflSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuery]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuery_locBaseReference__idflQueryName_R_1709] FOREIGN KEY([idflQuery])
REFERENCES [dbo].[locBaseReference] ([idflBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasQuery] CHECK CONSTRAINT [FK_tasQuery_locBaseReference__idflQueryName_R_1709]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbReportForm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbReportForm_tlbOffice__idfEnteredByOffice] FOREIGN KEY([idfEnteredByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbReportForm] CHECK CONSTRAINT [FK_tlbReportForm_tlbOffice__idfEnteredByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtObjectTypeToObjectType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtObjectTypeToObjectType_trtBaseReference__idfsStatus_R_1623] FOREIGN KEY([idfsStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtObjectTypeToObjectType] CHECK CONSTRAINT [FK_trtObjectTypeToObjectType_trtBaseReference__idfsStatus_R_1623]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisStringNameTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_gisStringNameTranslation_gisBaseReference__idfsGISBaseReference_R_1639] FOREIGN KEY([idfsGISBaseReference])
REFERENCES [dbo].[gisBaseReference] ([idfsGISBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisStringNameTranslation] CHECK CONSTRAINT [FK_gisStringNameTranslation_gisBaseReference__idfsGISBaseReference_R_1639]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHumanCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHumanCase_tlbOffice__idfHospital] FOREIGN KEY([idfHospital])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbHumanCase] CHECK CONSTRAINT [FK_tlbHumanCase_tlbOffice__idfHospital]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTransferOUT]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTransferOUT_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbTransferOUT] CHECK CONSTRAINT [FK_tlbTransferOUT_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbChangeDiagnosisHistory]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbChangeDiagnosisHistory_tlbPerson__idfPerson] FOREIGN KEY([idfPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbChangeDiagnosisHistory] CHECK CONSTRAINT [FK_tlbChangeDiagnosisHistory_tlbPerson__idfPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[locBaseReference]  WITH NOCHECK ADD  CONSTRAINT [FK_locBaseReference_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[locBaseReference] CHECK CONSTRAINT [FK_locBaseReference_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflFarmFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflFarmFiltered_tlbFarm] FOREIGN KEY([idfFarm])
REFERENCES [dbo].[tlbFarm] ([idfFarm])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tflFarmFiltered] CHECK CONSTRAINT [FK_tflFarmFiltered_tlbFarm]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanActualAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanActualAddlInfo_BaseRef_AgeUOM] FOREIGN KEY([ReportedAgeUOMID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[HumanActualAddlInfo] CHECK CONSTRAINT [FK_HumanActualAddlInfo_BaseRef_AgeUOM]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuery]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuery_tasglQuery__idfsGlobalQuery_R_1795] FOREIGN KEY([idfsGlobalQuery])
REFERENCES [dbo].[tasglQuery] ([idfsQuery])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasQuery] CHECK CONSTRAINT [FK_tasQuery_tasglQuery__idfsGlobalQuery_R_1795]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbReportForm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbReportForm_tlbOffice__idfSentByOffice] FOREIGN KEY([idfSentByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbReportForm] CHECK CONSTRAINT [FK_tlbReportForm_tlbOffice__idfSentByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestForDisease]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestForDisease_trtBaseReference__idfsPensideTestName] FOREIGN KEY([idfsPensideTestName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtPensideTestForDisease] CHECK CONSTRAINT [FK_trtPensideTestForDisease_trtBaseReference__idfsPensideTestName]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisStringNameTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_gisStringNameTranslation_gisBaseReference__idfsLanguage_R_1640] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[gisBaseReference] ([idfsGISBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[gisStringNameTranslation] CHECK CONSTRAINT [FK_gisStringNameTranslation_gisBaseReference__idfsLanguage_R_1640]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreak]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreak_tlbGeoLocation__idfGeoLocation_R_1469] FOREIGN KEY([idfGeoLocation])
REFERENCES [dbo].[tlbGeoLocation] ([idfGeoLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbOutbreak] CHECK CONSTRAINT [FK_tlbOutbreak_tlbGeoLocation__idfGeoLocation_R_1469]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTransferOutMaterial]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTransferOutMaterial_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbTransferOutMaterial] CHECK CONSTRAINT [FK_tlbTransferOutMaterial_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbContactedCasePerson]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbContactedCasePerson_trtBaseReference__idfsPersonContactType_R_1462] FOREIGN KEY([idfsPersonContactType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbContactedCasePerson] CHECK CONSTRAINT [FK_tlbContactedCasePerson_trtBaseReference__idfsPersonContactType_R_1462]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[locStringNameTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_locStringNameTranslation_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[locStringNameTranslation] CHECK CONSTRAINT [FK_locStringNameTranslation_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflFarmFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflFarmFilteredGroup_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tflFarmFiltered] CHECK CONSTRAINT [FK_tflFarmFilteredGroup_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanActualAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanActualAddlInfo_BaseRef_IsEmployed] FOREIGN KEY([IsEmployedID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[HumanActualAddlInfo] CHECK CONSTRAINT [FK_HumanActualAddlInfo_BaseRef_IsEmployed]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasAggregateFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_tasAggregateFunction_trtBaseReference__idfsAggregateFunction] FOREIGN KEY([idfsAggregateFunction])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasAggregateFunction] CHECK CONSTRAINT [FK_tasAggregateFunction_trtBaseReference__idfsAggregateFunction]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbReportForm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbReportForm_tlbPerson__idfEnteredByPerson] FOREIGN KEY([idfEnteredByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbReportForm] CHECK CONSTRAINT [FK_tlbReportForm_tlbPerson__idfEnteredByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestForDisease]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestForDisease_trtDiagnosis__idfsDiagnosis] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtPensideTestForDisease] CHECK CONSTRAINT [FK_trtPensideTestForDisease_trtDiagnosis__idfsDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_gisBaseReference__idfsAdministrativeUnit_R_1666] FOREIGN KEY([idfsAdministrativeUnit])
REFERENCES [dbo].[gisBaseReference] ([idfsGISBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_gisBaseReference__idfsAdministrativeUnit_R_1666]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreak]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreak_trtBaseReference__idfsDiagnosisOrDiagnosisGroup] FOREIGN KEY([idfsDiagnosisOrDiagnosisGroup])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbOutbreak] CHECK CONSTRAINT [FK_tlbOutbreak_trtBaseReference__idfsDiagnosisOrDiagnosisGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVaccination]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVaccination_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbVaccination] CHECK CONSTRAINT [FK_tlbVaccination_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbContactedCasePerson]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbContactedCasePerson_tlbHuman__idfHuman_R_1460] FOREIGN KEY([idfHuman])
REFERENCES [dbo].[tlbHuman] ([idfHuman])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbContactedCasePerson] CHECK CONSTRAINT [FK_tlbContactedCasePerson_tlbHuman__idfHuman_R_1460]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[MonitoringSessionToSampleType]  WITH NOCHECK ADD  CONSTRAINT [FK_MonitoringSessionToSampleType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[MonitoringSessionToSampleType] CHECK CONSTRAINT [FK_MonitoringSessionToSampleType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflGeoLocationFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflGeoLocationFiltered_tlbGeoLocation__idfGeoLocation_R_1805] FOREIGN KEY([idfGeoLocation])
REFERENCES [dbo].[tlbGeoLocation] ([idfGeoLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tflGeoLocationFiltered] CHECK CONSTRAINT [FK_tflGeoLocationFiltered_tlbGeoLocation__idfGeoLocation_R_1805]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanActualAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanActulaAddlIfo_BaseRef_IsSchool] FOREIGN KEY([IsStudentID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[HumanActualAddlInfo] CHECK CONSTRAINT [FK_HumanActulaAddlIfo_BaseRef_IsSchool]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutSearchField_tasAggregateFunction__idfsAggregateFunction] FOREIGN KEY([idfsAggregateFunction])
REFERENCES [dbo].[tasAggregateFunction] ([idfsAggregateFunction])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasglLayoutSearchField] CHECK CONSTRAINT [FK_tasglLayoutSearchField_tasAggregateFunction__idfsAggregateFunction]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbReportForm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbReportForm_tlbPerson__idfSentByPerson] FOREIGN KEY([idfSentByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbReportForm] CHECK CONSTRAINT [FK_tlbReportForm_tlbPerson__idfSentByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestTypeForVectorType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestTypeForVectorType_trtBaseReference_idfsPensideTestName] FOREIGN KEY([idfsPensideTestName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtPensideTestTypeForVectorType] CHECK CONSTRAINT [FK_trtPensideTestTypeForVectorType_trtBaseReference_idfsPensideTestName]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_trtBaseReference__idfsAggrCaseType_R_1601] FOREIGN KEY([idfsAggrCaseType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_trtBaseReference__idfsAggrCaseType_R_1601]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreak]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreak_trtBaseReference__idfsOutbreakStatus_R_1262] FOREIGN KEY([idfsOutbreakStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbOutbreak] CHECK CONSTRAINT [FK_tlbOutbreak_trtBaseReference__idfsOutbreakStatus_R_1262]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbContactedCasePerson]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbContactedCasePerson_tlbHumanCase__idfHumanCase_R_1461] FOREIGN KEY([idfHumanCase])
REFERENCES [dbo].[tlbHumanCase] ([idfHumanCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbContactedCasePerson] CHECK CONSTRAINT [FK_tlbContactedCasePerson_tlbHumanCase__idfHumanCase_R_1461]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflGeoLocationFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflGeoLocationFiltered_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tflGeoLocationFiltered] CHECK CONSTRAINT [FK_tflGeoLocationFiltered_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutSearchField_tasglLayoutSearchField__idfDateLayoutSearchField] FOREIGN KEY([idfDateLayoutSearchField])
REFERENCES [dbo].[tasglLayoutSearchField] ([idfLayoutSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasglLayoutSearchField] CHECK CONSTRAINT [FK_tasglLayoutSearchField_tasglLayoutSearchField__idfDateLayoutSearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbReportForm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbReportForm_tstSite_idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbReportForm] CHECK CONSTRAINT [FK_tlbReportForm_tstSite_idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestTypeForVectorType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestTypeForVectorType_trtVectorType_idfsVectorType] FOREIGN KEY([idfsVectorType])
REFERENCES [dbo].[trtVectorType] ([idfsVectorType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtPensideTestTypeForVectorType] CHECK CONSTRAINT [FK_trtPensideTestTypeForVectorType_trtVectorType_idfsVectorType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbOffice__idfReceivedByOffice_R_1602] FOREIGN KEY([idfReceivedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbOffice__idfReceivedByOffice_R_1602]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVectorSurveillanceSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVectorSurveillanceSession_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbVectorSurveillanceSession] CHECK CONSTRAINT [FK_tlbVectorSurveillanceSession_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPerson]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPerson_tlbDepartment__idfDepartment] FOREIGN KEY([idfDepartment])
REFERENCES [dbo].[tlbDepartment] ([idfDepartment])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbPerson] CHECK CONSTRAINT [FK_tlbPerson_tlbDepartment__idfDepartment]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakCaseReport]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakCaseReport_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[OutbreakCaseReport] CHECK CONSTRAINT [FK_OutbreakCaseReport_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflHumanCaseFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflHumanCaseFiltered_tlbHumanCase__idfHumanCase] FOREIGN KEY([idfHumanCase])
REFERENCES [dbo].[tlbHumanCase] ([idfHumanCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tflHumanCaseFiltered] CHECK CONSTRAINT [FK_tflHumanCaseFiltered_tlbHumanCase__idfHumanCase]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanActualAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanActualAddlInfo_BaseRef_ContactPhoneNbrType] FOREIGN KEY([ContactPhoneNbrTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[HumanActualAddlInfo] CHECK CONSTRAINT [FK_HumanActualAddlInfo_BaseRef_ContactPhoneNbrType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutSearchField_tasglLayoutSearchField__idfUnitLayoutSearchField] FOREIGN KEY([idfUnitLayoutSearchField])
REFERENCES [dbo].[tasglLayoutSearchField] ([idfLayoutSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasglLayoutSearchField] CHECK CONSTRAINT [FK_tasglLayoutSearchField_tasglLayoutSearchField__idfUnitLayoutSearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbSpecies]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbSpecies_OutbreakCaseStatus] FOREIGN KEY([idfsOutbreakCaseStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbSpecies] CHECK CONSTRAINT [FK_tlbSpecies_OutbreakCaseStatus]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestTypeToTestResult]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestTypeToTestResult_trtBaseReference__idfsPensideTestName] FOREIGN KEY([idfsPensideTestName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtPensideTestTypeToTestResult] CHECK CONSTRAINT [FK_trtPensideTestTypeToTestResult_trtBaseReference__idfsPensideTestName]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbPerson__idfReceivedByPerson_R_1603] FOREIGN KEY([idfReceivedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbPerson__idfReceivedByPerson_R_1603]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_tlbGeoLocation_idfLocation] FOREIGN KEY([idfLocation])
REFERENCES [dbo].[tlbGeoLocation] ([idfGeoLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_tlbGeoLocation_idfLocation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVectorSurveillanceSessionSummary]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVectorSurveillanceSessionSummary_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbVectorSurveillanceSessionSummary] CHECK CONSTRAINT [FK_tlbVectorSurveillanceSessionSummary_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPerson]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPerson_tlbEmployee__idfPerson_R_1498] FOREIGN KEY([idfPerson])
REFERENCES [dbo].[tlbEmployee] ([idfEmployee])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbPerson] CHECK CONSTRAINT [FK_tlbPerson_tlbEmployee__idfPerson_R_1498]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflHumanCaseFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflHumanCaseFiltered_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tflHumanCaseFiltered] CHECK CONSTRAINT [FK_tflHumanCaseFiltered_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanActualAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanActualAddlInfo_BaseRef_ContactPhone2NbrType] FOREIGN KEY([ContactPhone2NbrTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[HumanActualAddlInfo] CHECK CONSTRAINT [FK_HumanActualAddlInfo_BaseRef_ContactPhone2NbrType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutSearchField_trtBaseReference_idfsLayoutSearchFieldName] FOREIGN KEY([idfsLayoutSearchFieldName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasglLayoutSearchField] CHECK CONSTRAINT [FK_tasglLayoutSearchField_trtBaseReference_idfsLayoutSearchFieldName]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbStreet]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbStreet_gisLocation_idfsLocation] FOREIGN KEY([idfsLocation])
REFERENCES [dbo].[gisLocation] ([idfsLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbStreet] CHECK CONSTRAINT [FK_tlbStreet_gisLocation_idfsLocation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtPensideTestTypeToTestResult]  WITH NOCHECK ADD  CONSTRAINT [FK_trtPensideTestTypeToTestResult_trtBaseReference__idfsPensideTestResult_R_1663] FOREIGN KEY([idfsPensideTestResult])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtPensideTestTypeToTestResult] CHECK CONSTRAINT [FK_trtPensideTestTypeToTestResult_trtBaseReference__idfsPensideTestResult_R_1663]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbOffice__idfSentByOffice_R_1604] FOREIGN KEY([idfSentByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbOffice__idfSentByOffice_R_1604]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_tlbObservation_idfObservation] FOREIGN KEY([idfObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_tlbObservation_idfObservation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVectorSurveillanceSessionSummaryDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVectorSurveillanceSessionSummaryDiagnosis_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbVectorSurveillanceSessionSummaryDiagnosis] CHECK CONSTRAINT [FK_tlbVectorSurveillanceSessionSummaryDiagnosis_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPerson]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPerson_tlbOffice__idfInstitution_R_1509] FOREIGN KEY([idfInstitution])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbPerson] CHECK CONSTRAINT [FK_tlbPerson_tlbOffice__idfInstitution_R_1509]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflHumanFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflHumanFiltered_tlbHuman] FOREIGN KEY([idfHuman])
REFERENCES [dbo].[tlbHuman] ([idfHuman])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tflHumanFiltered] CHECK CONSTRAINT [FK_tflHumanFiltered_tlbHuman]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutSearchField_tasLayout_idflLayout] FOREIGN KEY([idfsLayout])
REFERENCES [dbo].[tasglLayout] ([idfsLayout])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasglLayoutSearchField] CHECK CONSTRAINT [FK_tasglLayoutSearchField_tasLayout_idflLayout]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_tlbHumanCase] FOREIGN KEY([idfHumanCase])
REFERENCES [dbo].[tlbHumanCase] ([idfHumanCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_tlbHumanCase]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtProphilacticAction]  WITH NOCHECK ADD  CONSTRAINT [FK_trtProphilacticAction_trtBaseReference__idfsProphilacticAction_R_1109] FOREIGN KEY([idfsProphilacticAction])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtProphilacticAction] CHECK CONSTRAINT [FK_trtProphilacticAction_trtBaseReference__idfsProphilacticAction_R_1109]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbPerson__idfSentByPerson_R_1605] FOREIGN KEY([idfSentByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbPerson__idfSentByPerson_R_1605]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_tlbOffice_idfCollectedByOffice] FOREIGN KEY([idfCollectedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_tlbOffice_idfCollectedByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPerson]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPerson_trtBaseReference__idfsStaffPosition_R_1511] FOREIGN KEY([idfsStaffPosition])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbPerson] CHECK CONSTRAINT [FK_tlbPerson_trtBaseReference__idfsStaffPosition_R_1511]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasAggregateFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_tasAggregateFunction_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasAggregateFunction] CHECK CONSTRAINT [FK_tasAggregateFunction_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflHumanFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflHumanFiltered_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tflHumanFiltered] CHECK CONSTRAINT [FK_tflHumanFiltered_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutSearchField_tasglQuerySearchField__idfQuerySearchField] FOREIGN KEY([idfQuerySearchField])
REFERENCES [dbo].[tasglQuerySearchField] ([idfQuerySearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasglLayoutSearchField] CHECK CONSTRAINT [FK_tasglLayoutSearchField_tasglQuerySearchField__idfQuerySearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_tlbMonitoringSession] FOREIGN KEY([idfMonitoringSession])
REFERENCES [dbo].[tlbMonitoringSession] ([idfMonitoringSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_tlbMonitoringSession]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtReportDiagnosisGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_trtReportDiagnosisGroup_trtBaseReference__idfsReportDiagnosisGroup] FOREIGN KEY([idfsReportDiagnosisGroup])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtReportDiagnosisGroup] CHECK CONSTRAINT [FK_trtReportDiagnosisGroup_trtBaseReference__idfsReportDiagnosisGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbOffice__idfEnteredByOffice_R_1606] FOREIGN KEY([idfEnteredByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbOffice__idfEnteredByOffice_R_1606]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_tlbOffice_idfIdentifiedByOffice] FOREIGN KEY([idfIdentifiedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_tlbOffice_idfIdentifiedByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCaseDisplayDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCaseDisplayDiagnosis_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbVetCaseDisplayDiagnosis] CHECK CONSTRAINT [FK_tlbVetCaseDisplayDiagnosis_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbDepartment]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbDepartment_trtBaseReference__idfsDepartmentName] FOREIGN KEY([idfsDepartmentName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbDepartment] CHECK CONSTRAINT [FK_tlbDepartment_trtBaseReference__idfsDepartmentName]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasFieldSourceForTable]  WITH NOCHECK ADD  CONSTRAINT [FK_tasFieldSourceForTable_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasFieldSourceForTable] CHECK CONSTRAINT [FK_tasFieldSourceForTable_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflMonitoringSessionFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflMonitoringSessionFiltered_tlbMonitoringSession__idfMonitoringSession_R_1819] FOREIGN KEY([idfMonitoringSession])
REFERENCES [dbo].[tlbMonitoringSession] ([idfMonitoringSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tflMonitoringSessionFiltered] CHECK CONSTRAINT [FK_tflMonitoringSessionFiltered_tlbMonitoringSession__idfMonitoringSession_R_1819]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanAddlInfo_BaseRef_ReportedAgeUOM] FOREIGN KEY([ReportedAgeUOMID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[HumanAddlInfo] CHECK CONSTRAINT [FK_HumanAddlInfo_BaseRef_ReportedAgeUOM]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutSearchField_trtBaseReference__idfsGroupDate] FOREIGN KEY([idfsGroupDate])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasglLayoutSearchField] CHECK CONSTRAINT [FK_tasglLayoutSearchField_trtBaseReference__idfsGroupDate]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_tlbVector] FOREIGN KEY([idfVector])
REFERENCES [dbo].[tlbVector] ([idfVector])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_tlbVector]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtReportRows]  WITH NOCHECK ADD  CONSTRAINT [FK_trtReportRows_trtBaseReference__idfsCustomReportType_R_1867] FOREIGN KEY([idfsCustomReportType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtReportRows] CHECK CONSTRAINT [FK_trtReportRows_trtBaseReference__idfsCustomReportType_R_1867]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbPerson__idfEnteredByPerson_R_1607] FOREIGN KEY([idfEnteredByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbPerson__idfEnteredByPerson_R_1607]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_tlbPerson_idfCollectedByPerson] FOREIGN KEY([idfCollectedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_tlbPerson_idfCollectedByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCaseLog]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCaseLog_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbVetCaseLog] CHECK CONSTRAINT [FK_tlbVetCaseLog_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbDepartment]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbDepartment_tlbOffice__idfOrganization] FOREIGN KEY([idfOrganization])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbDepartment] CHECK CONSTRAINT [FK_tlbDepartment_tlbOffice__idfOrganization]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayout_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasglLayout] CHECK CONSTRAINT [FK_tasglLayout_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflMonitoringSessionFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflMonitoringSessionFiltered_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tflMonitoringSessionFiltered] CHECK CONSTRAINT [FK_tflMonitoringSessionFiltered_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanAddlInfo_BaseRef_IsEmployed] FOREIGN KEY([IsEmployedID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[HumanAddlInfo] CHECK CONSTRAINT [FK_HumanAddlInfo_BaseRef_IsEmployed]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglViewColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglViewColumn_tasAggregateFunction__idfsAggregateFunction] FOREIGN KEY([idfsAggregateFunction])
REFERENCES [dbo].[tasAggregateFunction] ([idfsAggregateFunction])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasglViewColumn] CHECK CONSTRAINT [FK_tasglViewColumn_tasAggregateFunction__idfsAggregateFunction]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbTesting]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbTesting_tlbVetCase] FOREIGN KEY([idfVetCase])
REFERENCES [dbo].[tlbVetCase] ([idfVetCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbTesting] CHECK CONSTRAINT [FK_tlbTesting_tlbVetCase]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtReportRows]  WITH NOCHECK ADD  CONSTRAINT [FK_trtReportRows_trtBaseReference__idfsDiagnosisOrReportDiagnosisGroup] FOREIGN KEY([idfsDiagnosisOrReportDiagnosisGroup])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtReportRows] CHECK CONSTRAINT [FK_trtReportRows_trtBaseReference__idfsDiagnosisOrReportDiagnosisGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbObservation__idfCaseObservation_R_1608] FOREIGN KEY([idfCaseObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbObservation__idfCaseObservation_R_1608]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_tlbPerson_idfIdentifiedByPerson] FOREIGN KEY([idfIdentifiedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_tlbPerson_idfIdentifiedByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtAttributeType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtAttributeType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtAttributeType] CHECK CONSTRAINT [FK_trtAttributeType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbEmployeeGroupMember]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbEmployeeGroupMember_tlbEmployeeGroup__idfEmployeeGroup_R_1465] FOREIGN KEY([idfEmployeeGroup])
REFERENCES [dbo].[tlbEmployeeGroup] ([idfEmployeeGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbEmployeeGroupMember] CHECK CONSTRAINT [FK_tlbEmployeeGroupMember_tlbEmployeeGroup__idfEmployeeGroup_R_1465]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutFolder]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutFolder_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasglLayoutFolder] CHECK CONSTRAINT [FK_tasglLayoutFolder_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflNotificationFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflNotificationFiltered_tstNotification__idfNotification_R_1825] FOREIGN KEY([idfNotification])
REFERENCES [dbo].[tstNotification] ([idfNotification])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tflNotificationFiltered] CHECK CONSTRAINT [FK_tflNotificationFiltered_tstNotification__idfNotification_R_1825]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanAddlIfo_BaseRef_IsSchool] FOREIGN KEY([IsStudentID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[HumanAddlInfo] CHECK CONSTRAINT [FK_HumanAddlIfo_BaseRef_IsSchool]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglViewColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglViewColumn_tasglLayoutSearchField__idfLayoutSearchField] FOREIGN KEY([idfLayoutSearchField])
REFERENCES [dbo].[tasglLayoutSearchField] ([idfLayoutSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasglViewColumn] CHECK CONSTRAINT [FK_tasglViewColumn_tasglLayoutSearchField__idfLayoutSearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_tlbOffice_idfReceivedByOffice] FOREIGN KEY([idfReceivedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_tlbOffice_idfReceivedByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtReportRows]  WITH NOCHECK ADD  CONSTRAINT [FK_trtReportRows_trtBaseReference__idfsICDReportAdditionalText] FOREIGN KEY([idfsICDReportAdditionalText])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtReportRows] CHECK CONSTRAINT [FK_trtReportRows_trtBaseReference__idfsICDReportAdditionalText]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbObservation__idfDiagnosticObservation_R_1609] FOREIGN KEY([idfDiagnosticObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbObservation__idfDiagnosticObservation_R_1609]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbEmployeeGroupMember]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbEmployeeGroupMember_tlbEmployee__idfEmployee_R_1668] FOREIGN KEY([idfEmployee])
REFERENCES [dbo].[tlbEmployee] ([idfEmployee])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbEmployeeGroupMember] CHECK CONSTRAINT [FK_tlbEmployeeGroupMember_tlbEmployee__idfEmployee_R_1668]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutSearchField_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasglLayoutSearchField] CHECK CONSTRAINT [FK_tasglLayoutSearchField_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflNotificationFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflNotificationFiltered_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tflNotificationFiltered] CHECK CONSTRAINT [FK_tflNotificationFiltered_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanAddlInfo_BaseRef_IsInSchool] FOREIGN KEY([IsStudentID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[HumanAddlInfo] CHECK CONSTRAINT [FK_HumanAddlInfo_BaseRef_IsInSchool]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglViewColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglViewColumn_tasglViewBand__idfViewBand] FOREIGN KEY([idfViewBand])
REFERENCES [dbo].[tasglViewBand] ([idfViewBand])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasglViewColumn] CHECK CONSTRAINT [FK_tasglViewColumn_tasglViewBand__idfViewBand]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVetCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVetCase_tlbPerson_idfReceivedByPerson] FOREIGN KEY([idfReceivedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbVetCase] CHECK CONSTRAINT [FK_tlbVetCase_tlbPerson_idfReceivedByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtReportRows]  WITH NOCHECK ADD  CONSTRAINT [FK_trtReportRows_trtBaseReference__idfsReportAdditionalText_R_1895] FOREIGN KEY([idfsReportAdditionalText])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtReportRows] CHECK CONSTRAINT [FK_trtReportRows_trtBaseReference__idfsReportAdditionalText_R_1895]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbObservation__idfProphylacticObservation_R_1610] FOREIGN KEY([idfProphylacticObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbObservation__idfProphylacticObservation_R_1610]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_tlbVector_idfHostVector] FOREIGN KEY([idfHostVector])
REFERENCES [dbo].[tlbVector] ([idfVector])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_tlbVector_idfHostVector]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtBaseReferenceAttribute]  WITH NOCHECK ADD  CONSTRAINT [FK_trtBaseReferenceAttribute_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtBaseReferenceAttribute] CHECK CONSTRAINT [FK_trtBaseReferenceAttribute_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbEmployeeGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbEmployeeGroup_tlbEmployee__idfEmployeeGroup_R_832] FOREIGN KEY([idfEmployeeGroup])
REFERENCES [dbo].[tlbEmployee] ([idfEmployee])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbEmployeeGroup] CHECK CONSTRAINT [FK_tlbEmployeeGroup_tlbEmployee__idfEmployeeGroup_R_832]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglLayoutToMapImage]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglLayoutToMapImage_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasglLayoutToMapImage] CHECK CONSTRAINT [FK_tasglLayoutToMapImage_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflObservationFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflObservationFiltered_tlbObservation__idfObservation_R_1809] FOREIGN KEY([idfObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tflObservationFiltered] CHECK CONSTRAINT [FK_tflObservationFiltered_tlbObservation__idfObservation_R_1809]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglViewColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglViewColumn_tasglViewColumn__idfDenominatorViewColumn] FOREIGN KEY([idfDenominatorViewColumn])
REFERENCES [dbo].[tasglViewColumn] ([idfViewColumn])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasglViewColumn] CHECK CONSTRAINT [FK_tasglViewColumn_tasglViewColumn__idfDenominatorViewColumn]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtResource]  WITH NOCHECK ADD  CONSTRAINT [FK_trtResource_idfsResourceType] FOREIGN KEY([idfsResourceType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtResource] CHECK CONSTRAINT [FK_trtResource_idfsResourceType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSampleType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSampleType_trtBaseReference__idfsSampleType_R_1866] FOREIGN KEY([idfsSampleType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtSampleType] CHECK CONSTRAINT [FK_trtSampleType_trtBaseReference__idfsSampleType_R_1866]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbObservation__idfSanitaryObservation_R_1611] FOREIGN KEY([idfSanitaryObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbObservation__idfSanitaryObservation_R_1611]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_trtBaseReference_idfsSurrounding] FOREIGN KEY([idfsSurrounding])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_trtBaseReference_idfsSurrounding]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtBaseReferenceAttributeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtBaseReferenceAttributeToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtBaseReferenceAttributeToCP] CHECK CONSTRAINT [FK_trtBaseReferenceAttributeToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbEmployeeGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbEmployeeGroup_trtBaseReference__idfsEmployeeGroupName_R_1014] FOREIGN KEY([idfsEmployeeGroupName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbEmployeeGroup] CHECK CONSTRAINT [FK_tlbEmployeeGroup_trtBaseReference__idfsEmployeeGroupName_R_1014]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglMapImage]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglMapImage_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasglMapImage] CHECK CONSTRAINT [FK_tasglMapImage_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflObservationFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflObservationFiltered_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tflObservationFiltered] CHECK CONSTRAINT [FK_tflObservationFiltered_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglViewColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglViewColumn_tasglViewColumn__idfSourceViewColumn] FOREIGN KEY([idfSourceViewColumn])
REFERENCES [dbo].[tasglViewColumn] ([idfViewColumn])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasglViewColumn] CHECK CONSTRAINT [FK_tasglViewColumn_tasglViewColumn__idfSourceViewColumn]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtResource]  WITH NOCHECK ADD  CONSTRAINT [FK_trtResource_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtResource] CHECK CONSTRAINT [FK_trtResource_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSanitaryAction]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSanitaryAction_trtBaseReference__idfsSanitaryAction_R_1110] FOREIGN KEY([idfsSanitaryAction])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtSanitaryAction] CHECK CONSTRAINT [FK_trtSanitaryAction_trtBaseReference__idfsSanitaryAction_R_1110]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbAggrMatrixVersionHeader__idfVersion_R_1684] FOREIGN KEY([idfVersion])
REFERENCES [dbo].[tlbAggrMatrixVersionHeader] ([idfVersion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbAggrMatrixVersionHeader__idfVersion_R_1684]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_trtBaseReference_idfsCollectionMethod] FOREIGN KEY([idfsCollectionMethod])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_trtBaseReference_idfsCollectionMethod]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtBaseReferenceToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtBaseReferenceToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtBaseReferenceToCP] CHECK CONSTRAINT [FK_trtBaseReferenceToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuery]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuery_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasglQuery] CHECK CONSTRAINT [FK_tasglQuery_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflOutbreakFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflOutbreakFiltered_tlbOutbreak__idfOutbreak_R_1811] FOREIGN KEY([idfOutbreak])
REFERENCES [dbo].[tlbOutbreak] ([idfOutbreak])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tflOutbreakFiltered] CHECK CONSTRAINT [FK_tflOutbreakFiltered_tlbOutbreak__idfOutbreak_R_1811]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanAddlInfo_BaseRef_ContactPhoneNbrType] FOREIGN KEY([ContactPhoneNbrTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[HumanAddlInfo] CHECK CONSTRAINT [FK_HumanAddlInfo_BaseRef_ContactPhoneNbrType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglViewColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglViewColumn_tasglView__idfView_idfsLanguage] FOREIGN KEY([idfView], [idfsLanguage])
REFERENCES [dbo].[tasglView] ([idfView], [idfsLanguage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasglViewColumn] CHECK CONSTRAINT [FK_tasglViewColumn_tasglView__idfView_idfsLanguage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtResourceSet]  WITH NOCHECK ADD  CONSTRAINT [FK_trtResourceSet_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtResourceSet] CHECK CONSTRAINT [FK_trtResourceSet_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesContentInCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesContentInCustomReport_trtBaseReference_idfsCustomReportType] FOREIGN KEY([idfsCustomReportType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtSpeciesContentInCustomReport] CHECK CONSTRAINT [FK_trtSpeciesContentInCustomReport_trtBaseReference_idfsCustomReportType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbAggrMatrixVersionHeader__idfDiagnosticVersion_R_1686] FOREIGN KEY([idfDiagnosticVersion])
REFERENCES [dbo].[tlbAggrMatrixVersionHeader] ([idfVersion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbAggrMatrixVersionHeader__idfDiagnosticVersion_R_1686]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_trtBaseReference_idfsBasisOfREcord] FOREIGN KEY([idfsBasisOfRecord])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_trtBaseReference_idfsBasisOfREcord]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtBssAggregateColumns]  WITH NOCHECK ADD  CONSTRAINT [FK_trtBssAggregateColumns_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtBssAggregateColumns] CHECK CONSTRAINT [FK_trtBssAggregateColumns_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstObjectAccess]  WITH NOCHECK ADD  CONSTRAINT [FK_tstObjectAccess_tlbEmployee__idfActor_R_1618] FOREIGN KEY([idfActor])
REFERENCES [dbo].[tlbEmployee] ([idfEmployee])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstObjectAccess] CHECK CONSTRAINT [FK_tstObjectAccess_tlbEmployee__idfActor_R_1618]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQueryConditionGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQueryConditionGroup_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasglQueryConditionGroup] CHECK CONSTRAINT [FK_tasglQueryConditionGroup_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflOutbreakFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflOutbreakFiltered_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tflOutbreakFiltered] CHECK CONSTRAINT [FK_tflOutbreakFiltered_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanAddlInfo]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanAddlInfo_BaseRef_ContactPhoneNbr2Type] FOREIGN KEY([ContactPhone2NbrTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[HumanAddlInfo] CHECK CONSTRAINT [FK_HumanAddlInfo_BaseRef_ContactPhoneNbr2Type]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasViewColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tasViewColumn_tasAggregateFunction__idfsAggregateFunction] FOREIGN KEY([idfsAggregateFunction])
REFERENCES [dbo].[tasAggregateFunction] ([idfsAggregateFunction])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasViewColumn] CHECK CONSTRAINT [FK_tasViewColumn_tasAggregateFunction__idfsAggregateFunction]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtResourceSetToResource]  WITH NOCHECK ADD  CONSTRAINT [FK_trtResourceSetToResource_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtResourceSetToResource] CHECK CONSTRAINT [FK_trtResourceSetToResource_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesContentInCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesContentInCustomReport_trtBaseReference_idfsReportAdditionalText] FOREIGN KEY([idfsReportAdditionalText])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtSpeciesContentInCustomReport] CHECK CONSTRAINT [FK_trtSpeciesContentInCustomReport_trtBaseReference_idfsReportAdditionalText]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbAggrMatrixVersionHeader__idfProphylacticVersion_R_1687] FOREIGN KEY([idfProphylacticVersion])
REFERENCES [dbo].[tlbAggrMatrixVersionHeader] ([idfVersion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbAggrMatrixVersionHeader__idfProphylacticVersion_R_1687]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_trtVectorType_idfsVectorType] FOREIGN KEY([idfsVectorType])
REFERENCES [dbo].[trtVectorType] ([idfsVectorType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_trtVectorType_idfsVectorType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtCaseClassification]  WITH NOCHECK ADD  CONSTRAINT [FK_trtCaseClassification_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtCaseClassification] CHECK CONSTRAINT [FK_trtCaseClassification_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstObjectAccess]  WITH NOCHECK ADD  CONSTRAINT [FK_tstObjectAccess_trtBaseReference__idfsObjectOperation_R_1586] FOREIGN KEY([idfsObjectOperation])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstObjectAccess] CHECK CONSTRAINT [FK_tstObjectAccess_trtBaseReference__idfsObjectOperation_R_1586]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBRuralDistrict]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBRuralDistrict_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisWKBRuralDistrict] CHECK CONSTRAINT [FK_gisWKBRuralDistrict_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuerySearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuerySearchField_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasglQuerySearchField] CHECK CONSTRAINT [FK_tasglQuerySearchField_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflSiteGroupRelation]  WITH NOCHECK ADD  CONSTRAINT [FK_tflSiteGroupRelation_tflSiteGroup_idfsSenderSiteGroup] FOREIGN KEY([idfSenderSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tflSiteGroupRelation] CHECK CONSTRAINT [FK_tflSiteGroupRelation_tflSiteGroup_idfsSenderSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasViewColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tasViewColumn_tasLayoutSearchField__idfLayoutSearchField] FOREIGN KEY([idfLayoutSearchField])
REFERENCES [dbo].[tasLayoutSearchField] ([idfLayoutSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasViewColumn] CHECK CONSTRAINT [FK_tasViewColumn_tasLayoutSearchField__idfLayoutSearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtResourceTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_trtResourceTranslation_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtResourceTranslation] CHECK CONSTRAINT [FK_trtResourceTranslation_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesContentInCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesContentInCustomReport_trtBaseReference_idfsSpeciesOrSpeciesGroup] FOREIGN KEY([idfsSpeciesOrSpeciesGroup])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtSpeciesContentInCustomReport] CHECK CONSTRAINT [FK_trtSpeciesContentInCustomReport_trtBaseReference_idfsSpeciesOrSpeciesGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AccessRulePermission]  WITH NOCHECK ADD  CONSTRAINT [FK_AccessRulePermission_trtBaseReference_AccessPermissionID] FOREIGN KEY([AccessPermissionID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[AccessRulePermission] CHECK CONSTRAINT [FK_AccessRulePermission_trtBaseReference_AccessPermissionID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrCase]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrCase_tlbAggrMatrixVersionHeader__idfSanitaryVersion_R_1688] FOREIGN KEY([idfSanitaryVersion])
REFERENCES [dbo].[tlbAggrMatrixVersionHeader] ([idfVersion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbAggrCase] CHECK CONSTRAINT [FK_tlbAggrCase_tlbAggrMatrixVersionHeader__idfSanitaryVersion_R_1688]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_trtVectorSubType_idfsVectorSubType] FOREIGN KEY([idfsVectorSubType])
REFERENCES [dbo].[trtVectorSubType] ([idfsVectorSubType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_trtVectorSubType_idfsVectorSubType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtCollectionMethodForVectorType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtCollectionMethodForVectorType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtCollectionMethodForVectorType] CHECK CONSTRAINT [FK_trtCollectionMethodForVectorType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstObjectAccess]  WITH NOCHECK ADD  CONSTRAINT [FK_tstObjectAccess_trtBaseReference__idfsObjectType_R_1580] FOREIGN KEY([idfsObjectType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstObjectAccess] CHECK CONSTRAINT [FK_tstObjectAccess_trtBaseReference__idfsObjectType_R_1580]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuerySearchFieldCondition]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuerySearchFieldCondition_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasglQuerySearchFieldCondition] CHECK CONSTRAINT [FK_tasglQuerySearchFieldCondition_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflSiteGroupRelation]  WITH NOCHECK ADD  CONSTRAINT [FK_tflSiteGroupRelation_tflSiteGroup_idfReceiverSite] FOREIGN KEY([idfReceiverSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tflSiteGroupRelation] CHECK CONSTRAINT [FK_tflSiteGroupRelation_tflSiteGroup_idfReceiverSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasViewColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tasViewColumn_tasViewBand__idfViewBand] FOREIGN KEY([idfViewBand])
REFERENCES [dbo].[tasViewBand] ([idfViewBand])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasViewColumn] CHECK CONSTRAINT [FK_tasViewColumn_tasViewBand__idfViewBand]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstAggrSetting]  WITH NOCHECK ADD  CONSTRAINT [FK_tstAggrSetting_tstSite_idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstAggrSetting] CHECK CONSTRAINT [FK_tstAggrSetting_tstSite_idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesGroup_trtBaseReference_idfsSpeciesGroup] FOREIGN KEY([idfsSpeciesGroup])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtSpeciesGroup] CHECK CONSTRAINT [FK_trtSpeciesGroup_trtBaseReference_idfsSpeciesGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AccessRulePermission]  WITH NOCHECK ADD  CONSTRAINT [FK_AccessRulePermission_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[AccessRulePermission] CHECK CONSTRAINT [FK_AccessRulePermission_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_trtBaseReference_idfsSex] FOREIGN KEY([idfsSex])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_trtBaseReference_idfsSex]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtCollectionMethodForVectorTypeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtCollectionMethodForVectorTypeToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtCollectionMethodForVectorTypeToCP] CHECK CONSTRAINT [FK_trtCollectionMethodForVectorTypeToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglQuerySearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglQuerySearchObject_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasglQuerySearchObject] CHECK CONSTRAINT [FK_tasglQuerySearchObject_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflSiteToSiteGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tflSiteToSiteGroup_tflSiteGroup_idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tflSiteToSiteGroup] CHECK CONSTRAINT [FK_tflSiteToSiteGroup_tflSiteGroup_idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasViewColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tasViewColumn_tasViewColumn__idfDenominatorViewColumn] FOREIGN KEY([idfDenominatorViewColumn])
REFERENCES [dbo].[tasViewColumn] ([idfViewColumn])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasViewColumn] CHECK CONSTRAINT [FK_tasViewColumn_tasViewColumn__idfDenominatorViewColumn]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakSpeciesParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakSpeciesParameter_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[OutbreakSpeciesParameter] CHECK CONSTRAINT [FK_OutbreakSpeciesParameter_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstCustomizationPackage]  WITH NOCHECK ADD  CONSTRAINT [FK_tstCustomizationPackage_gisLocation_idfsCountry] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tstCustomizationPackage] CHECK CONSTRAINT [FK_tstCustomizationPackage_gisLocation_idfsCountry]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesToGroupForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesToGroupForCustomReport_trtBaseReference_idfsCustomReportType] FOREIGN KEY([idfsCustomReportType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtSpeciesToGroupForCustomReport] CHECK CONSTRAINT [FK_trtSpeciesToGroupForCustomReport_trtBaseReference_idfsCustomReportType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbStatistic]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbStatistic_gisBaseReference__idfsArea_R_1641] FOREIGN KEY([idfsArea])
REFERENCES [dbo].[gisBaseReference] ([idfsGISBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbStatistic] CHECK CONSTRAINT [FK_tlbStatistic_gisBaseReference__idfsArea_R_1641]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_trtBaseReference_idfsIdentificationMethod] FOREIGN KEY([idfsIdentificationMethod])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_trtBaseReference_idfsIdentificationMethod]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDerivativeForSampleType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDerivativeForSampleType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtDerivativeForSampleType] CHECK CONSTRAINT [FK_trtDerivativeForSampleType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbEmployee]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbEmployee_trtBaseReference__idfsEmployeeType_R_1250] FOREIGN KEY([idfsEmployeeType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbEmployee] CHECK CONSTRAINT [FK_tlbEmployee_trtBaseReference__idfsEmployeeType_R_1250]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglView]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglView_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasglView] CHECK CONSTRAINT [FK_tasglView_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[HumanDiseaseReportRelationship]  WITH NOCHECK ADD  CONSTRAINT [FK_HumanDiseaseReportReln_BaseRef_RelTypeID] FOREIGN KEY([RelationshipTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[HumanDiseaseReportRelationship] CHECK CONSTRAINT [FK_HumanDiseaseReportReln_BaseRef_RelTypeID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasViewColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tasViewColumn_tasViewColumn__idfSourceViewColumn] FOREIGN KEY([idfSourceViewColumn])
REFERENCES [dbo].[tasViewColumn] ([idfViewColumn])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasViewColumn] CHECK CONSTRAINT [FK_tasViewColumn_tasViewColumn__idfSourceViewColumn]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstEvent]  WITH NOCHECK ADD  CONSTRAINT [FK_tstEvent_gisLocation_idfsLocation] FOREIGN KEY([idfsLocation])
REFERENCES [dbo].[gisLocation] ([idfsLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tstEvent] CHECK CONSTRAINT [FK_tstEvent_gisLocation_idfsLocation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesToGroupForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesToGroupForCustomReport_trtSpeciesGroup_idfsSpeciesGroup] FOREIGN KEY([idfsSpeciesGroup])
REFERENCES [dbo].[trtSpeciesGroup] ([idfsSpeciesGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtSpeciesToGroupForCustomReport] CHECK CONSTRAINT [FK_trtSpeciesToGroupForCustomReport_trtSpeciesGroup_idfsSpeciesGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbStatistic]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbStatistic_trtStatisticDataType__idfsStatisticDataType_R_921] FOREIGN KEY([idfsStatisticDataType])
REFERENCES [dbo].[trtStatisticDataType] ([idfsStatisticDataType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbStatistic] CHECK CONSTRAINT [FK_tlbStatistic_trtStatisticDataType__idfsStatisticDataType_R_921]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_trtBaseReference_idfsDayPeriod] FOREIGN KEY([idfsDayPeriod])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_trtBaseReference_idfsDayPeriod]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDerivativeForSampleTypeToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDerivativeForSampleTypeToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtDerivativeForSampleTypeToCP] CHECK CONSTRAINT [FK_trtDerivativeForSampleTypeToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglViewBand]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglViewBand_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasglViewBand] CHECK CONSTRAINT [FK_tasglViewBand_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflTransferOutFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflTransferOutFiltered_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tflTransferOutFiltered] CHECK CONSTRAINT [FK_tflTransferOutFiltered_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasViewColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tasViewColumn_tasView__idfView_idfsLanguage] FOREIGN KEY([idfView], [idfsLanguage])
REFERENCES [dbo].[tasView] ([idfView], [idfsLanguage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasViewColumn] CHECK CONSTRAINT [FK_tasViewColumn_tasView__idfView_idfsLanguage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstGeoLocationFormat]  WITH NOCHECK ADD  CONSTRAINT [FK_tstGeoLocationFormat_gisLocation_idfsLocation] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisLocation] ([idfsLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tstGeoLocationFormat] CHECK CONSTRAINT [FK_tstGeoLocationFormat_gisLocation_idfsLocation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesToGroupForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesToGroupForCustomReport_trtSpeciesType_idfsSpeciesType] FOREIGN KEY([idfsSpeciesType])
REFERENCES [dbo].[trtSpeciesType] ([idfsSpeciesType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtSpeciesToGroupForCustomReport] CHECK CONSTRAINT [FK_trtSpeciesToGroupForCustomReport_trtSpeciesType_idfsSpeciesType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbStatistic]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbStatistic_trtBaseReference__idfsMainBaseReference_R_923] FOREIGN KEY([idfsMainBaseReference])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbStatistic] CHECK CONSTRAINT [FK_tlbStatistic_trtBaseReference__idfsMainBaseReference_R_923]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVector]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVector_trtBaseReference__idfsEctoparasitesCollected] FOREIGN KEY([idfsEctoparasitesCollected])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbVector] CHECK CONSTRAINT [FK_tlbVector_trtBaseReference__idfsEctoparasitesCollected]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosis_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtDiagnosis] CHECK CONSTRAINT [FK_trtDiagnosis_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_tlbFarmActual] FOREIGN KEY([idfFarmActual])
REFERENCES [dbo].[tlbFarmActual] ([idfFarmActual])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_tlbFarmActual]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasglViewColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_tasglViewColumn_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasglViewColumn] CHECK CONSTRAINT [FK_tasglViewColumn_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflTransferOutFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflTransferOutFiltered_tlbTransferOUT__idfTransferOut_R_1817] FOREIGN KEY([idfTransferOut])
REFERENCES [dbo].[tlbTransferOUT] ([idfTransferOut])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tflTransferOutFiltered] CHECK CONSTRAINT [FK_tflTransferOutFiltered_tlbTransferOUT__idfTransferOut_R_1817]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasFieldSourceForTable]  WITH NOCHECK ADD  CONSTRAINT [FK_tasFieldSourceForTable_tasSearchField__idfsSearchField] FOREIGN KEY([idfsSearchField])
REFERENCES [dbo].[tasSearchField] ([idfsSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasFieldSourceForTable] CHECK CONSTRAINT [FK_tasFieldSourceForTable_tasSearchField__idfsSearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstUserTable]  WITH NOCHECK ADD  CONSTRAINT [FK_tstUserTable_tlbPerson_idfPerson] FOREIGN KEY([idfPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstUserTable] CHECK CONSTRAINT [FK_tstUserTable_tlbPerson_idfPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesType_trtBaseReference__idfsSpeciesType_R_1650] FOREIGN KEY([idfsSpeciesType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtSpeciesType] CHECK CONSTRAINT [FK_trtSpeciesType_trtBaseReference__idfsSpeciesType_R_1650]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbStatistic]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbStatistic_trtBaseReference__idfsStatisticAreaType_R_1273] FOREIGN KEY([idfsStatisticAreaType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbStatistic] CHECK CONSTRAINT [FK_tlbStatistic_trtBaseReference__idfsStatisticAreaType_R_1273]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVectorSurveillanceSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVectorSurveillanceSession_tlbGeoLocation_idfLocation] FOREIGN KEY([idfLocation])
REFERENCES [dbo].[tlbGeoLocation] ([idfGeoLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbVectorSurveillanceSession] CHECK CONSTRAINT [FK_tlbVectorSurveillanceSession_tlbGeoLocation_idfLocation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroup_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtDiagnosisAgeGroup] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroup_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_tlbMonitoringSession] FOREIGN KEY([idfMonitoringSession])
REFERENCES [dbo].[tlbMonitoringSession] ([idfMonitoringSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_tlbMonitoringSession]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayout]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayout_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasLayout] CHECK CONSTRAINT [FK_tasLayout_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflVectorSurveillanceSessionFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflVectorSurveillanceSessionFiltered_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tflVectorSurveillanceSessionFiltered] CHECK CONSTRAINT [FK_tflVectorSurveillanceSessionFiltered_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasFieldSourceForTable]  WITH NOCHECK ADD  CONSTRAINT [FK_tasFieldSourceForTable_tasSearchTable__idfUnionSearchTable] FOREIGN KEY([idfUnionSearchTable])
REFERENCES [dbo].[tasSearchTable] ([idfSearchTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasFieldSourceForTable] CHECK CONSTRAINT [FK_tasFieldSourceForTable_tasSearchTable__idfUnionSearchTable]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstUserTable]  WITH NOCHECK ADD  CONSTRAINT [FK_tstUserTable_tstSite_idfsSite] FOREIGN KEY([idfsSite])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tstUserTable] CHECK CONSTRAINT [FK_tstUserTable_tstSite_idfsSite]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesTypeToAnimalAge]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesTypeToAnimalAge_trtBaseReference__idfsAnimalAge_R_1599] FOREIGN KEY([idfsAnimalAge])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtSpeciesTypeToAnimalAge] CHECK CONSTRAINT [FK_trtSpeciesTypeToAnimalAge_trtBaseReference__idfsAnimalAge_R_1599]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbStatistic]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbStatistic_trtBaseReference__idfsStatisticPeriodType_R_1272] FOREIGN KEY([idfsStatisticPeriodType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbStatistic] CHECK CONSTRAINT [FK_tlbStatistic_trtBaseReference__idfsStatisticPeriodType_R_1272]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVectorSurveillanceSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVectorSurveillanceSession_tlbOutbreak_idfOutbreak] FOREIGN KEY([idfOutbreak])
REFERENCES [dbo].[tlbOutbreak] ([idfOutbreak])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbVectorSurveillanceSession] CHECK CONSTRAINT [FK_tlbVectorSurveillanceSession_tlbOutbreak_idfOutbreak]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToDiagnosis]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroupToDiagnosis_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToDiagnosis] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroupToDiagnosis_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsAvianFarmType_R_1295] FOREIGN KEY([idfsAvianFarmType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsAvianFarmType_R_1295]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutFolder]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutFolder_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasLayoutFolder] CHECK CONSTRAINT [FK_tasLayoutFolder_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflVectorSurveillanceSessionFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflVectorSurveillanceSessionFiltered_tlbVectorSurveillanceSession__idfVectorSurveillanceSession] FOREIGN KEY([idfVectorSurveillanceSession])
REFERENCES [dbo].[tlbVectorSurveillanceSession] ([idfVectorSurveillanceSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tflVectorSurveillanceSessionFiltered] CHECK CONSTRAINT [FK_tflVectorSurveillanceSessionFiltered_tlbVectorSurveillanceSession__idfVectorSurveillanceSession]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasFieldSourceForTable]  WITH NOCHECK ADD  CONSTRAINT [FK_tasFieldSourceForTable_tasSearchTable__idfSearchTable] FOREIGN KEY([idfSearchTable])
REFERENCES [dbo].[tasSearchTable] ([idfSearchTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasFieldSourceForTable] CHECK CONSTRAINT [FK_tasFieldSourceForTable_tasSearchTable__idfSearchTable]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSpeciesTypeToAnimalAge]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSpeciesTypeToAnimalAge_trtSpeciesType__idfsSpeciesType_R_1598] FOREIGN KEY([idfsSpeciesType])
REFERENCES [dbo].[trtSpeciesType] ([idfsSpeciesType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtSpeciesTypeToAnimalAge] CHECK CONSTRAINT [FK_trtSpeciesTypeToAnimalAge_trtSpeciesType__idfsSpeciesType_R_1598]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbStatistic]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbStatistic_trtBaseReference_idfsStatisticalAgeGroup] FOREIGN KEY([idfsStatisticalAgeGroup])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbStatistic] CHECK CONSTRAINT [FK_tlbStatistic_trtBaseReference_idfsStatisticalAgeGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVectorSurveillanceSession]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVectorSurveillanceSession_trtBaseReference_VectorSurveillanceStatus] FOREIGN KEY([idfsVectorSurveillanceStatus])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbVectorSurveillanceSession] CHECK CONSTRAINT [FK_tlbVectorSurveillanceSession_trtBaseReference_VectorSurveillanceStatus]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToDiagnosisToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroupToDiagnosisToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToDiagnosisToCP] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroupToDiagnosisToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsAvianProductionType_R_1294] FOREIGN KEY([idfsAvianProductionType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsAvianProductionType_R_1294]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutSearchField_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasLayoutSearchField] CHECK CONSTRAINT [FK_tasLayoutSearchField_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflVetCaseFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflVetCaseFiltered_tflSiteGroup__idfSiteGroup] FOREIGN KEY([idfSiteGroup])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tflVetCaseFiltered] CHECK CONSTRAINT [FK_tflVetCaseFiltered_tflSiteGroup__idfSiteGroup]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasViewBand]  WITH NOCHECK ADD  CONSTRAINT [FK_tasViewBand_tasLayoutSearchField__idfLayoutSearchField] FOREIGN KEY([idfLayoutSearchField])
REFERENCES [dbo].[tasLayoutSearchField] ([idfLayoutSearchField])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasViewBand] CHECK CONSTRAINT [FK_tasViewBand_tasLayoutSearchField__idfLayoutSearchField]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtStatisticDataType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtStatisticDataType_trtBaseReference__idfsStatisticAreaType_R_1591] FOREIGN KEY([idfsStatisticAreaType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtStatisticDataType] CHECK CONSTRAINT [FK_trtStatisticDataType_trtBaseReference__idfsStatisticAreaType_R_1591]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtGISBaseReferenceAttribute]  WITH NOCHECK ADD  CONSTRAINT [FK_trtGISBaseReferenceAttribute_gisBaseReference__idfsGISBaseReference] FOREIGN KEY([idfsGISBaseReference])
REFERENCES [dbo].[gisBaseReference] ([idfsGISBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtGISBaseReferenceAttribute] CHECK CONSTRAINT [FK_trtGISBaseReferenceAttribute_gisBaseReference__idfsGISBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroupToStatisticalAgeGroup_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroup] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroupToStatisticalAgeGroup_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsFarmCategory_R_1288] FOREIGN KEY([idfsFarmCategory])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsFarmCategory_R_1288]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutToMapImage]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutToMapImage_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasLayoutToMapImage] CHECK CONSTRAINT [FK_tasLayoutToMapImage_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tflVetCaseFiltered]  WITH NOCHECK ADD  CONSTRAINT [FK_tflVetCaseFiltered_tlbVetCase__idfVetCase] FOREIGN KEY([idfVetCase])
REFERENCES [dbo].[tlbVetCase] ([idfVetCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tflVetCaseFiltered] CHECK CONSTRAINT [FK_tflVetCaseFiltered_tlbVetCase__idfVetCase]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupEIDSSAppObject]  WITH NOCHECK ADD  CONSTRAINT [FK_AppObj_ObjType] FOREIGN KEY([AppObjectTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[LkupEIDSSAppObject] CHECK CONSTRAINT [FK_AppObj_ObjType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasViewBand]  WITH NOCHECK ADD  CONSTRAINT [FK_tasViewBand_tasViewBand__idfParentViewBand] FOREIGN KEY([idfParentViewBand])
REFERENCES [dbo].[tasViewBand] ([idfViewBand])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasViewBand] CHECK CONSTRAINT [FK_tasViewBand_tasViewBand__idfParentViewBand]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[UserPreference]  WITH NOCHECK ADD  CONSTRAINT [FK_UserPreference_tstUserTable_UserID] FOREIGN KEY([idfUserID])
REFERENCES [dbo].[tstUserTable] ([idfUserID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[UserPreference] CHECK CONSTRAINT [FK_UserPreference_tstUserTable_UserID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtStatisticDataType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtStatisticDataType_trtBaseReference__idfsStatisticDataType_R_496] FOREIGN KEY([idfsStatisticDataType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtStatisticDataType] CHECK CONSTRAINT [FK_trtStatisticDataType_trtBaseReference__idfsStatisticDataType_R_496]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtGISBaseReferenceAttribute]  WITH NOCHECK ADD  CONSTRAINT [FK_trtGISBaseReferenceAttribute_trtAttributeType__idfAttributeType] FOREIGN KEY([idfAttributeType])
REFERENCES [dbo].[trtAttributeType] ([idfAttributeType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtGISBaseReferenceAttribute] CHECK CONSTRAINT [FK_trtGISBaseReferenceAttribute_trtAttributeType__idfAttributeType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVectorSurveillanceSessionSummary]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVectorSurveillanceSessionSummary_tlbGeoLocation__idfGeoLocation] FOREIGN KEY([idfGeoLocation])
REFERENCES [dbo].[tlbGeoLocation] ([idfGeoLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbVectorSurveillanceSessionSummary] CHECK CONSTRAINT [FK_tlbVectorSurveillanceSessionSummary_tlbGeoLocation__idfGeoLocation]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroupToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisAgeGroupToStatisticalAgeGroupToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtDiagnosisAgeGroupToStatisticalAgeGroupToCP] CHECK CONSTRAINT [FK_trtDiagnosisAgeGroupToStatisticalAgeGroupToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsOwnershipStructure_R_1287] FOREIGN KEY([idfsOwnershipStructure])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsOwnershipStructure_R_1287]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisMainCityForRayon]  WITH NOCHECK ADD  CONSTRAINT [FK_gisMainCityForRayon_gisRayon__idfsRayon] FOREIGN KEY([idfsRayon])
REFERENCES [dbo].[gisRayon] ([idfsRayon])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[gisMainCityForRayon] CHECK CONSTRAINT [FK_gisMainCityForRayon_gisRayon__idfsRayon]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasMainTableForObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasMainTableForObject_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasMainTableForObject] CHECK CONSTRAINT [FK_tasMainTableForObject_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtResourceSetToResource]  WITH NOCHECK ADD  CONSTRAINT [FK_trtResourceSetToResource_trtResource] FOREIGN KEY([idfsResource])
REFERENCES [dbo].[trtResource] ([idfsResource])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtResourceSetToResource] CHECK CONSTRAINT [FK_trtResourceSetToResource_trtResource]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupEIDSSAppObject]  WITH NOCHECK ADD  CONSTRAINT [FK_AppObj_EIDSSMenu_MenuID] FOREIGN KEY([RelatedEIDSSMenuID])
REFERENCES [dbo].[LkupEIDSSMenu] ([EIDSSMenuID])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[LkupEIDSSAppObject] CHECK CONSTRAINT [FK_AppObj_EIDSSMenu_MenuID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasViewBand]  WITH NOCHECK ADD  CONSTRAINT [FK_tasViewBand_tasView__idfView_idfsLanguage] FOREIGN KEY([idfView], [idfsLanguage])
REFERENCES [dbo].[tasView] ([idfView], [idfsLanguage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasViewBand] CHECK CONSTRAINT [FK_tasViewBand_tasView__idfView_idfsLanguage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[VetDiseaseReportRelationship]  WITH NOCHECK ADD  CONSTRAINT [FK_VetDiseaseReportReln_tlbVetCase_RelateToVetDiseaseReportID] FOREIGN KEY([RelatedToVetDiseaseReportID])
REFERENCES [dbo].[tlbVetCase] ([idfVetCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[VetDiseaseReportRelationship] CHECK CONSTRAINT [FK_VetDiseaseReportReln_tlbVetCase_RelateToVetDiseaseReportID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtStatisticDataType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtStatisticDataType_trtBaseReference__idfsStatisticPeriodType_R_1592] FOREIGN KEY([idfsStatisticPeriodType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtStatisticDataType] CHECK CONSTRAINT [FK_trtStatisticDataType_trtBaseReference__idfsStatisticPeriodType_R_1592]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtGISObjectForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtGISObjectForCustomReport_gisBaseReference__idfsGISBaseReference] FOREIGN KEY([idfsGISBaseReference])
REFERENCES [dbo].[gisBaseReference] ([idfsGISBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtGISObjectForCustomReport] CHECK CONSTRAINT [FK_trtGISObjectForCustomReport_gisBaseReference__idfsGISBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVectorSurveillanceSessionSummary]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVectorSurveillanceSessionSummary_tlbVectorSurveillanceSession__idfVectorSurveillanceSession] FOREIGN KEY([idfVectorSurveillanceSession])
REFERENCES [dbo].[tlbVectorSurveillanceSession] ([idfVectorSurveillanceSession])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbVectorSurveillanceSessionSummary] CHECK CONSTRAINT [FK_tlbVectorSurveillanceSessionSummary_tlbVectorSurveillanceSession__idfVectorSurveillanceSession]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisToDiagnosisGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisToDiagnosisGroup_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtDiagnosisToDiagnosisGroup] CHECK CONSTRAINT [FK_trtDiagnosisToDiagnosisGroup_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupSystemFunctionToOperation]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupSystemFunctionToOperation_BaseReference_idfsModule] FOREIGN KEY([idfsModuleName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[LkupSystemFunctionToOperation] CHECK CONSTRAINT [FK_LkupSystemFunctionToOperation_BaseReference_idfsModule]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsMovementPattern_R_1300] FOREIGN KEY([idfsMovementPattern])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsMovementPattern_R_1300]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisMainCityForRayon]  WITH NOCHECK ADD  CONSTRAINT [FK_gisMainCityForRayon_gisSettlement__idfsMainSettlement] FOREIGN KEY([idfsMainSettlement])
REFERENCES [dbo].[gisSettlement] ([idfsSettlement])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisMainCityForRayon] CHECK CONSTRAINT [FK_gisMainCityForRayon_gisSettlement__idfsMainSettlement]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasMapImage]  WITH NOCHECK ADD  CONSTRAINT [FK_tasMapImage_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasMapImage] CHECK CONSTRAINT [FK_tasMapImage_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrDiagnosticActionMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrDiagnosticActionMTX_trtSpeciesType__idfsSpeciesType_R_1116] FOREIGN KEY([idfsSpeciesType])
REFERENCES [dbo].[trtSpeciesType] ([idfsSpeciesType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbAggrDiagnosticActionMTX] CHECK CONSTRAINT [FK_tlbAggrDiagnosticActionMTX_trtSpeciesType__idfsSpeciesType_R_1116]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupEIDSSAppObject]  WITH NOCHECK ADD  CONSTRAINT [FK_AppObj_PageToolTip] FOREIGN KEY([PageTitleID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[LkupEIDSSAppObject] CHECK CONSTRAINT [FK_AppObj_PageToolTip]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutToMapImage]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutToMapImage_tasLayout__idflLayout] FOREIGN KEY([idflLayout])
REFERENCES [dbo].[tasLayout] ([idflLayout])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasLayoutToMapImage] CHECK CONSTRAINT [FK_tasLayoutToMapImage_tasLayout__idflLayout]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[VetDiseaseReportRelationship]  WITH NOCHECK ADD  CONSTRAINT [FK_VetDiseaseReportReln_tlbVetCase_VetDiseaseReportID] FOREIGN KEY([VetDiseaseReportID])
REFERENCES [dbo].[tlbVetCase] ([idfVetCase])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[VetDiseaseReportRelationship] CHECK CONSTRAINT [FK_VetDiseaseReportReln_tlbVetCase_VetDiseaseReportID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtStatisticDataType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtStatisticDataType_trtReferenceType__idfsReferenceType_R_933] FOREIGN KEY([idfsReferenceType])
REFERENCES [dbo].[trtReferenceType] ([idfsReferenceType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtStatisticDataType] CHECK CONSTRAINT [FK_trtStatisticDataType_trtReferenceType__idfsReferenceType_R_933]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtGISObjectForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtGISObjectForCustomReport_trtBaseReference__idfsCustomReportType] FOREIGN KEY([idfsCustomReportType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtGISObjectForCustomReport] CHECK CONSTRAINT [FK_trtGISObjectForCustomReport_trtBaseReference__idfsCustomReportType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbVectorSurveillanceSessionSummary]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbVectorSurveillanceSessionSummary_trtVectorSubType__idfsVectorSubType] FOREIGN KEY([idfsVectorSubType])
REFERENCES [dbo].[trtVectorSubType] ([idfsVectorSubType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbVectorSurveillanceSessionSummary] CHECK CONSTRAINT [FK_tlbVectorSurveillanceSessionSummary_trtVectorSubType__idfsVectorSubType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisToDiagnosisGroupToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisToDiagnosisGroupToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtDiagnosisToDiagnosisGroupToCP] CHECK CONSTRAINT [FK_trtDiagnosisToDiagnosisGroupToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsIntendedUse_R_1299] FOREIGN KEY([idfsIntendedUse])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsIntendedUse_R_1299]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuery]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuery_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasQuery] CHECK CONSTRAINT [FK_tasQuery_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtResourceTranslation]  WITH NOCHECK ADD  CONSTRAINT [FK_trtResourceTranslation_trtResource] FOREIGN KEY([idfsResource])
REFERENCES [dbo].[trtResource] ([idfsResource])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtResourceTranslation] CHECK CONSTRAINT [FK_trtResourceTranslation_trtResource]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrDiagnosticActionMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrDiagnosticActionMTX_trtDiagnosis__idfsDiagnosis_R_1616] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbAggrDiagnosticActionMTX] CHECK CONSTRAINT [FK_tlbAggrDiagnosticActionMTX_trtDiagnosis__idfsDiagnosis_R_1616]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasLayoutToMapImage]  WITH NOCHECK ADD  CONSTRAINT [FK_tasLayoutToMapImage_tasMapImage__idfMapImage] FOREIGN KEY([idfMapImage])
REFERENCES [dbo].[tasMapImage] ([idfMapImage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasLayoutToMapImage] CHECK CONSTRAINT [FK_tasLayoutToMapImage_tasMapImage__idfMapImage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisBaseReference]  WITH NOCHECK ADD  CONSTRAINT [FK_gisBaseReference_gisReferenceType__idfsGISReferenceType_R_1632] FOREIGN KEY([idfsGISReferenceType])
REFERENCES [dbo].[gisReferenceType] ([idfsGISReferenceType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[gisBaseReference] CHECK CONSTRAINT [FK_gisBaseReference_gisReferenceType__idfsGISReferenceType_R_1632]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbSpeciesActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbSpeciesActual_tlbHerdActual__idfHerdActual_R_1479] FOREIGN KEY([idfHerdActual])
REFERENCES [dbo].[tlbHerdActual] ([idfHerdActual])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbSpeciesActual] CHECK CONSTRAINT [FK_tlbSpeciesActual_tlbHerdActual__idfHerdActual_R_1479]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtDiagnosisToGroupForReportType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtDiagnosisToGroupForReportType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtDiagnosisToGroupForReportType] CHECK CONSTRAINT [FK_trtDiagnosisToGroupForReportType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsGrazingPattern_R_1298] FOREIGN KEY([idfsGrazingPattern])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsGrazingPattern_R_1298]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQueryConditionGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQueryConditionGroup_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasQueryConditionGroup] CHECK CONSTRAINT [FK_tasQueryConditionGroup_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrDiagnosticActionMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrDiagnosticActionMTX_trtBaseReference__idfsDiagnosticAction_R_1117] FOREIGN KEY([idfsDiagnosticAction])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbAggrDiagnosticActionMTX] CHECK CONSTRAINT [FK_tlbAggrDiagnosticActionMTX_trtBaseReference__idfsDiagnosticAction_R_1117]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasView]  WITH NOCHECK ADD  CONSTRAINT [FK_tasView_tasLayout__idflLayout] FOREIGN KEY([idflLayout])
REFERENCES [dbo].[tasLayout] ([idflLayout])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasView] CHECK CONSTRAINT [FK_tasView_tasLayout__idflLayout]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBCountry]  WITH NOCHECK ADD  CONSTRAINT [FK__gisWKBCou__idfsG__37E6D44C] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisWKBCountry] CHECK CONSTRAINT [FK__gisWKBCou__idfsG__37E6D44C]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbSpeciesActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbSpeciesActual_trtSpeciesType__idfsSpeciesType_R_1651] FOREIGN KEY([idfsSpeciesType])
REFERENCES [dbo].[trtSpeciesType] ([idfsSpeciesType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbSpeciesActual] CHECK CONSTRAINT [FK_tlbSpeciesActual_trtSpeciesType__idfsSpeciesType_R_1651]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtEventType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtEventType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtEventType] CHECK CONSTRAINT [FK_trtEventType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsLivestockProductionType_R_1296] FOREIGN KEY([idfsLivestockProductionType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_trtBaseReference__idfsLivestockProductionType_R_1296]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuerySearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuerySearchField_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tasQuerySearchField] CHECK CONSTRAINT [FK_tasQuerySearchField_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrDiagnosticActionMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrDiagnosticActionMTX_tlbAggrMatrixVersionHeader__idfVersion] FOREIGN KEY([idfVersion])
REFERENCES [dbo].[tlbAggrMatrixVersionHeader] ([idfVersion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbAggrDiagnosticActionMTX] CHECK CONSTRAINT [FK_tlbAggrDiagnosticActionMTX_tlbAggrMatrixVersionHeader__idfVersion]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasView]  WITH NOCHECK ADD  CONSTRAINT [FK_tasView_tasViewColumn__idfChartXAxisViewColumn] FOREIGN KEY([idfChartXAxisViewColumn])
REFERENCES [dbo].[tasViewColumn] ([idfViewColumn])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasView] CHECK CONSTRAINT [FK_tasView_tasViewColumn__idfChartXAxisViewColumn]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakCaseContact]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakCaseContact_trtBaseReference_ContactRelationshipTypeID] FOREIGN KEY([ContactRelationshipTypeID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[OutbreakCaseContact] CHECK CONSTRAINT [FK_OutbreakCaseContact_trtBaseReference_ContactRelationshipTypeID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSystemFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSystemFunction_trtBaseReference__idfsObjectType_R_1581] FOREIGN KEY([idfsObjectType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtSystemFunction] CHECK CONSTRAINT [FK_trtSystemFunction_trtBaseReference__idfsObjectType_R_1581]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBEarthRoad]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBEarthRoad_gisCountry] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisWKBEarthRoad] CHECK CONSTRAINT [FK_gisWKBEarthRoad_gisCountry]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbSpecies]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbSpecies_tlbHerd__idfHerd_R_1479] FOREIGN KEY([idfHerd])
REFERENCES [dbo].[tlbHerd] ([idfHerd])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbSpecies] CHECK CONSTRAINT [FK_tlbSpecies_tlbHerd__idfHerd_R_1479]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtFFObjectForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtFFObjectForCustomReport_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtFFObjectForCustomReport] CHECK CONSTRAINT [FK_trtFFObjectForCustomReport_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_tlbHuman__idfHuman_R_1470] FOREIGN KEY([idfHuman])
REFERENCES [dbo].[tlbHuman] ([idfHuman])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_tlbHuman__idfHuman_R_1470]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuerySearchFieldCondition]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuerySearchFieldCondition_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasQuerySearchFieldCondition] CHECK CONSTRAINT [FK_tasQuerySearchFieldCondition_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrHumanCaseMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrHumanCaseMTX_tlbAggrMatrixVersionHeader__idfVersion] FOREIGN KEY([idfVersion])
REFERENCES [dbo].[tlbAggrMatrixVersionHeader] ([idfVersion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbAggrHumanCaseMTX] CHECK CONSTRAINT [FK_tlbAggrHumanCaseMTX_tlbAggrMatrixVersionHeader__idfVersion]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[LkupEIDSSMenu]  WITH NOCHECK ADD  CONSTRAINT [FK_LkupEIDSSMenu_BaseRef_ParentMenuID] FOREIGN KEY([EIDSSParentMenuID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[LkupEIDSSMenu] CHECK CONSTRAINT [FK_LkupEIDSSMenu_BaseRef_ParentMenuID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasView]  WITH NOCHECK ADD  CONSTRAINT [FK_tasView_tasViewColumn__idfMapAdminUnitViewColumn] FOREIGN KEY([idfMapAdminUnitViewColumn])
REFERENCES [dbo].[tasViewColumn] ([idfViewColumn])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasView] CHECK CONSTRAINT [FK_tasView_tasViewColumn__idfMapAdminUnitViewColumn]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[OutbreakCaseContact]  WITH NOCHECK ADD  CONSTRAINT [FK_OutbreakCaseContact_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[OutbreakCaseContact] CHECK CONSTRAINT [FK_OutbreakCaseContact_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtSystemFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_trtSystemFunction_trtBaseReference__idfsSystemFunction_R_1038] FOREIGN KEY([idfsSystemFunction])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtSystemFunction] CHECK CONSTRAINT [FK_trtSystemFunction_trtBaseReference__idfsSystemFunction_R_1038]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBEarthRoad]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBEarthRoad_gisOtherBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisWKBEarthRoad] CHECK CONSTRAINT [FK_gisWKBEarthRoad_gisOtherBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbSpecies]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbSpecies_tlbObservation__idfObservation_R_1474] FOREIGN KEY([idfObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbSpecies] CHECK CONSTRAINT [FK_tlbSpecies_tlbObservation__idfObservation_R_1474]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtFFObjectToDiagnosisForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtFFObjectToDiagnosisForCustomReport_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtFFObjectToDiagnosisForCustomReport] CHECK CONSTRAINT [FK_trtFFObjectToDiagnosisForCustomReport_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_tlbGeoLocation__idfFarmAddress_R_1473] FOREIGN KEY([idfFarmAddress])
REFERENCES [dbo].[tlbGeoLocation] ([idfGeoLocation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_tlbGeoLocation__idfFarmAddress_R_1473]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQuerySearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQuerySearchObject_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasQuerySearchObject] CHECK CONSTRAINT [FK_tasQuerySearchObject_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrHumanCaseMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrHumanCaseMTX_trtDiagnosis__idfsDiagnosis] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbAggrHumanCaseMTX] CHECK CONSTRAINT [FK_tlbAggrHumanCaseMTX_trtDiagnosis__idfsDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasView]  WITH NOCHECK ADD  CONSTRAINT [FK_tasView_tasglView__idfGlobalView_idfsLanguage] FOREIGN KEY([idfGlobalView], [idfsLanguage])
REFERENCES [dbo].[tasglView] ([idfView], [idfsLanguage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasView] CHECK CONSTRAINT [FK_tasView_tasglView__idfGlobalView_idfsLanguage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestForDisease]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestForDisease_trtBaseReference__idfsTestCategory] FOREIGN KEY([idfsTestCategory])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[trtTestForDisease] CHECK CONSTRAINT [FK_trtTestForDisease_trtBaseReference__idfsTestCategory]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBForest]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBForest_gisCountry] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[gisWKBForest] CHECK CONSTRAINT [FK_gisWKBForest_gisCountry]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbSpecies]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbSpecies_tlbSpeciesActual] FOREIGN KEY([idfSpeciesActual])
REFERENCES [dbo].[tlbSpeciesActual] ([idfSpeciesActual])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbSpecies] CHECK CONSTRAINT [FK_tlbSpecies_tlbSpeciesActual]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtGISBaseReferenceAttribute]  WITH NOCHECK ADD  CONSTRAINT [FK_trtGISBaseReferenceAttribute_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtGISBaseReferenceAttribute] CHECK CONSTRAINT [FK_trtGISBaseReferenceAttribute_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarm]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarm_tlbObservation__idfObservation_R_1471] FOREIGN KEY([idfObservation])
REFERENCES [dbo].[tlbObservation] ([idfObservation])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbFarm] CHECK CONSTRAINT [FK_tlbFarm_tlbObservation__idfObservation_R_1471]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchField]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchField_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasSearchField] CHECK CONSTRAINT [FK_tasSearchField_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrProphylacticActionMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrProphylacticActionMTX_tlbAggrMatrixVersionHeader__idfVersion] FOREIGN KEY([idfVersion])
REFERENCES [dbo].[tlbAggrMatrixVersionHeader] ([idfVersion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tlbAggrProphylacticActionMTX] CHECK CONSTRAINT [FK_tlbAggrProphylacticActionMTX_tlbAggrMatrixVersionHeader__idfVersion]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasView]  WITH NOCHECK ADD  CONSTRAINT [FK_tasView_trtBaseReference__idfsLanguage] FOREIGN KEY([idfsLanguage])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasView] CHECK CONSTRAINT [FK_tasView_trtBaseReference__idfsLanguage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestForDisease]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestForDisease_trtBaseReference__idfsTestName] FOREIGN KEY([idfsTestName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtTestForDisease] CHECK CONSTRAINT [FK_trtTestForDisease_trtBaseReference__idfsTestName]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBForest]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBForest_gisOtherBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisWKBForest] CHECK CONSTRAINT [FK_gisWKBForest_gisOtherBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbSpecies]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbSpecies_trtSpeciesType__idfsSpeciesType_R_1651] FOREIGN KEY([idfsSpeciesType])
REFERENCES [dbo].[trtSpeciesType] ([idfsSpeciesType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tlbSpecies] CHECK CONSTRAINT [FK_tlbSpecies_trtSpeciesType__idfsSpeciesType_R_1651]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtGISObjectForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtGISObjectForCustomReport_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtGISObjectForCustomReport] CHECK CONSTRAINT [FK_trtGISObjectForCustomReport_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchFieldsWithRelatedValues]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchFieldsWithRelatedValues_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasSearchFieldsWithRelatedValues] CHECK CONSTRAINT [FK_tasSearchFieldsWithRelatedValues_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrProphylacticActionMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrProphylacticActionMTX_trtSpeciesType__idfsSpeciesType_R_1119] FOREIGN KEY([idfsSpeciesType])
REFERENCES [dbo].[trtSpeciesType] ([idfsSpeciesType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbAggrProphylacticActionMTX] CHECK CONSTRAINT [FK_tlbAggrProphylacticActionMTX_trtSpeciesType__idfsSpeciesType_R_1119]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasMainTableForObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasMainTableForObject_tasSearchObject__idfsSearchObject] FOREIGN KEY([idfsSearchObject])
REFERENCES [dbo].[tasSearchObject] ([idfsSearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasMainTableForObject] CHECK CONSTRAINT [FK_tasMainTableForObject_tasSearchObject__idfsSearchObject]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestForDisease]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestForDisease_trtDiagnosis__idfsDiagnosis_R_892] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtTestForDisease] CHECK CONSTRAINT [FK_trtTestForDisease_trtDiagnosis__idfsDiagnosis_R_892]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBHighway]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBHighway_gisCountry] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisWKBHighway] CHECK CONSTRAINT [FK_gisWKBHighway_gisCountry]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPensideTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPensideTest_tlbMaterial__idfMaterial_R_1664] FOREIGN KEY([idfMaterial])
REFERENCES [dbo].[tlbMaterial] ([idfMaterial])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbPensideTest] CHECK CONSTRAINT [FK_tlbPensideTest_tlbMaterial__idfMaterial_R_1664]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtHACodeList]  WITH NOCHECK ADD  CONSTRAINT [FK_trtHACodeList_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtHACodeList] CHECK CONSTRAINT [FK_trtHACodeList_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbHerdActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbHerdActual_tlbFarmActual__idfFarmActual_R_1480] FOREIGN KEY([idfFarmActual])
REFERENCES [dbo].[tlbFarmActual] ([idfFarmActual])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbHerdActual] CHECK CONSTRAINT [FK_tlbHerdActual_tlbFarmActual__idfFarmActual_R_1480]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchFieldToFFParameter]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchFieldToFFParameter_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[tasSearchFieldToFFParameter] CHECK CONSTRAINT [FK_tasSearchFieldToFFParameter_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrProphylacticActionMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrProphylacticActionMTX_trtDiagnosis__idfsDiagnosis_R_1615] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbAggrProphylacticActionMTX] CHECK CONSTRAINT [FK_tlbAggrProphylacticActionMTX_trtDiagnosis__idfsDiagnosis_R_1615]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasMainTableForObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasMainTableForObject_tasSearchTable__idfMainSearchTable] FOREIGN KEY([idfMainSearchTable])
REFERENCES [dbo].[tasSearchTable] ([idfSearchTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tasMainTableForObject] CHECK CONSTRAINT [FK_tasMainTableForObject_tasSearchTable__idfMainSearchTable]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestForDisease]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestForDisease_trtSampleType__idfsSampleType] FOREIGN KEY([idfsSampleType])
REFERENCES [dbo].[trtSampleType] ([idfsSampleType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtTestForDisease] CHECK CONSTRAINT [FK_trtTestForDisease_trtSampleType__idfsSampleType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBHighway]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBHighway_gisOtherBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisWKBHighway] CHECK CONSTRAINT [FK_gisWKBHighway_gisOtherBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPensideTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPensideTest_tlbOffice_idfTestedByOffice] FOREIGN KEY([idfTestedByOffice])
REFERENCES [dbo].[tlbOffice] ([idfOffice])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbPensideTest] CHECK CONSTRAINT [FK_tlbPensideTest_tlbOffice_idfTestedByOffice]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtLanguageToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtLanguageToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtLanguageToCP] CHECK CONSTRAINT [FK_trtLanguageToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarmActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsAvianFarmType_R_1295] FOREIGN KEY([idfsAvianFarmType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbFarmActual] CHECK CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsAvianFarmType_R_1295]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchFieldToPersonalDataGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchFieldToPersonalDataGroup_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasSearchFieldToPersonalDataGroup] CHECK CONSTRAINT [FK_tasSearchFieldToPersonalDataGroup_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrProphylacticActionMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrProphylacticActionMTX_trtProphilacticAction__idfsProphilacticAction_R_1614] FOREIGN KEY([idfsProphilacticAction])
REFERENCES [dbo].[trtProphilacticAction] ([idfsProphilacticAction])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbAggrProphylacticActionMTX] CHECK CONSTRAINT [FK_tlbAggrProphylacticActionMTX_trtProphilacticAction__idfsProphilacticAction_R_1614]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasMainTableForObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasMainTableForObject_tasSearchTable__idfMandatorySearchTable] FOREIGN KEY([idfMandatorySearchTable])
REFERENCES [dbo].[tasSearchTable] ([idfSearchTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasMainTableForObject] CHECK CONSTRAINT [FK_tasMainTableForObject_tasSearchTable__idfMandatorySearchTable]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestTypeForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestTypeForCustomReport_trtBaseReference__idfsCustomReportType] FOREIGN KEY([idfsCustomReportType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtTestTypeForCustomReport] CHECK CONSTRAINT [FK_trtTestTypeForCustomReport_trtBaseReference__idfsCustomReportType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBLake]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBLake_gisCountry] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[gisWKBLake] CHECK CONSTRAINT [FK_gisWKBLake_gisCountry]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstCheckConstraints]  WITH NOCHECK ADD  CONSTRAINT [FK_tstCheckConstraints_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tstCheckConstraints] CHECK CONSTRAINT [FK_tstCheckConstraints_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPensideTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPensideTest_trtBaseReference__idfsPensideTestResult_R_1573] FOREIGN KEY([idfsPensideTestResult])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbPensideTest] CHECK CONSTRAINT [FK_tlbPensideTest_trtBaseReference__idfsPensideTestResult_R_1573]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtMaterialForDisease]  WITH NOCHECK ADD  CONSTRAINT [FK_trtMaterialForDisease_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtMaterialForDisease] CHECK CONSTRAINT [FK_trtMaterialForDisease_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbOutbreakNote]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbOutbreakNote_BaseRef_UpdatePriorityID] FOREIGN KEY([UpdatePriorityID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbOutbreakNote] CHECK CONSTRAINT [FK_tlbOutbreakNote_BaseRef_UpdatePriorityID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarmActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsAvianProductionType_R_1294] FOREIGN KEY([idfsAvianProductionType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbFarmActual] CHECK CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsAvianProductionType_R_1294]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchObject_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasSearchObject] CHECK CONSTRAINT [FK_tasSearchObject_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrSanitaryActionMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrSanitaryActionMTX_tlbAggrMatrixVersionHeader__idfVersion] FOREIGN KEY([idfVersion])
REFERENCES [dbo].[tlbAggrMatrixVersionHeader] ([idfVersion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbAggrSanitaryActionMTX] CHECK CONSTRAINT [FK_tlbAggrSanitaryActionMTX_tlbAggrMatrixVersionHeader__idfVersion]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasMapImage]  WITH NOCHECK ADD  CONSTRAINT [FK_tasMapImage_tasglMapImage__idfGlobalMapImage] FOREIGN KEY([idfGlobalMapImage])
REFERENCES [dbo].[tasglMapImage] ([idfMapImage])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasMapImage] CHECK CONSTRAINT [FK_tasMapImage_tasglMapImage__idfGlobalMapImage]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestTypeForCustomReport]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestTypeForCustomReport_trtBaseReference__idfsTestName] FOREIGN KEY([idfsTestName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[trtTestTypeForCustomReport] CHECK CONSTRAINT [FK_trtTestTypeForCustomReport_trtBaseReference__idfsTestName]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBLake]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBLake_gisOtherBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[gisWKBLake] CHECK CONSTRAINT [FK_gisWKBLake_gisOtherBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tstCheckConstraints]  WITH NOCHECK ADD  CONSTRAINT [FK_tstCheckConstraints_tstCheckTables__idfCheckTable] FOREIGN KEY([idfCheckTable])
REFERENCES [dbo].[tstCheckTables] ([idfCheckTable])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tstCheckConstraints] CHECK CONSTRAINT [FK_tstCheckConstraints_tstCheckTables__idfCheckTable]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPensideTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPensideTest_trtBaseReference__idfsPensideTestName] FOREIGN KEY([idfsPensideTestName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbPensideTest] CHECK CONSTRAINT [FK_tlbPensideTest_trtBaseReference__idfsPensideTestName]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtMaterialForDiseaseToCP]  WITH NOCHECK ADD  CONSTRAINT [FK_trtMaterialForDiseaseToCP_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[trtMaterialForDiseaseToCP] CHECK CONSTRAINT [FK_trtMaterialForDiseaseToCP_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarmActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsFarmCategory_R_1288] FOREIGN KEY([idfsFarmCategory])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbFarmActual] CHECK CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsFarmCategory_R_1288]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchObjectToSearchObject]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchObjectToSearchObject_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasSearchObjectToSearchObject] CHECK CONSTRAINT [FK_tasSearchObjectToSearchObject_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrSanitaryActionMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrSanitaryActionMTX_trtSanitaryAction__idfsSanitaryAction] FOREIGN KEY([idfsSanitaryAction])
REFERENCES [dbo].[trtSanitaryAction] ([idfsSanitaryAction])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbAggrSanitaryActionMTX] CHECK CONSTRAINT [FK_tlbAggrSanitaryActionMTX_trtSanitaryAction__idfsSanitaryAction]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQueryConditionGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQueryConditionGroup_tasQueryConditionGroup__idfParentQueryConditionGroup_R_1345] FOREIGN KEY([idfParentQueryConditionGroup])
REFERENCES [dbo].[tasQueryConditionGroup] ([idfQueryConditionGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tasQueryConditionGroup] CHECK CONSTRAINT [FK_tasQueryConditionGroup_tasQueryConditionGroup__idfParentQueryConditionGroup_R_1345]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestTypeToTestResult]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestTypeToTestResult_trtBaseReference__idfsTestName] FOREIGN KEY([idfsTestName])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtTestTypeToTestResult] CHECK CONSTRAINT [FK_trtTestTypeToTestResult_trtBaseReference__idfsTestName]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBLanduse]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBLanduse_gisCountry] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisWKBLanduse] CHECK CONSTRAINT [FK_gisWKBLanduse_gisCountry]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AccessRule]  WITH NOCHECK ADD  CONSTRAINT [FK_AccessRule_tflSiteGroup_GrantingActorSiteGroupID] FOREIGN KEY([GrantingActorSiteGroupID])
REFERENCES [dbo].[tflSiteGroup] ([idfSiteGroup])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[AccessRule] CHECK CONSTRAINT [FK_AccessRule_tflSiteGroup_GrantingActorSiteGroupID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPensideTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPensideTest_tlbPerson_idfTestedByPerson] FOREIGN KEY([idfTestedByPerson])
REFERENCES [dbo].[tlbPerson] ([idfPerson])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbPensideTest] CHECK CONSTRAINT [FK_tlbPensideTest_tlbPerson_idfTestedByPerson]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtMatrixColumn]  WITH NOCHECK ADD  CONSTRAINT [FK_trtMatrixColumn_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtMatrixColumn] CHECK CONSTRAINT [FK_trtMatrixColumn_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarmActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsOwnershipStructure_R_1287] FOREIGN KEY([idfsOwnershipStructure])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbFarmActual] CHECK CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsOwnershipStructure_R_1287]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchObjectToSystemFunction]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchObjectToSystemFunction_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasSearchObjectToSystemFunction] CHECK CONSTRAINT [FK_tasSearchObjectToSystemFunction_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrVetCaseMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrVetCaseMTX_tlbAggrMatrixVersionHeader__idfVersion] FOREIGN KEY([idfVersion])
REFERENCES [dbo].[tlbAggrMatrixVersionHeader] ([idfVersion])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[tlbAggrVetCaseMTX] CHECK CONSTRAINT [FK_tlbAggrVetCaseMTX_tlbAggrMatrixVersionHeader__idfVersion]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQueryConditionGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQueryConditionGroup_tasQuerySearchObject__idfQuerySearchObject_R_1344] FOREIGN KEY([idfQuerySearchObject])
REFERENCES [dbo].[tasQuerySearchObject] ([idfQuerySearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasQueryConditionGroup] CHECK CONSTRAINT [FK_tasQueryConditionGroup_tasQuerySearchObject__idfQuerySearchObject_R_1344]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtTestTypeToTestResult]  WITH NOCHECK ADD  CONSTRAINT [FK_trtTestTypeToTestResult_trtBaseReference__idfsTestResult_R_1596] FOREIGN KEY([idfsTestResult])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
       
ALTER TABLE [dbo].[trtTestTypeToTestResult] CHECK CONSTRAINT [FK_trtTestTypeToTestResult_trtBaseReference__idfsTestResult_R_1596]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBLanduse]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBLanduse_gisOtherBaseReference] FOREIGN KEY([idfsGeoObject])
REFERENCES [dbo].[gisOtherBaseReference] ([idfsGISOtherBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[gisWKBLanduse] CHECK CONSTRAINT [FK_gisWKBLanduse_gisOtherBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AccessRule]  WITH NOCHECK ADD  CONSTRAINT [FK_AccessRule_trtBaseReference] FOREIGN KEY([AccessRuleID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[AccessRule] CHECK CONSTRAINT [FK_AccessRule_trtBaseReference]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPensideTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPensideTest_trtDiagnosis_idfsDiagnosis] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbPensideTest] CHECK CONSTRAINT [FK_tlbPensideTest_trtDiagnosis_idfsDiagnosis]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtMatrixType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtMatrixType_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
      
ALTER TABLE [dbo].[trtMatrixType] CHECK CONSTRAINT [FK_trtMatrixType_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarmActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsMovementPattern_R_1300] FOREIGN KEY([idfsMovementPattern])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbFarmActual] CHECK CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsMovementPattern_R_1300]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchTable]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchTable_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tasSearchTable] CHECK CONSTRAINT [FK_tasSearchTable_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrVetCaseMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrVetCaseMTX_trtSpeciesType__idfsSpeciesType_R_1122] FOREIGN KEY([idfsSpeciesType])
REFERENCES [dbo].[trtSpeciesType] ([idfsSpeciesType])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tlbAggrVetCaseMTX] CHECK CONSTRAINT [FK_tlbAggrVetCaseMTX_trtSpeciesType__idfsSpeciesType_R_1122]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasQueryConditionGroup]  WITH NOCHECK ADD  CONSTRAINT [FK_tasQueryConditionGroup_tasQuerySearchObject__idfSubQuerySearchObject] FOREIGN KEY([idfSubQuerySearchObject])
REFERENCES [dbo].[tasQuerySearchObject] ([idfQuerySearchObject])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
     
ALTER TABLE [dbo].[tasQueryConditionGroup] CHECK CONSTRAINT [FK_tasQueryConditionGroup_tasQuerySearchObject__idfSubQuerySearchObject]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtVectorSubType]  WITH NOCHECK ADD  CONSTRAINT [FK_trtVectorSubType_trtBaseReference_idfsVectorSubType] FOREIGN KEY([idfsVectorSubType])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[trtVectorSubType] CHECK CONSTRAINT [FK_trtVectorSubType_trtBaseReference_idfsVectorSubType]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[gisWKBMainRiver]  WITH NOCHECK ADD  CONSTRAINT [FK_gisWKBMainRiver_gisCountry] FOREIGN KEY([idfsCountry])
REFERENCES [dbo].[gisCountry] ([idfsCountry])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[gisWKBMainRiver] CHECK CONSTRAINT [FK_gisWKBMainRiver_gisCountry]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[AccessRule]  WITH NOCHECK ADD  CONSTRAINT [FK_AccessRule_tstSite_GrantingActorSiteID] FOREIGN KEY([GrantingActorSiteID])
REFERENCES [dbo].[tstSite] ([idfsSite])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[AccessRule] CHECK CONSTRAINT [FK_AccessRule_tstSite_GrantingActorSiteID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbPensideTest]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbPensideTest_trtBaseReference__idfsPensideTestCategory] FOREIGN KEY([idfsPensideTestCategory])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
   
ALTER TABLE [dbo].[tlbPensideTest] CHECK CONSTRAINT [FK_tlbPensideTest_trtBaseReference__idfsPensideTestCategory]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[trtObjectTypeToObjectOperation]  WITH NOCHECK ADD  CONSTRAINT [FK_trtObjectTypeToObjectOperation_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[trtObjectTypeToObjectOperation] CHECK CONSTRAINT [FK_trtObjectTypeToObjectOperation_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbFarmActual]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsIntendedUse_R_1299] FOREIGN KEY([idfsIntendedUse])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
    
ALTER TABLE [dbo].[tlbFarmActual] CHECK CONSTRAINT [FK_tlbFarmActual_trtBaseReference__idfsIntendedUse_R_1299]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tasSearchTableJoinRule]  WITH NOCHECK ADD  CONSTRAINT [FK_tasSearchTableJoinRule_trtBaseReference_SourceSystemNameID] FOREIGN KEY([SourceSystemNameID])
REFERENCES [dbo].[trtBaseReference] ([idfsBaseReference])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
  
ALTER TABLE [dbo].[tasSearchTableJoinRule] CHECK CONSTRAINT [FK_tasSearchTableJoinRule_trtBaseReference_SourceSystemNameID]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd


set @cmd = N'
declare @cmd nvarchar(max)
set @cmd = N''
ALTER TABLE [dbo].[tlbAggrVetCaseMTX]  WITH NOCHECK ADD  CONSTRAINT [FK_tlbAggrVetCaseMTX_trtDiagnosis__idfsDiagnosis_R_1617] FOREIGN KEY([idfsDiagnosis])
REFERENCES [dbo].[trtDiagnosis] ([idfsDiagnosis])
'' exec [' + @DbName + '].sys.sp_executesql @cmd set @cmd = N'' 
 
ALTER TABLE [dbo].[tlbAggrVetCaseMTX] CHECK CONSTRAINT [FK_tlbAggrVetCaseMTX_trtDiagnosis__idfsDiagnosis_R_1617]
'' exec [' + @DbName + '].sys.sp_executesql @cmd
' execute sp_executesql @cmd



---


end


SET NOCOUNT OFF 
SET XACT_ABORT OFF 



