set nocount on
set XACT_ABORT on

BEGIN TRANSACTION;

BEGIN TRY

	-- Customization package for which specific changes should be applied
	declare	@CustomizationPackageName	nvarchar(20)
	set	@CustomizationPackageName = N'All'

	-- Script version
	declare	@Version	nvarchar(20)
	set	@Version = '7.0.475.002'

	-- Command to use in the calls of the stored procedure sp_executesql in case there are GO statements that should be avoided.
	-- Each call of sp_executesql can implement execution of the script between two GO statements
	declare @cmd nvarchar(max) = N''


  -- Verify database and script versions
  if	@Version is null
  begin
    raiserror ('Script doesn''t have version', 16, 1)
  end
  else begin
	-- Workaround to apply the script multiple times
	-- delete from tstLocalSiteOptions where strName = 'DBScript(' + @Version + ')' collate Cyrillic_General_CI_AS

    -- Check if script has already been applied by means of database version
    IF EXISTS (SELECT * FROM tstLocalSiteOptions tlso WHERE tlso.strName = 'DBScript(' + @Version + ')' collate Cyrillic_General_CI_AS)
    begin
      print	'Script with version ' + @Version + ' has already been applied to the database ' + DB_NAME() + N' on the server ' + @@servername + N'.'
    end
    else begin
		-- Common part

		declare	@DataAuditColumn table
		(	[idfColumn] bigint not null primary key,
			[idfTable] bigint not null,
			[strName] nvarchar(200) collate Cyrillic_General_CI_AS null,
			[strDescription] nvarchar(200) collate Cyrillic_General_CI_AS null
		)

		insert into	@DataAuditColumn
		(	[idfTable],
			[idfColumn],
			[strName],
			[strDescription]
		)
		values
		 (52577590000000 /*HumanActualAddlInfo*/, 51586990000128, N'EIDSSPersonID', N'Autogenerated Readable Person ID')
		,(52577590000000 /*HumanActualAddlInfo*/, 51586990000129, N'DeduplicationResultHumanActualID', N'Link to the result of deduplication of the Person')

		,(53577690000000 /*HumanAddlInfo*/, 51586990000130, N'AltAddressID', N'Link to the alternative address of the Person')
		,(53577690000000 /*HumanAddlInfo*/, 51586990000131, N'PassportNbr', N'Passport Number')
		,(53577690000000 /*HumanAddlInfo*/, 51586990000132, N'IsEmployedID', N'Indicator whether Person is employed')
		,(53577690000000 /*HumanAddlInfo*/, 51586990000133, N'IsStudentID', N'Indicator whether Person attends a school')
		,(53577690000000 /*HumanAddlInfo*/, 51586990000134, N'EmployerPhoneNbr', N'Employer Phone Number')
		,(53577690000000 /*HumanAddlInfo*/, 51586990000135, N'EmployedDTM', N'Date Employed')
		,(53577690000000 /*HumanAddlInfo*/, 51586990000136, N'SchoolName', N'School Name')
		,(53577690000000 /*HumanAddlInfo*/, 51586990000137, N'SchoolPhoneNbr', N'School Phone Number')
		,(53577690000000 /*HumanAddlInfo*/, 51586990000138, N'SchoolLastAttendDTM', N'Date Last Attended School')
		,(53577690000000 /*HumanAddlInfo*/, 51586990000139, N'ContactPhone2Nbr', N'Another Contact Phone Number')
		,(53577690000000 /*HumanAddlInfo*/, 51586990000140, N'ContactPhone2NbrTypeID', N'Another Contact Phone Number Type')
		,(53577690000000 /*HumanAddlInfo*/, 51586990000141, N'ContactPhone2CountryCode', N'Another Contact Phone Country Code')

		-- Add new fields into data audit columns dictionary
		insert into	dbo.tauColumn ([idfColumn], [idfTable], [strName], [strDescription], [SourceSystemNameID], [SourceSystemKeyValue], [AuditCreateUser], [AuditCreateDTM], [AuditUpdateUser], [AuditUpdateDTM])
		select		dac.idfColumn,
					dac.idfTable,
					dac.strName,
					dac.strDescription,
					10519001 /*EIDSSv7*/,
					N'[{"idfColumn":' + cast(dac.idfColumn as nvarchar(20)) + N'}]',
					'system',
					GETDATE(),
					NULL,
					NULL
		from		@DataAuditColumn dac
		join		tauTable t
		on			t.idfTable = dac.idfTable
		left join	tauColumn c_id
		on			c_id.idfColumn = dac.idfColumn
		left join	tauColumn c_tableid_name
		on			c_tableid_name.idfTable = dac.idfTable
					and c_tableid_name.strName = dac.strName collate Cyrillic_General_CI_AS
		where		c_id.idfColumn is null
					and c_tableid_name.idfColumn is null

		-- Add version of the current script to the database
		if not exists (select * from tstLocalSiteOptions lso where strName = 'DBScript(' + @Version + ')' collate Cyrillic_General_CI_AS)
		  INSERT INTO tstLocalSiteOptions (strName, strValue, SourceSystemNameID, SourceSystemKeyValue, AuditCreateDTM, AuditCreateUser) 
		  VALUES ('DBScript(' + @Version + ')', CONVERT(NVARCHAR, GETDATE(), 121), 10519001 /*EIDSSv7*/, N'[{"strName":"DBScript(' + @Version + N')"}]', GETDATE(), N'SYSTEM')
	end
end

END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0
        ROLLBACK TRANSACTION;

  declare	@err_number int
  declare	@err_severity int
  declare	@err_state int
  declare	@err_line int
  declare	@err_procedure	nvarchar(200)
  declare	@err_message	nvarchar(MAX)
  
  select	@err_number = ERROR_NUMBER(),
      @err_severity = ERROR_SEVERITY(),
      @err_state = ERROR_STATE(),
      @err_line = ERROR_LINE(),
      @err_procedure = ERROR_PROCEDURE(),
      @err_message = ERROR_MESSAGE()

  set	@err_message = N'An error occurred during script execution.
' + N'Msg ' + cast(isnull(@err_number, 0) as nvarchar(20)) + 
N', Level ' + cast(isnull(@err_severity, 0) as nvarchar(20)) + 
N', State ' + cast(isnull(@err_state, 0) as nvarchar(20)) + 
N', Line ' + cast(isnull(@err_line, 0) as nvarchar(20)) + N'
' + isnull(@err_message, N'Unknown error')

  raiserror	(	@err_message,
          17,
          @err_state
        ) with SETERROR

END CATCH;

IF @@TRANCOUNT > 0
    COMMIT TRANSACTION;

set XACT_ABORT off
set nocount off
